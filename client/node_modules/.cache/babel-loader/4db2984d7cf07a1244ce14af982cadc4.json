{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AddGroups.js\";\nimport React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addGroup } from '../../../../redux/actions/newTask';\n\nconst AddGroups = ({\n  variables,\n  addGroupRedux\n}) => {\n  const [group, setGroup] = useState([]);\n  const [noVars, setNoVarsError] = useState(false);\n  const [noValues, setNoValuesError] = useState(false);\n  const mockVars = {};\n  variables.forEach(({\n    variable\n  }) => {\n    mockVars[variable] = null;\n  });\n\n  const addNewGroup = () => {\n    if (variables.length) {\n      setNoVarsError(false);\n      let allValuesAdded = false;\n      group.forEach((item, i) => {\n        allValuesAdded = variables.some(({\n          variable\n        }) => item[variable] == null);\n      });\n\n      if (!allValuesAdded) {\n        setNoValuesError(false);\n        setGroup([...group, {\n          id: uuidv4(),\n          title: `Grupa`,\n          ...mockVars\n        }]);\n      } else setNoValuesError(true);\n    } else setNoVarsError(true);\n\n    console.log(group);\n  };\n\n  const addValues = (e, id, variable) => {\n    setNoValuesError(false);\n    setGroup([...group.map(subitem => {\n      if (id == subitem.id) return { ...subitem,\n        [variable]: e.target.value\n      };else return { ...subitem\n      };\n    })]);\n  };\n\n  const deleteItem = id => {\n    setGroup([...group.filter(removeItem => removeItem.id !== id)]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Dodaj grupy\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addNewGroup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Dodaj grup\\u0119\"), noVars && /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Nie podano zmiennych\"), noValues && /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Dodaj zmienne do porzedniej grupy\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, group.length > 0 && group.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, item.title, \" \", index + 1), variables.map(({\n    variable\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }, variable, ' = ', /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => addValues(e, item.id, variable),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => deleteItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  variables: state.newTask.variables\n});\n\nexport default connect(mapStateToProps, {\n  addGroup\n})(AddGroups);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AddGroups.js"],"names":["React","useState","TextareaAutosize","v4","uuidv4","connect","addGroup","AddGroups","variables","addGroupRedux","group","setGroup","noVars","setNoVarsError","noValues","setNoValuesError","mockVars","forEach","variable","addNewGroup","length","allValuesAdded","item","i","some","id","title","console","log","addValues","e","map","subitem","target","value","deleteItem","filter","removeItem","index","mapStateToProps","state","newTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../../../redux/actions/newTask';\r\n\r\nconst AddGroups = ({variables, addGroupRedux}) => {\r\n  const [group, setGroup] = useState([]);\r\n  const [noVars, setNoVarsError] = useState(false);\r\n  const [noValues, setNoValuesError] = useState(false);\r\n\r\n  const mockVars = {};\r\n\r\n  variables.forEach(({variable}) => {\r\n    mockVars[variable] = null\r\n  });\r\n\r\n\r\n  const addNewGroup = () => {\r\n    if(variables.length){\r\n      setNoVarsError(false);\r\n      let allValuesAdded = false;\r\n      group.forEach((item, i) => {\r\n        allValuesAdded = variables.some(({variable}) => item[variable] == null);\r\n      });\r\n\r\n      if(!allValuesAdded){\r\n        setNoValuesError(false);\r\n        setGroup(\r\n          [...group,\r\n            { id: uuidv4(),\r\n              title: `Grupa`,\r\n              ...mockVars\r\n            }\r\n          ]\r\n        );\r\n      }\r\n      else setNoValuesError(true);\r\n    }\r\n    else setNoVarsError(true);\r\n    console.log(group);\r\n  };\r\n\r\n  const addValues = (e, id, variable) =>{\r\n    setNoValuesError(false);\r\n    setGroup([...group.map( subitem => {\r\n      if(id == subitem.id) return {...subitem, [variable]: e.target.value }\r\n      else return {...subitem}\r\n    })]);\r\n  }\r\n\r\n  const deleteItem = (id) =>{\r\n    setGroup([...group.filter(removeItem => removeItem.id !== id )]);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h3>Dodaj grupy</h3>\r\n      <button onClick={e => addNewGroup()}>Dodaj grupÄ™</button>\r\n      { noVars && <h4>Nie podano zmiennych</h4>}\r\n      { noValues && <h4>Dodaj zmienne do porzedniej grupy</h4>}\r\n      <ul>\r\n        { group.length > 0 && group.map( (item, index) => (\r\n          <li>\r\n            <div>{item.title} {index+1}</div>\r\n            {variables.map(({variable}) =>\r\n              (<div>{variable}{' = '}\r\n                 <input onChange={e => addValues(e,item.id, variable)} required></input>\r\n               </div>\r\n              )\r\n            )}\r\n            <span onClick={() => deleteItem(item.id)}></span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  variables: state.newTask.variables\r\n})\r\n\r\nexport default connect(mapStateToProps,{addGroup})(AddGroups);\r\n"]},"metadata":{},"sourceType":"module"}