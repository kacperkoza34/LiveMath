{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\TasksList.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from \"react-redux\";\nimport { getTasks, clearTasks } from \"../../redux/actions/tasks\";\n\nconst TasksList = ({\n  classId,\n  sectionId,\n  getTasks,\n  clearTasks,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    if (classId && sectionId) {\n      getTasks({\n        classId,\n        sectionId\n      });\n    }\n  }, [sectionId]);\n\n  const showTaskType = type => {\n    switch (type) {\n      case \"openTask\":\n        return \"Zadanie otwarte\";\n\n      case \"closeTask\":\n        return \"Zadanie zamknięte\";\n\n      case \"booleanTask\":\n        return \"Zadanie prawda fałsz\";\n\n      default:\n        return \"Zadanie\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, classId && sectionId ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, data.length > 0 ? data.map(({\n    name,\n    taskType,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => clearTasks(),\n    to: `/display/${taskType}/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, showTaskType(taskType))))) : \"Nie ma zadań z tego działu\") : \"Wybierz dział\"));\n};\n\nTasksList.propTypes = {\n  classId: PropTypes.string,\n  sectionId: PropTypes.string,\n  getTasks: PropTypes.func,\n  tasks: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getTasks,\n  clearTasks\n})(TasksList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/TasksList.js"],"names":["React","useEffect","PropTypes","Link","Redirect","BeatLoader","connect","getTasks","clearTasks","TasksList","classId","sectionId","tasks","data","isFetching","errors","showTaskType","type","length","map","name","taskType","_id","propTypes","string","func","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,2BAArC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,OADiB;AAEjBC,EAAAA,SAFiB;AAGjBJ,EAAAA,QAHiB;AAIjBC,EAAAA,UAJiB;AAKjBI,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB;AALU,CAAD,KAMZ;AACJd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,IAAIC,SAAf,EAA0B;AACxBJ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;;AAMA,QAAMK,YAAY,GAAIC,IAAD,IAAU;AAC7B,YAAQA,IAAR;AACE,WAAK,UAAL;AACE,eAAO,iBAAP;;AACF,WAAK,WAAL;AACE,eAAO,mBAAP;;AACF,WAAK,aAAL;AACE,eAAO,sBAAP;;AACF;AACE,eAAO,SAAP;AARJ;AAUD,GAXD;;AAYA,sBACE,0CACGH,UAAU,gBACT,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAGT,0CACGJ,OAAO,IAAIC,SAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACK,MAAL,GAAc,CAAd,GACGL,IAAI,CAACM,GAAL,CAAS,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAD,kBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE,MAAMd,UAAU,EAD3B;AAEE,IAAA,EAAE,EAAG,YAAWa,QAAS,IAAGC,GAAI,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAP,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,YAAY,CAACK,QAAD,CAAnB,CALF,CADF,CADF,CADH,GAYG,4BAbN,CADD,GAiBC,eAlBJ,CAJJ,CADF;AA6BD,CAtDD;;AAwDAZ,SAAS,CAACc,SAAV,GAAsB;AACpBb,EAAAA,OAAO,EAAER,SAAS,CAACsB,MADC;AAEpBb,EAAAA,SAAS,EAAET,SAAS,CAACsB,MAFD;AAGpBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,IAHA;AAIpBb,EAAAA,KAAK,EAAEV,SAAS,CAACwB;AAJG,CAAtB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,KAAK,EAAEgB,KAAK,CAAChB;AADqB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAmDC,SAAnD,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from \"react-redux\";\nimport { getTasks, clearTasks } from \"../../redux/actions/tasks\";\n\nconst TasksList = ({\n  classId,\n  sectionId,\n  getTasks,\n  clearTasks,\n  tasks: { data, isFetching, errors },\n}) => {\n  useEffect(() => {\n    if (classId && sectionId) {\n      getTasks({ classId, sectionId });\n    }\n  }, [sectionId]);\n\n  const showTaskType = (type) => {\n    switch (type) {\n      case \"openTask\":\n        return \"Zadanie otwarte\";\n      case \"closeTask\":\n        return \"Zadanie zamknięte\";\n      case \"booleanTask\":\n        return \"Zadanie prawda fałsz\";\n      default:\n        return \"Zadanie\";\n    }\n  };\n  return (\n    <>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {classId && sectionId ? (\n            <ul>\n              {data.length > 0\n                ? data.map(({ name, taskType, _id }) => (\n                    <li>\n                      <Link\n                        onClick={() => clearTasks()}\n                        to={`/display/${taskType}/${_id}`}\n                      >\n                        <span>{name}</span>\n                        <span>{showTaskType(taskType)}</span>\n                      </Link>\n                    </li>\n                  ))\n                : \"Nie ma zadań z tego działu\"}\n            </ul>\n          ) : (\n            \"Wybierz dział\"\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nTasksList.propTypes = {\n  classId: PropTypes.string,\n  sectionId: PropTypes.string,\n  getTasks: PropTypes.func,\n  tasks: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps, { getTasks, clearTasks })(TasksList);\n"]},"metadata":{},"sourceType":"module"}