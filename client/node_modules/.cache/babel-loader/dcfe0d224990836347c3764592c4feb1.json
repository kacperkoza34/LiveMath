{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AdditionalVariables.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addAddVariable } from '../../../../redux/actions/newTask';\n\nconst AdditionalVariables = ({\n  addAddVariable,\n  additionalVariables,\n  variables\n}) => {\n  const [formData, setFormData] = useState({\n    variable: '',\n    description: ''\n  });\n  const [error, setError] = useState('');\n\n  const onChange = e => {\n    if (e.target.name == 'variable') {\n      if (e.target.value.length > 1) setError('Zmienne nazywamy jedną literą');else {\n        variables.some(({\n          variable\n        }) => variable == e.target.value);\n        setError('');\n      }\n      ;\n    } else setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = () => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Dodaj pomocnicze zmienne\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => onSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Nazwa\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: 'variable',\n    placeholder: \"Zmienna\",\n    value: formData.variable,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Opis\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: 'description',\n    placeholder: \"Opis\",\n    value: formData.description,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), error.length > 0 && error, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addAddVariable(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Dodaj pomocnicz\\u0105 zmienn\\u0105\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, additionalVariables.length > 0 && additionalVariables.map(({\n    variable,\n    description\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, variable, description))));\n};\n\nAdditionalVariables.propTypes = {};\n\nconst mapStateToProps = state => ({\n  additionalVariables: state.newTask.additionalVariables,\n  variables: state.newTask.variables\n});\n\nexport default connect(mapStateToProps, {\n  addAddVariable\n})(AdditionalVariables);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AdditionalVariables.js"],"names":["React","useState","PropTypes","connect","addAddVariable","AdditionalVariables","additionalVariables","variables","formData","setFormData","variable","description","error","setError","onChange","e","target","name","value","length","some","onSubmit","map","propTypes","mapStateToProps","state","newTask"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addAddVariable } from '../../../../redux/actions/newTask';\r\n\r\nconst AdditionalVariables = ({addAddVariable,additionalVariables,variables}) => {\r\n  const [formData, setFormData] = useState({\r\n    variable: '',\r\n    description: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = e =>{\r\n    if(e.target.name == 'variable' ){\r\n      if(e.target.value.length > 1) setError('Zmienne nazywamy jedną literą');\r\n      else {\r\n        variables.some(({variable}) => variable == e.target.value);\r\n        setError('')\r\n      };\r\n    }\r\n    else setFormData({...formData, [e.target.name]: e.target.value})\r\n  };\r\n  const onSubmit = () => {\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <h5>Dodaj pomocnicze zmienne</h5>\r\n      <form onSubmit={()=>onSubmit()}>\r\n        <h6>Nazwa</h6>\r\n        <input\r\n          name={'variable'}\r\n          placeholder=\"Zmienna\"\r\n          value={formData.variable}\r\n          onChange={e => onChange(e)}\r\n          required\r\n        />\r\n        <h6>Opis</h6>\r\n        <input\r\n          name={'description'}\r\n          placeholder=\"Opis\"\r\n          value={formData.description}\r\n          onChange={e => onChange(e)}\r\n          required\r\n        />\r\n      </form>\r\n      { error.length > 0 && error }\r\n      <button onClick={()=>addAddVariable()}>Dodaj pomocniczą zmienną</button>\r\n      <ul>\r\n        {additionalVariables.length > 0 &&  additionalVariables.map(({variable, description})=>\r\n          <li>{variable}{description}</li>\r\n        )}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nAdditionalVariables.propTypes = {\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  additionalVariables: state.newTask.additionalVariables,\r\n  variables: state.newTask.variables\r\n});\r\n\r\nexport default connect(mapStateToProps,{addAddVariable})(AdditionalVariables);\r\n"]},"metadata":{},"sourceType":"module"}