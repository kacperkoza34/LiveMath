{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AddGroups.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addGroup, deleteGroup } from '../../../../redux/actions/newTask';\n\nconst AddGroups = ({\n  variables,\n  content,\n  addGroup,\n  deleteGroup,\n  groups\n}) => {\n  useEffect(() => {}, [variables, content]);\n  const mockVars = {};\n  variables.forEach(({\n    variable\n  }, index) => {\n    mockVars[variable] = '';\n  });\n  const [formData, setFormData] = useState({ ...mockVars,\n    answer: ''\n  });\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addGroup({ ...formData,\n      id: uuidv4()\n    });\n    setFormData({ ...mockVars,\n      answer: ''\n    });\n  };\n\n  const displayGroup = item => {\n    const listItems = [];\n\n    for (let i in item) {\n      if (i != 'id') {\n        listItems.push( /*#__PURE__*/React.createElement(\"li\", {\n          styles: \"display: block\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }\n        }, i == 'answer' ? 'Odpowiedz:  ' : `${i}:  `), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }\n        }, item[i])));\n      }\n    }\n\n    const list = /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }\n    }, listItems);\n    return list;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, variables.length > 0 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Zdefinuj zmienne dla grup\"), variables.map(({\n    variable\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, variable + '  =  '), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Warto\\u015B\\u0107\",\n    name: variable,\n    value: formData[variable],\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Dodaj odpowiedz:\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Odpowiedz\",\n    name: \"answer\",\n    value: formData.answer,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Dodaj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, groups.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    styles: \"display: block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, `Grupa ${index + 1}`, displayGroup(item), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteGroup(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Usun grupe\")))));\n};\n\nconst mapStateToProps = state => ({\n  variables: state.newTask.data.variables,\n  content: state.newTask.data.content,\n  groups: state.newTask.data.groups\n});\n\nexport default connect(mapStateToProps, {\n  addGroup,\n  deleteGroup\n})(AddGroups);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AddGroups.js"],"names":["React","useState","useEffect","TextareaAutosize","v4","uuidv4","connect","addGroup","deleteGroup","AddGroups","variables","content","groups","mockVars","forEach","variable","index","formData","setFormData","answer","onChange","e","target","name","value","onSubmit","preventDefault","id","displayGroup","item","listItems","i","push","list","length","map","mapStateToProps","state","newTask","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup, deleteGroup } from '../../../../redux/actions/newTask';\r\n\r\nconst AddGroups = ({variables, content, addGroup, deleteGroup, groups}) => {\r\n  useEffect(()=>{\r\n\r\n  },[variables,content]);\r\n\r\n  const mockVars = {};\r\n  variables.forEach(({variable},index) => {\r\n    mockVars[variable] = '';\r\n  });\r\n\r\n  const [formData, setFormData] = useState({...mockVars,answer:''});\r\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    addGroup({...formData, id: uuidv4()});\r\n    setFormData({...mockVars, answer:''});\r\n  };\r\n  const displayGroup = (item) => {\r\n    const listItems = [];\r\n    for(let i in item){\r\n      if(i != 'id') {\r\n        listItems.push(<li styles='display: block'>\r\n        <span>{i == 'answer' ? 'Odpowiedz:  ' : `${i}:  `}</span>\r\n        <span>{item[i]}</span>\r\n        </li>)\r\n      }\r\n    }\r\n    const list = <ul>{listItems}</ul>;\r\n\r\n    return list;\r\n  }\r\n  return(\r\n    <>\r\n      {variables.length > 0 &&\r\n        <form onSubmit={e => onSubmit(e)}>\r\n          <h5>Zdefinuj zmienne dla grup</h5>\r\n          {variables.map(({variable})=>\r\n            <div>\r\n              <h5>{variable+'  =  '}</h5>\r\n              <input\r\n                placeholder=\"Wartość\"\r\n                name={variable}\r\n                value={formData[variable]}\r\n                onChange={e => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n          )\r\n          }\r\n          <div>\r\n            <h5>Dodaj odpowiedz:</h5>\r\n            <input\r\n              placeholder=\"Odpowiedz\"\r\n              name=\"answer\"\r\n              value={formData.answer}\r\n              onChange={e => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          { <input type=\"submit\" value=\"Dodaj\" />}\r\n        </form>\r\n      }\r\n      <ul>\r\n        {groups.map((item, index)=>\r\n          <li styles='display: block'>\r\n            {`Grupa ${index+1}`}{displayGroup(item)}\r\n            <button onClick={()=>deleteGroup(item.id)}>Usun grupe</button>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  variables: state.newTask.data.variables,\r\n  content: state.newTask.data.content,\r\n  groups: state.newTask.data.groups\r\n})\r\n\r\nexport default connect(mapStateToProps,{addGroup,deleteGroup})(AddGroups);\r\n"]},"metadata":{},"sourceType":"module"}