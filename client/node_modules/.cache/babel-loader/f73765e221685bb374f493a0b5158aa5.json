{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\CloseTask\\\\CloseTaskDumm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./CloseTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\n\nconst CloseTaskDumm = ({\n  match,\n  getCloseTask,\n  accountType,\n  setTaskConfig,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n  const [description, setDescription] = useState(\"\");\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  const onChange = e => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({\n      answer\n    }, i) => answer == taskStatus[i] && result++);\n    return `Wynik: ${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, taskStatus === null && prepareState(), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, data.content), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.points,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Punkty: \", data.points), taskStatus && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, data.data.map(({\n    content,\n    answer\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.listElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, `${i + 1}). `, /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + content + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), \"Podaj odpowiedz:\", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    autocomplete: \"off\",\n    name: `${i}`,\n    value: taskStatus[`${i}`],\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, \"Twoja odpowiedz:\"), /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + taskStatus[`${i}`] + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  })), checkAnswers && (taskStatus[`${i}`] == answer ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Ok\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.fail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"\\u0179le\")))))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Za\\u0142\\u0105cznik:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, data.content), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChekAnswers(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Sprawd\\u017A odpowiedzi\"), checkAnswers && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, displayResult()), accountType == \"teacher\" && /*#__PURE__*/React.createElement(AddTaskToClass, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 40\n    }\n  })));\n};\n\nCloseTaskDumm.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask,\n  setTaskConfig\n})(CloseTaskDumm);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTaskDumm.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","MathJax","AddTaskToClass","connect","getCloseTask","setTaskConfig","CloseTaskDumm","match","accountType","tasks","data","isFetching","errors","params","id","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","description","setDescription","prepareState","forEach","item","i","onChange","e","target","name","value","displayResult","result","answer","Object","keys","length","root","content","points","map","listElement","order","success","fail","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./CloseTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\n\nconst CloseTaskDumm = ({\n  match,\n  getCloseTask,\n  accountType,\n  setTaskConfig,\n  tasks: { data, isFetching, errors },\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n  const [description, setDescription] = useState(\"\");\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers });\n  };\n\n  const onChange = (e) => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus, [e.target.name]: e.target.value });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({ answer }, i) => answer == taskStatus[i] && result++);\n    return `Wynik: ${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {taskStatus === null && prepareState()}\n          <h4>{data.name}</h4>\n          <p>{data.content}</p>\n          <p className={styles.points}>Punkty: {data.points}</p>\n          {taskStatus && (\n            <ul>\n              {data.data.map(({ content, answer }, i) => (\n                <li className={styles.listElement}>\n                  <div className={styles.order}>\n                    {`${i + 1}). `}\n                    <MathJax content={\"`\" + content + \"`\"} />\n                  </div>\n                  Podaj odpowiedz:\n                  <div className={styles.item}>\n                    <input\n                      autocomplete=\"off\"\n                      name={`${i}`}\n                      value={taskStatus[`${i}`]}\n                      onChange={(e) => onChange(e)}\n                    ></input>\n                    <div>\n                      <span>Twoja odpowiedz:</span>\n                      <MathJax content={\"`\" + taskStatus[`${i}`] + \"`\"} />\n                    </div>\n                    {checkAnswers &&\n                      (taskStatus[`${i}`] == answer ? (\n                        <div className={styles.success}>Ok</div>\n                      ) : (\n                        <div className={styles.fail}>Źle</div>\n                      ))}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n          <h4>Załącznik:</h4>\n          <p>{data.content}</p>\n          <button onClick={() => setChekAnswers(true)}>\n            Sprawdź odpowiedzi\n          </button>\n          {checkAnswers && (\n            <div className={styles.result}>{displayResult()}</div>\n          )}\n          {accountType == \"teacher\" && <AddTaskToClass />}\n        </>\n      )}\n    </div>\n  );\n};\n\nCloseTaskDumm.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n});\n\nexport default connect(mapStateToProps, { getCloseTask, setTaskConfig })(\n  CloseTaskDumm\n);\n"]},"metadata":{},"sourceType":"module"}