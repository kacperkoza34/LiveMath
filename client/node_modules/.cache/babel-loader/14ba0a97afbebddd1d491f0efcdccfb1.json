{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\BooleanTask\\\\AddQuestion.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MathJax from '../../MathJax';\nimport { connect } from 'react-redux';\nimport { addGroup, deleteGroup } from '../../../../redux/actions/newTask';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddQuestion = ({\n  addGroup,\n  deleteGroup,\n  groups\n}) => {\n  const [formData, setFormData] = useState({\n    content: '',\n    answer: '',\n    id: uuidv4()\n  });\n  const [noAnswer, setNoAnswer] = useState(false);\n\n  const onChange = e => {\n    if (e.target.name === 'answer') {\n      if (e.target.value === '') setFormData({ ...formData,\n        [e.target.name]: ''\n      });else setFormData({ ...formData,\n        [e.target.name]: e.target.value === 'true' ? true : false\n      });\n    } else setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (formData.answer != '') {\n      addGroup(formData);\n      setFormData({\n        content: '',\n        answer: '',\n        id: uuidv4()\n      });\n    } else setNoAnswer(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Wprowadz r\\xF3wnanie\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"R\\xF3wnanie\",\n    name: \"content\",\n    value: formData.content,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Dodaj odpowiedz:\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"answer\",\n    value: formData.answer,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"---\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Prawda\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Fa\\u0142sz\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Dodaj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), groups.map(({\n    content,\n    answer,\n    id\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    styles: \"display: block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, `${index + 1}). `), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, content), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, `Odpowiedź: ${answer ? 'Prawda' : 'Fałsz'}`), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteGroup(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Usun grupe\")))));\n};\n\nconst mapStateToProps = state => ({\n  groups: state.newTask.data.groups\n});\n\nexport default connect(mapStateToProps, {\n  addGroup,\n  deleteGroup\n})(AddQuestion);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/BooleanTask/AddQuestion.js"],"names":["React","useState","PropTypes","MathJax","connect","addGroup","deleteGroup","v4","uuidv4","AddQuestion","groups","formData","setFormData","content","answer","id","noAnswer","setNoAnswer","onChange","e","target","name","value","onSubmit","preventDefault","map","index","mapStateToProps","state","newTask","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MathJax from '../../MathJax';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup, deleteGroup } from '../../../../redux/actions/newTask';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddQuestion = ({addGroup, deleteGroup, groups}) => {\r\n  const [formData, setFormData] = useState({\r\n    content: '',\r\n    answer: '',\r\n    id: uuidv4()\r\n  });\r\n\r\n  const [noAnswer, setNoAnswer] = useState(false);\r\n\r\n  const onChange = e =>{\r\n    if(e.target.name === 'answer'){\r\n      if (e.target.value === '') setFormData({...formData, [e.target.name]: ''});\r\n      else setFormData({...formData, [e.target.name]: e.target.value === 'true'? true : false});\r\n    }\r\n    else setFormData({...formData, [e.target.name]: e.target.value});\r\n  }\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(formData.answer != ''){\r\n      addGroup(formData);\r\n      setFormData({\r\n        content: '',\r\n        answer: '',\r\n        id: uuidv4()\r\n      });\r\n    }\r\n    else setNoAnswer(true);\r\n  };\r\n\r\n  return  <>\r\n    <form onSubmit={e => onSubmit(e)}>\r\n      <div>\r\n        <h5>Wprowadz równanie</h5>\r\n        <input\r\n          placeholder=\"Równanie\"\r\n          name=\"content\"\r\n          value={formData.content}\r\n          onChange={e => onChange(e)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <h5>Dodaj odpowiedz:</h5>\r\n        <select\r\n          name='answer'\r\n          value={formData.answer}\r\n          onChange={(e)=>onChange(e)}\r\n        >\r\n          <option value={''}>---</option>\r\n          <option value={true}>Prawda</option>\r\n          <option value={false}>Fałsz</option>\r\n        </select>\r\n      </div>\r\n      { <input type=\"submit\" value=\"Dodaj\" />}\r\n      {groups.map(({content,answer,id}, index)=>\r\n        <li styles='display: block'>\r\n          <span>{`${index+1}). `}</span>\r\n          <span>{content}</span>\r\n          <span>{`Odpowiedź: ${answer? 'Prawda': 'Fałsz'}`}</span>\r\n          <button onClick={()=>deleteGroup(id)}>Usun grupe</button>\r\n        </li>\r\n      )}\r\n    </form>\r\n  </>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  groups: state.newTask.data.groups\r\n});\r\n\r\nexport default connect(mapStateToProps,{addGroup,deleteGroup})(AddQuestion);\r\n"]},"metadata":{},"sourceType":"module"}