{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMath\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner'; //import ProfileItem from './ProfileItem';\n\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  console.log(profiles);\n  console.log(loading);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Developers\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Browser and connect with developers\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, profiles.length ? profiles.map(profile => {\n    console.log(profile);\n  }) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"No profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/components/profiles/Profiles.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getProfiles","Profiles","profile","profiles","loading","console","log","length","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AACpER,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,sBACE,0CACIA,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACN,uDACC;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFD,eAKC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACI,MAAT,GACCJ,QAAQ,CAACK,GAAT,CAAaN,OAAO,IAAG;AACrBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAED,GAHD,CADD,gBAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPN,CALD,CAFL,CADF;AAqBD,CA5BD;;AA8BAD,QAAQ,CAACQ,SAAT,GAAqB;AACnBT,EAAAA,WAAW,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADT;AAEnBT,EAAAA,OAAO,EAAEL,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,OAAO,EAAEY,KAAK,CAACZ;AADiB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,QAA1C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n//import ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(()=>{\r\n    getProfiles();\r\n  },[]);\r\n  console.log(profiles);\r\n  console.log(loading);\r\n\r\n  return(\r\n    <>\r\n      { loading ? <Spinner/> :\r\n         <>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            Browser and connect with developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length ? (\r\n              profiles.map(profile =>{\r\n                console.log(profile);\r\n\r\n              }\r\n              )\r\n            ) : <h4>No profiles found...</h4>}\r\n          </div>\r\n         </>\r\n       }\r\n    </>\r\n  )\r\n}\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}