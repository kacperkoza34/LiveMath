{"ast":null,"code":"import { CLASSES_SUCCESS, CLASSES_ERROR, UPDATE_CLASS } from '../actions/classes';\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case CLASSES_SUCCESS:\n      return { ...statePart,\n        data: action.payload\n      };\n\n    case CLASSES_ERROR:\n      return { ...statePart,\n        errors: action.payload\n      };\n\n    case UPDATE_CLASS:\n      return { ...statePart,\n        loading: false,\n        data: [...statePart.data.map(item => {\n          if (item._id == action.payload.id) item.open = action.payload.newStatus;\n          return item;\n        })]\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/reducers/classesReducer.js"],"names":["CLASSES_SUCCESS","CLASSES_ERROR","UPDATE_CLASS","reducer","statePart","action","type","data","payload","errors","loading","map","item","_id","id","open","newStatus"],"mappings":"AAAA,SACEA,eADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,oBAJP;AAMA,eAAe,SAASC,OAAT,CAAiBC,SAAS,GAAG,EAA7B,EAAiCC,MAAM,GAAG,EAA1C,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAL;AACE,aAAM,EACJ,GAAGI,SADC;AAEJG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAFT,OAAN;;AAIF,SAAKP,aAAL;AACE,aAAM,EACJ,GAAGG,SADC;AAEJK,QAAAA,MAAM,EAAEJ,MAAM,CAACG;AAFX,OAAN;;AAIF,SAAKN,YAAL;AACE,aAAO,EACL,GAAGE,SADE;AAELM,QAAAA,OAAO,EAAE,KAFJ;AAGLH,QAAAA,IAAI,EAAE,CAAC,GAAGH,SAAS,CAACG,IAAV,CAAeI,GAAf,CAAoBC,IAAD,IAAQ;AACnC,cAAGA,IAAI,CAACC,GAAL,IAAYR,MAAM,CAACG,OAAP,CAAeM,EAA9B,EAAkCF,IAAI,CAACG,IAAL,GAAYV,MAAM,CAACG,OAAP,CAAeQ,SAA3B;AAClC,iBAAOJ,IAAP;AACD,SAHS,CAAJ;AAHD,OAAP;;AASF;AACE,aAAOR,SAAP;AAtBJ;AAwBD","sourcesContent":["import {\r\n  CLASSES_SUCCESS,\r\n  CLASSES_ERROR,\r\n  UPDATE_CLASS\r\n} from '../actions/classes';\r\n\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case CLASSES_SUCCESS:\r\n      return{\r\n        ...statePart,\r\n        data: action.payload\r\n      }\r\n    case CLASSES_ERROR:\r\n      return{\r\n        ...statePart,\r\n        errors: action.payload\r\n      }\r\n    case UPDATE_CLASS:\r\n      return {\r\n        ...statePart,\r\n        loading: false,\r\n        data: [...statePart.data.map((item)=>{\r\n          if(item._id == action.payload.id) item.open = action.payload.newStatus;\r\n          return item\r\n        })]\r\n\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}