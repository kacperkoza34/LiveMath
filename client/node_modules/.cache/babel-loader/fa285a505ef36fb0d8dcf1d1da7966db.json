{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\DisplayPrompts.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MathJax from \"../../MathJax\";\n\nconst DisplayPrompts = ({\n  usedPrompts,\n  model,\n  variables\n}) => {\n  const [prompts, addOne] = useState(usedPrompts);\n  const [canAddPrompt, cantAddPrompt] = useState(true);\n\n  const addPrompts = () => {\n    if (prompts == 1) cantAddPrompt(false);\n    if (prompts < 2) addOne(prompts + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, canAddPrompt && usedPrompts != 2 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addPrompts(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Poka\\u017C podpowiedz\"), prompts >= 1 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, variables.map(({\n    variable,\n    description\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, variable + \"  -  \", description))), prompts == 2 && /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + model + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  }));\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default DisplayPrompts;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/DisplayPrompts.js"],"names":["React","useState","PropTypes","MathJax","DisplayPrompts","usedPrompts","model","variables","prompts","addOne","canAddPrompt","cantAddPrompt","addPrompts","map","variable","description","index","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AAC5D,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBR,QAAQ,CAACI,WAAD,CAAlC;AACA,QAAM,CAACK,YAAD,EAAeC,aAAf,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMW,UAAU,GAAG,MAAM;AACvB,QAAIJ,OAAO,IAAI,CAAf,EAAkBG,aAAa,CAAC,KAAD,CAAb;AAClB,QAAIH,OAAO,GAAG,CAAd,EAAiBC,MAAM,CAACD,OAAO,GAAG,CAAX,CAAN;AAClB,GAHD;;AAIA,sBACE,0CACGE,YAAY,IAAIL,WAAW,IAAI,CAA/B,iBACC;AAAQ,IAAA,OAAO,EAAE,MAAMO,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAIGJ,OAAO,IAAI,CAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAA4BC,KAA5B,kBACb;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAG,OADd,EAEGC,WAFH,CADD,CADH,CALJ,EAcGP,OAAO,IAAI,CAAX,iBAAgB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,MAAMF,KAAN,GAAc,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdnB,CADF;AAkBD,CAzBD;;AA2BAF,cAAc,CAACa,SAAf,GAA2B,EAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAEA,eAAef,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MathJax from \"../../MathJax\";\n\nconst DisplayPrompts = ({ usedPrompts, model, variables }) => {\n  const [prompts, addOne] = useState(usedPrompts);\n  const [canAddPrompt, cantAddPrompt] = useState(true);\n  const addPrompts = () => {\n    if (prompts == 1) cantAddPrompt(false);\n    if (prompts < 2) addOne(prompts + 1);\n  };\n  return (\n    <>\n      {canAddPrompt && usedPrompts != 2 && (\n        <button onClick={() => addPrompts()}>Poka≈º podpowiedz</button>\n      )}\n      {prompts >= 1 && (\n        <ul>\n          {variables.map(({ variable, description }, index) => (\n            <li key={index}>\n              {variable + \"  -  \"}\n              {description}\n            </li>\n          ))}\n        </ul>\n      )}\n      {prompts == 2 && <MathJax content={\"`\" + model + \"`\"} />}\n    </>\n  );\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = (state) => ({});\n\nexport default DisplayPrompts;\n"]},"metadata":{},"sourceType":"module"}