{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\CloseTask\\\\CloseTask.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from 'react-redux';\nimport { getBooleanTask } from '../../../../redux/actions/tasks';\n\nconst BooleanTask = ({\n  match,\n  getBooleanTask,\n  accountType,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getBooleanTask(match.params.id);\n  }, []);\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = '';\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  const onChange = e => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({\n      answer\n    }, i) => answer == taskStatus[i] && result++);\n    return `${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  console.log(taskStatus);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, taskStatus === null && prepareState(), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, data.description), taskStatus && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, data.data.map(({\n    content,\n    answer\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, `${i + 1}). `, /*#__PURE__*/React.createElement(MathJax, {\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }), \"Podaj odpowiedz:\", /*#__PURE__*/React.createElement(\"input\", {\n    name: `${i}`,\n    value: taskStatus[`${i}`],\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }), checkAnswers && (taskStatus[`${i}`] == answer ? 'Ok' : 'Źle')))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChekAnswers(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Sprawd\\u017A odpowiedzi\"), checkAnswers && displayResult()));\n};\n\nCloseTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getBooleanTask\n})(CloseTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTask.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","connect","getBooleanTask","BooleanTask","match","accountType","tasks","data","isFetching","errors","params","id","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","prepareState","forEach","item","i","onChange","e","target","name","value","displayResult","result","answer","Object","keys","length","console","log","description","map","content","CloseTask","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { connect } from 'react-redux';\r\nimport { getBooleanTask } from '../../../../redux/actions/tasks';\r\n\r\n\r\nconst BooleanTask = ({\r\n  match,\r\n  getBooleanTask,\r\n  accountType,\r\n  tasks: {\r\n    data,\r\n    isFetching,\r\n    errors,\r\n  }\r\n}) =>{\r\n\r\n  useEffect(()=>{\r\n    getBooleanTask(match.params.id);\r\n  },[]);\r\n\r\n  const answers = {};\r\n  const [taskStatus, setTaskStatus] =  useState(null);\r\n  const [checkAnswers, setChekAnswers] =  useState(false);\r\n\r\n  const prepareState = () => {\r\n    data.data.forEach((item, i) => {\r\n     answers[`${i}`] = '';\r\n    });\r\n    setTaskStatus({...answers});\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setChekAnswers(false);\r\n    setTaskStatus({...taskStatus, [e.target.name]: e.target.value});\r\n  };\r\n\r\n  const displayResult = () => {\r\n    let result = 0;\r\n    data.data.forEach(({answer}, i) => answer == taskStatus[i] && result++  );\r\n    return `${result}/${Object.keys(taskStatus).length}`\r\n  };\r\n  console.log(taskStatus)\r\n  return (\r\n    <>\r\n    {isFetching? <BeatLoader size={20}/> :\r\n      <>\r\n        { taskStatus === null && prepareState()}\r\n        <h4>{data.name}</h4>\r\n        <p>{data.description}</p>\r\n        {taskStatus &&\r\n          <ul>{data.data.map(({content,answer},i)=>\r\n                <li>{`${i+1}). `}\r\n                  <MathJax content={content} />\r\n                  Podaj odpowiedz:\r\n                  <input\r\n                    name={`${i}`}\r\n                    value={taskStatus[`${i}`]}\r\n                    onChange={(e)=>onChange(e)}\r\n                  ></input>\r\n                  { checkAnswers && (taskStatus[`${i}`] == answer? 'Ok': 'Źle')}\r\n                </li>\r\n                )\r\n              }\r\n          </ul>\r\n        }\r\n        <button onClick={()=>setChekAnswers(true)}>Sprawdź odpowiedzi</button>\r\n        {checkAnswers && displayResult()}\r\n      </>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nCloseTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks,\r\n  accountType: state.user.data.accountType\r\n})\r\n\r\nexport default connect(mapStateToProps,{getBooleanTask})(CloseTask);\r\n"]},"metadata":{},"sourceType":"module"}