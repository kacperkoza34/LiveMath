{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport { createPromise } from 'redux-promise-middleware'; // reducers\n\nimport authReducer from './reducers/authReducer';\nimport userReducer from './reducers/userReducer';\nimport profileReducer from './reducers/profileReducer';\nimport teacherReducer from './reducers/teacherReducer';\nimport classesReducer from './reducers/classesReducer';\nimport smallLoadingReducer from './reducers/smallLoadingReducer';\nimport studentReducer from './reducers/studentReducer';\nimport tasksReducer from './reducers/tasksReducer';\nimport newTasksReducer from './reducers/newTasksReducer'; /// applyMiddleware\n\nimport auth from './middleware/auth';\nimport user from './middleware/user';\nimport profile from './middleware/profile';\nimport teacher from './middleware/teacher';\nimport classes from './middleware/classes';\nimport student from './middleware/student';\nimport tasks from './middleware/tasks';\nimport newTask from './middleware/newTask';\nimport apiRequest from './middleware/apiRequest';\nconst initialState = {\n  auth: {\n    token: null,\n    isAuthenticated: false,\n    isFetching: false,\n    errors: false\n  },\n  user: {\n    data: {},\n    isFetching: true,\n    errors: false\n  },\n  profile: {\n    data: {},\n    isFetching: true,\n    errors: false\n  },\n  teacher: {\n    data: {},\n    isFetching: true,\n    errors: false\n  },\n  classes: {\n    data: [],\n    isFetching: true,\n    errors: false\n  },\n  smallLoading: false,\n  student: {\n    data: [],\n    isFetching: true,\n    errors: false\n  },\n  tasks: {\n    data: [],\n    taskConfig: {},\n    isFetching: false,\n    errors: false\n  },\n  newTask: {\n    content: '',\n    name: '',\n    variables: [],\n    additionalVariables: [],\n    model: '',\n    groups: [],\n    class: '',\n    section: ''\n  }\n};\nconst reducers = {\n  auth: authReducer,\n  user: userReducer,\n  profile: profileReducer,\n  teacher: teacherReducer,\n  classes: classesReducer,\n  smallLoading: smallLoadingReducer,\n  student: studentReducer,\n  tasks: tasksReducer,\n  newTask: newTasksReducer\n};\nconst combinedReducers = combineReducers(reducers);\nconst store = createStore(combinedReducers, initialState, composeWithDevTools(applyMiddleware( //createPromise(),\nthunk, //createLogger(),\nauth, user, profile, teacher, classes, student, tasks, newTask, apiRequest)));\nexport default store;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","createLogger","createPromise","authReducer","userReducer","profileReducer","teacherReducer","classesReducer","smallLoadingReducer","studentReducer","tasksReducer","newTasksReducer","auth","user","profile","teacher","classes","student","tasks","newTask","apiRequest","initialState","token","isAuthenticated","isFetching","errors","data","smallLoading","taskConfig","content","name","variables","additionalVariables","model","groups","class","section","reducers","combinedReducers","store"],"mappings":"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","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport { createLogger } from 'redux-logger'\r\nimport { createPromise } from 'redux-promise-middleware'\r\n\r\n\r\n// reducers\r\nimport authReducer from './reducers/authReducer';\r\nimport userReducer from './reducers/userReducer';\r\nimport profileReducer from './reducers/profileReducer';\r\nimport teacherReducer from './reducers/teacherReducer';\r\nimport classesReducer from './reducers/classesReducer';\r\nimport smallLoadingReducer from './reducers/smallLoadingReducer';\r\nimport studentReducer from './reducers/studentReducer';\r\nimport tasksReducer from './reducers/tasksReducer';\r\nimport newTasksReducer from './reducers/newTasksReducer';\r\n\r\n/// applyMiddleware\r\nimport auth from './middleware/auth';\r\nimport user from './middleware/user';\r\nimport profile from './middleware/profile';\r\nimport teacher from './middleware/teacher';\r\nimport classes from './middleware/classes';\r\nimport student from './middleware/student';\r\nimport tasks from './middleware/tasks';\r\nimport newTask from './middleware/newTask';\r\nimport apiRequest from './middleware/apiRequest';\r\n\r\n\r\nconst initialState ={\r\n  auth: {\r\n    token: null,\r\n    isAuthenticated: false,\r\n    isFetching: false,\r\n    errors: false\r\n  },\r\n  user: {\r\n    data: {},\r\n    isFetching: true,\r\n    errors: false\r\n  },\r\n  profile: {\r\n    data: {},\r\n    isFetching: true,\r\n    errors: false\r\n  },\r\n  teacher: {\r\n    data: {},\r\n    isFetching: true,\r\n    errors: false\r\n  },\r\n  classes: {\r\n    data: [],\r\n    isFetching: true,\r\n    errors: false\r\n  },\r\n  smallLoading: false,\r\n  student: {\r\n    data: [],\r\n    isFetching: true,\r\n    errors: false\r\n  },\r\n  tasks: {\r\n    data: [],\r\n    taskConfig: {},\r\n    isFetching: false,\r\n    errors: false,\r\n  },\r\n  newTask: {\r\n    content: '',\r\n    name: '',\r\n    variables: [],\r\n    additionalVariables: [],\r\n    model: '',\r\n    groups: [],\r\n    class: '',\r\n    section: ''\r\n  }\r\n};\r\n\r\nconst reducers = {\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  profile: profileReducer,\r\n  teacher: teacherReducer,\r\n  classes: classesReducer,\r\n  smallLoading: smallLoadingReducer,\r\n  student: studentReducer,\r\n  tasks: tasksReducer,\r\n  newTask: newTasksReducer\r\n};\r\n\r\nconst combinedReducers = combineReducers(reducers);\r\n\r\n\r\nconst store = createStore(\r\n  combinedReducers,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(\r\n      //createPromise(),\r\n      thunk,\r\n     //createLogger(),\r\n      auth,\r\n      user,\r\n      profile,\r\n      teacher,\r\n      classes,\r\n      student,\r\n      tasks,\r\n      newTask,\r\n      apiRequest\r\n    ),\r\n  )\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}