{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\SendSolution\\\\SendSolutionApi.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SendSolution = ({\n  checkAnswer,\n  answer,\n  correctAnswer,\n  error,\n  resolved,\n  accountType,\n  check,\n  sendSolution\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, resolved ? /*#__PURE__*/React.createElement(React.Fragment, null, toUpdate ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Zadanie wys\\u0142ano do weryfikacji\") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Zadanie rozwiazane\")) : /*#__PURE__*/React.createElement(React.Fragment, null, checkAnswer && /*#__PURE__*/React.createElement(React.Fragment, null, correctAnswer == answer ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendSolution(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Prze\\u015Blij rozwi\\u0105zanie\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendSolution(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Prze\\u015Blij z pro\\u015Bb\\u0105 o weryfikacje\"))));\n};\n\nexport default SelectPropmt;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/SendSolution/SendSolutionApi.js"],"names":["React","useState","PropTypes","SendSolution","checkAnswer","answer","correctAnswer","error","resolved","accountType","check","sendSolution","toUpdate","SelectPropmt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,WADoB;AAEpBC,EAAAA,MAFoB;AAGpBC,EAAAA,aAHoB;AAIpBC,EAAAA,KAJoB;AAKpBC,EAAAA,QALoB;AAMpBC,EAAAA,WANoB;AAOpBC,EAAAA,KAPoB;AAQpBC,EAAAA;AARoB,CAAD,KASf;AACJ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,gBACP,0CACGI,QAAQ,gBACP,gFADO,gBAGP,+DAJJ,CADO,gBASP,0CACGR,WAAW,iBACV,0CACGE,aAAa,IAAID,MAAjB,gBACC;AAAQ,IAAA,OAAO,EAAE,MAAMM,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADD,gBAKC;AAAQ,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDANJ,CAFJ,CAVJ,CADF;AA6BD,CAvCD;;AAyCA,eAAeE,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SendSolution = ({\n  checkAnswer,\n  answer,\n  correctAnswer,\n  error,\n  resolved,\n  accountType,\n  check,\n  sendSolution,\n}) => {\n  return (\n    <div>\n      {resolved ? (\n        <>\n          {toUpdate ? (\n            <>Zadanie wysłano do weryfikacji</>\n          ) : (\n            <>Zadanie rozwiazane</>\n          )}\n        </>\n      ) : (\n        <>\n          {checkAnswer && (\n            <>\n              {correctAnswer == answer ? (\n                <button onClick={() => sendSolution()}>\n                  Prześlij rozwiązanie\n                </button>\n              ) : (\n                <button onClick={() => sendSolution(true)}>\n                  Prześlij z prośbą o weryfikacje\n                </button>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SelectPropmt;\n"]},"metadata":{},"sourceType":"module"}