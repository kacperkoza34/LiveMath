{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated\n  },\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isAuthenticated) return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 37\n        }\n      }));else return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","BeatLoader","PrivateRoute","component","Component","auth","isAuthenticated","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFc;AAGpB,KAAGC;AAHiB,CAAD,KAIf;AACJ,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAIF,eAAJ,EAAqB,oBAAO,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP,CAArB,KACK,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACN,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAdD;;AAgBAN,YAAY,CAACO,SAAb,GAAyB;AACvBJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated },\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) return <Component {...props} />;\n        else return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}