{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AddGroups.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addGroup } from '../../../../redux/actions/newTask';\n\nconst AddGroups = ({\n  variables,\n  content,\n  addGroup\n}) => {\n  useEffect(() => {\n    setGroup([]);\n  }, [variables, content]);\n  const mockVars = {};\n  variables.forEach(({\n    variable\n  }, index) => {\n    mockVars[variable] = '';\n  });\n  const [group, setGroup] = useState({ ...mockVars,\n    answer: ''\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, variables.map(() => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Wprowadz r\\xF3wnanie\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"R\\xF3wnanie\",\n    name: \"content\",\n    value: formData.content,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(MathJax, {\n    content: formData.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Dodaj odpowiedz:\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Odpowiedz\",\n    name: \"answer\",\n    value: formData.answer,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Dodaj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  variables: state.newTask.data.variables,\n  content: state.newTask.data.content\n});\n\nexport default connect(mapStateToProps, {\n  addGroup\n})(AddGroups);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AddGroups.js"],"names":["React","useState","useEffect","TextareaAutosize","v4","uuidv4","connect","addGroup","AddGroups","variables","content","setGroup","mockVars","forEach","variable","index","group","answer","e","onSubmit","map","formData","onChange","mapStateToProps","state","newTask","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,mCAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBH,EAAAA;AAArB,CAAD,KAAoC;AACpDL,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFQ,EAEP,CAACF,SAAD,EAAWC,OAAX,CAFO,CAAT;AAIA,QAAME,QAAQ,GAAG,EAAjB;AACAH,EAAAA,SAAS,CAACI,OAAV,CAAkB,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAYC,KAAZ,KAAsB;AACtCH,IAAAA,QAAQ,CAACE,QAAD,CAAR,GAAqB,EAArB;AACD,GAFD;AAIA,QAAM,CAACE,KAAD,EAAQL,QAAR,IAAoBV,QAAQ,CAAC,EAAC,GAAGW,QAAJ;AAAcK,IAAAA,MAAM,EAAC;AAArB,GAAD,CAAlC;AAGA,sBACE,uDACA;AAAM,IAAA,QAAQ,EAAEC,CAAC,IAAIC,QAAQ,CAACD,CAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SAAS,CAACW,GAAV,CAAc,mBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AACE,IAAA,WAAW,EAAC,aADd;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEC,QAAQ,CAACX,OAHlB;AAIE,IAAA,QAAQ,EAAEQ,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAJzB;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CADH,eAaE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEG,QAAQ,CAACX,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,IAAA,WAAW,EAAC,WADd;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEW,QAAQ,CAACJ,MAHlB;AAIE,IAAA,QAAQ,EAAEC,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAJzB;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,eAwBI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADA,CADF;AA8BD,CA3CD;;AA6CA,MAAMK,eAAe,GAAGC,KAAK,KAAI;AAC/Bf,EAAAA,SAAS,EAAEe,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBjB,SADC;AAE/BC,EAAAA,OAAO,EAAEc,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBhB;AAFG,CAAJ,CAA7B;;AAKA,eAAeJ,OAAO,CAACiB,eAAD,EAAiB;AAAChB,EAAAA;AAAD,CAAjB,CAAP,CAAoCC,SAApC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../../../redux/actions/newTask';\r\n\r\nconst AddGroups = ({variables, content, addGroup}) => {\r\n  useEffect(()=>{\r\n    setGroup([]);\r\n  },[variables,content]);\r\n\r\n  const mockVars = {};\r\n  variables.forEach(({variable},index) => {\r\n    mockVars[variable] = '';\r\n  });\r\n\r\n  const [group, setGroup] = useState({...mockVars, answer:''});\r\n\r\n\r\n  return(\r\n    <>\r\n    <form onSubmit={e => onSubmit(e)}>\r\n      {variables.map(()=>\r\n        <div>\r\n          <h5>Wprowadz równanie</h5>\r\n          <input\r\n            placeholder=\"Równanie\"\r\n            name=\"content\"\r\n            value={formData.content}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>)\r\n      }\r\n      <MathJax content={formData.content}/>\r\n      <div>\r\n        <h5>Dodaj odpowiedz:</h5>\r\n        <input\r\n          placeholder=\"Odpowiedz\"\r\n          name=\"answer\"\r\n          value={formData.answer}\r\n          onChange={e => onChange(e)}\r\n          required\r\n        />\r\n      </div>\r\n      { <input type=\"submit\" value=\"Dodaj\" />}\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  variables: state.newTask.data.variables,\r\n  content: state.newTask.data.content\r\n})\r\n\r\nexport default connect(mapStateToProps,{addGroup})(AddGroups);\r\n"]},"metadata":{},"sourceType":"module"}