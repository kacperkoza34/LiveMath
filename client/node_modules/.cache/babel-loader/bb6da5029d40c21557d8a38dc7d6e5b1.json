{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\profile\\\\StudentProfile\\\\TasksList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearTasks } from \"../../../redux/actions/tasks\";\n\nconst TasksList = ({\n  tasks,\n  clearTasks\n}) => {\n  const compare = (a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  };\n\n  const sortedTasks = [...tasks].sort(compare);\n\n  const displayStatus = (deadLine, resolved) => {\n    console.log(Date.now(), resolved);\n    if (Date.parse(deadLine) < Date.now() && !resolved) return \"Niewykonane\";\n    if (Date.parse(deadLine) > Date.now()) return \"Do wykonania\";\n    if (resolved) return \"Rozwiązane\";\n  };\n\n  const displayOpenTask = ({\n    task,\n    deadLine,\n    promptsAllowed,\n    descriptionRequired,\n    resolved\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.openTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => clearTasks(),\n    to: `/display/openTask/${task._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, task.name)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Podpowiedzi:\", promptsAllowed ? \" dostępne\" : \" niedostępne\"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Opis: \", descriptionRequired ? \"wymagany\" : \"niewymagany\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Status:\", displayStatus(deadLine, resolved)), \" \")));\n\n  const displayCloseTask = ({\n    task,\n    deadLine,\n    resolved\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.closeTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => clearTasks(),\n    to: `/display/closeTask/${task._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, task.name)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Status:\", displayStatus(deadLine, resolved)), \" \")));\n\n  const displayBooleanTask = ({\n    task,\n    deadLine,\n    resolved\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.booleanTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => clearTasks(),\n    to: `/display/booleanTask/${task._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, task.name)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Status:\", displayStatus(deadLine, resolved)), \" \")));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, sortedTasks.map(item => {\n    if (item.taskType == \"taskClose\") return displayCloseTask(item);\n    if (item.taskType == \"taskOpen\") return displayOpenTask(item);\n    if (item.taskType == \"taskBoolean\") return displayBooleanTask(item);\n  }));\n};\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired\n};\nexport default connect(null, {\n  clearTasks\n})(TasksList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/profile/StudentProfile/TasksList.js"],"names":["React","PropTypes","styles","Moment","Link","connect","clearTasks","TasksList","tasks","compare","a","b","Date","parse","date","sortedTasks","sort","displayStatus","deadLine","resolved","console","log","now","displayOpenTask","task","promptsAllowed","descriptionRequired","openTask","name","_id","displayCloseTask","closeTask","displayBooleanTask","booleanTask","root","map","item","taskType","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearTasks } from \"../../../redux/actions/tasks\";\n\nconst TasksList = ({ tasks, clearTasks }) => {\n  const compare = (a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  };\n  const sortedTasks = [...tasks].sort(compare);\n\n  const displayStatus = (deadLine, resolved) => {\n    console.log(Date.now(), resolved);\n    if (Date.parse(deadLine) < Date.now() && !resolved) return \"Niewykonane\";\n    if (Date.parse(deadLine) > Date.now()) return \"Do wykonania\";\n    if (resolved) return \"Rozwiązane\";\n  };\n\n  const displayOpenTask = ({\n    task,\n    deadLine,\n    promptsAllowed,\n    descriptionRequired,\n    resolved,\n  }) => (\n    <div className={styles.openTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>\n            <Link\n              onClick={() => clearTasks()}\n              to={`/display/openTask/${task._id}`}\n            >\n              {task.name}\n            </Link>\n          </td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>Podpowiedzi:{promptsAllowed ? \" dostępne\" : \" niedostępne\"}</td>{\" \"}\n          <td>Opis: {descriptionRequired ? \"wymagany\" : \"niewymagany\"}</td>\n        </tr>\n        <tr>\n          <td>Status:{displayStatus(deadLine, resolved)}</td>{\" \"}\n        </tr>\n      </table>\n    </div>\n  );\n\n  const displayCloseTask = ({ task, deadLine, resolved }) => (\n    <div className={styles.closeTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>\n            {\" \"}\n            <Link\n              onClick={() => clearTasks()}\n              to={`/display/closeTask/${task._id}`}\n            >\n              {task.name}\n            </Link>\n          </td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>Status:{displayStatus(deadLine, resolved)}</td>{\" \"}\n        </tr>\n      </table>\n    </div>\n  );\n\n  const displayBooleanTask = ({ task, deadLine, resolved }) => (\n    <div className={styles.booleanTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>\n            {\" \"}\n            <Link\n              onClick={() => clearTasks()}\n              to={`/display/booleanTask/${task._id}`}\n            >\n              {task.name}\n            </Link>\n          </td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>Status:{displayStatus(deadLine, resolved)}</td>{\" \"}\n        </tr>\n      </table>\n    </div>\n  );\n\n  return (\n    <div className={styles.root}>\n      {sortedTasks.map((item) => {\n        if (item.taskType == \"taskClose\") return displayCloseTask(item);\n        if (item.taskType == \"taskOpen\") return displayOpenTask(item);\n        if (item.taskType == \"taskBoolean\") return displayBooleanTask(item);\n      })}\n    </div>\n  );\n};\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default connect(null, { clearTasks })(TasksList);\n"]},"metadata":{},"sourceType":"module"}