{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\NewTask.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst NewTask = () => {\n  const [taskType, setTaskType] = useState(null);\n  const [redirect, setRedirect] = useState(null);\n  const [valiadtionError, setError] = useState(false);\n\n  const addTask = () => {\n    if (taskType) setRedirect(true);else setError(true);\n  };\n\n  if (taskType && redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/add/${taskType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 35\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Dodaj zadanie\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: taskType,\n    onChange: e => setTaskType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"---\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 'openTask',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Zadanie otwarte\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 'closeTask',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Zadanie zamkni\\u0119te\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 'booleanTask',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Zadanie prawda fa\\u0142sz\")));\n};\n\nexport default NewTask;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/NewTask.js"],"names":["React","useState","PropTypes","Redirect","NewTask","taskType","setTaskType","redirect","setRedirect","valiadtionError","setError","addTask","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,QAAlB,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpB,QAAGN,QAAH,EAAaG,WAAW,CAAC,IAAD,CAAX,CAAb,KACKE,QAAQ,CAAC,IAAD,CAAR;AACN,GAHD;;AAKA,MAAGL,QAAQ,IAAIE,QAAf,EAAyB,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,QAAOF,QAAS,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEzB,sBAAO,uDACL;AAAQ,IAAA,OAAO,EAAE,MAAIM,OAAO,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,eAEL;AACE,IAAA,KAAK,EAAEN,QADT;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAKN,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAKE;AAAQ,IAAA,KAAK,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAME;AAAQ,IAAA,KAAK,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANF,eAOE;AAAQ,IAAA,KAAK,EAAE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPF,CAFK,CAAP;AAaD,CAzBD;;AA6BA,eAAeV,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst NewTask = () => {\r\n  const [taskType, setTaskType] = useState(null);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [valiadtionError, setError] = useState(false);\r\n\r\n  const addTask = () => {\r\n    if(taskType) setRedirect(true);\r\n    else setError(true);\r\n  }\r\n\r\n  if(taskType && redirect) return <Redirect to={`/add/${taskType}`} />\r\n\r\n  return <>\r\n    <button onClick={()=>addTask()}>Dodaj zadanie</button>\r\n    <select\r\n      value={taskType}\r\n      onChange={(e)=>setTaskType(e.target.value)}\r\n    >\r\n      <option value={null}>---</option>\r\n      <option value={'openTask'}>Zadanie otwarte</option>\r\n      <option value={'closeTask'}>Zadanie zamknięte</option>\r\n      <option value={'booleanTask'}>Zadanie prawda fałsz</option>\r\n    </select>\r\n  </>\r\n\r\n}\r\n\r\n\r\n\r\nexport default NewTask;\r\n"]},"metadata":{},"sourceType":"module"}