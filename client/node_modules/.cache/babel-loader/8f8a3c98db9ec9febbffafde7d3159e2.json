{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport DashboardTeacher from './DashboardTeacher';\nimport DashboardStudent from './DashboardStudent';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Dashboard = ({\n  auth: {\n    isFetching: {\n      authFetching\n    }\n  },\n  user: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  const content = isFetching || authFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, data.accountType == 'student' ? /*#__PURE__*/React.createElement(DashboardStudent, {\n    user: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(DashboardTeacher, {\n    user: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }));\n  return errors ? errors.data.msg : content;\n};\n\nDashboard.propTypes = {\n  getTeacherProfile: PropTypes.func.isRequired,\n  getStudentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","connect","Link","DashboardTeacher","DashboardStudent","BeatLoader","Dashboard","auth","isFetching","authFetching","user","data","errors","content","accountType","msg","propTypes","getTeacherProfile","func","isRequired","getStudentProfile","object","profile","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AAAd,GAAR;AAAyCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAF;AAAQH,IAAAA,UAAR;AAAoBI,IAAAA;AAApB;AAA/C,CAAD,KAAmF;AACnG,QAAMC,OAAO,GACXL,UAAU,IAAIC,YAAd,gBAA6B,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,gBACE,0CACIE,IAAI,CAACG,WAAL,IAAoB,SAApB,gBACA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAEA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ;AASA,SAAOC,MAAM,GAAGA,MAAM,CAACD,IAAP,CAAYI,GAAf,GAAqBF,OAAlC;AACD,CAXD;;AAaAP,SAAS,CAACU,SAAV,GAAsB;AACpBC,EAAAA,iBAAiB,EAAEjB,SAAS,CAACkB,IAAV,CAAeC,UADd;AAEpBC,EAAAA,iBAAiB,EAAEpB,SAAS,CAACkB,IAAV,CAAeC,UAFd;AAGpBZ,EAAAA,IAAI,EAAEP,SAAS,CAACqB,MAAV,CAAiBF,UAHH;AAIpBG,EAAAA,OAAO,EAAEtB,SAAS,CAACqB,MAAV,CAAiBF;AAJN,CAAtB;;AAOA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd,IADoB;AAEhCH,EAAAA,IAAI,EAAEiB,KAAK,CAACjB;AAFoB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACsB,eAAD,CAAP,CAAyBjB,SAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport DashboardTeacher from './DashboardTeacher';\r\nimport DashboardStudent from './DashboardStudent';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst Dashboard = ({ auth: { isFetching: { authFetching }} ,user: { data, isFetching, errors } }) => {\r\n  const content = (\r\n    isFetching || authFetching ? <BeatLoader size={50}/> :\r\n      <>\r\n        { data.accountType == 'student' ?\r\n          <DashboardStudent user={data} /> :\r\n          <DashboardTeacher user={data} />\r\n        }\r\n      </>\r\n  );\r\n  return errors ? errors.data.msg : content\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getTeacherProfile: PropTypes.func.isRequired,\r\n  getStudentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}