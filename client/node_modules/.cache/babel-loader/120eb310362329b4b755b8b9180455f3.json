{"ast":null,"code":"import { API_REQUEST } from '../actions/apiRequest';\nimport Axios from 'axios';\nimport { fetchingStop } from '../actions/fetching';\n\nconst apiRequest = ({\n  dispatch\n}) => next => action => {\n  next(action);\n\n  if (action.type === API_REQUEST) {\n    const {\n      method,\n      url,\n      onSucces,\n      onError,\n      body,\n      config\n    } = action.meta;\n    Axios({\n      method: method,\n      url: url,\n      data: body,\n      config: config\n    }).then(({\n      data\n    }) => {\n      dispatch(onSucces(data));\n      dispatch(fetchingStop());\n    }).catch(({\n      response\n    }) => {\n      dispatch(onError(response));\n      dispatch(fetchingStop());\n    });\n  }\n};\n\nexport default apiRequest;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/middleware/apiRequest.js"],"names":["API_REQUEST","Axios","fetchingStop","apiRequest","dispatch","next","action","type","method","url","onSucces","onError","body","config","meta","data","then","catch","response"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,YADF,QAEO,qBAFP;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgBC,IAAI,IAAIC,MAAM,IAAI;AACnDD,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAC/B,UAAM;AAAEQ,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA,OAAzB;AAAkCC,MAAAA,IAAlC;AAAwCC,MAAAA;AAAxC,QAAmDP,MAAM,CAACQ,IAAhE;AACAb,IAAAA,KAAK,CAAC;AACJO,MAAAA,MAAM,EAAEA,MADJ;AAEJC,MAAAA,GAAG,EAAEA,GAFD;AAGJM,MAAAA,IAAI,EAAEH,IAHF;AAIJC,MAAAA,MAAM,EAAEA;AAJJ,KAAD,CAAL,CAMGG,IANH,CAMS,CAAC;AAACD,MAAAA;AAAD,KAAD,KAAW;AAChBX,MAAAA,QAAQ,CAACM,QAAQ,CAACK,IAAD,CAAT,CAAR;AACAX,MAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACD,KATH,EAWGe,KAXH,CAWU,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAe;AACrBd,MAAAA,QAAQ,CAACO,OAAO,CAACO,QAAD,CAAR,CAAR;AACAd,MAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACD,KAdH;AAgBD;AACF,CArBD;;AAuBA,eAAeC,UAAf","sourcesContent":["import { API_REQUEST } from '../actions/apiRequest';\r\nimport Axios from 'axios';\r\n\r\nimport {\r\n  fetchingStop\r\n} from '../actions/fetching'\r\n\r\nconst apiRequest = ({dispatch}) => next => action => {\r\n  next(action);\r\n  if( action.type === API_REQUEST) {\r\n    const { method, url, onSucces, onError, body, config } = action.meta;\r\n    Axios({\r\n      method: method,\r\n      url: url,\r\n      data: body,\r\n      config: config\r\n    })\r\n      .then( ({data}) =>{\r\n        dispatch(onSucces(data));\r\n        dispatch(fetchingStop());\r\n      }\r\n      )\r\n      .catch( ({response}) =>{\r\n        dispatch(onError(response));\r\n        dispatch(fetchingStop());\r\n      }\r\n      );\r\n  }\r\n};\r\n\r\nexport default apiRequest;\r\n"]},"metadata":{},"sourceType":"module"}