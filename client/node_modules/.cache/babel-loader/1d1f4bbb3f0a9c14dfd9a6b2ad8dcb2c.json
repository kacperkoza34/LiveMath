{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AddGroups.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addGroup } from '../../../../redux/actions/newTask';\n\nconst AddGroups = ({\n  variables,\n  content,\n  addGroup\n}) => {\n  useEffect(() => {}, [variables, content]);\n  const mockVars = {};\n  variables.forEach(({\n    variable\n  }, index) => {\n    mockVars[variable] = '';\n  });\n  const [formData, setFormData] = useState({ ...mockVars,\n    answer: ''\n  });\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {};\n\n  console.log(formData);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, variables.length > 0 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, variables.map(({\n    variable\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, variable + '  =  '), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Warto\\u015B\\u0107\",\n    name: variable,\n    value: formData[variable],\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Dodaj odpowiedz:\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Odpowiedz\",\n    name: \"answer\",\n    value: formData.answer,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Dodaj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  variables: state.newTask.data.variables,\n  content: state.newTask.data.content\n});\n\nexport default connect(mapStateToProps, {\n  addGroup\n})(AddGroups);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AddGroups.js"],"names":["React","useState","useEffect","TextareaAutosize","v4","uuidv4","connect","addGroup","AddGroups","variables","content","mockVars","forEach","variable","index","formData","setFormData","answer","onChange","e","target","name","value","onSubmit","console","log","length","map","mapStateToProps","state","newTask","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../../../redux/actions/newTask';\r\n\r\nconst AddGroups = ({variables, content, addGroup}) => {\r\n  useEffect(()=>{\r\n\r\n  },[variables,content]);\r\n\r\n  const mockVars = {};\r\n  variables.forEach(({variable},index) => {\r\n    mockVars[variable] = '';\r\n  });\r\n\r\n  const [formData, setFormData] = useState({...mockVars, answer:''});\r\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n  const onSubmit = e => {\r\n\r\n  };\r\n  console.log(formData);\r\n  return(\r\n    <>\r\n      {variables.length > 0 &&\r\n        <form onSubmit={e => onSubmit(e)}>\r\n          {variables.map(({variable})=>\r\n            <div>\r\n              <h5>{variable+'  =  '}</h5>\r\n              <input\r\n                placeholder=\"Wartość\"\r\n                name={variable}\r\n                value={formData[variable]}\r\n                onChange={e => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n          )\r\n          }\r\n          <div>\r\n            <h5>Dodaj odpowiedz:</h5>\r\n            <input\r\n              placeholder=\"Odpowiedz\"\r\n              name=\"answer\"\r\n              value={formData.answer}\r\n              onChange={e => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          { <input type=\"submit\" value=\"Dodaj\" />}\r\n        </form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  variables: state.newTask.data.variables,\r\n  content: state.newTask.data.content\r\n})\r\n\r\nexport default connect(mapStateToProps,{addGroup})(AddGroups);\r\n"]},"metadata":{},"sourceType":"module"}