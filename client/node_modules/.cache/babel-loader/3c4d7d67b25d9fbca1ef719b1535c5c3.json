{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\DisplayPrompts\\\\DisplayPrompts.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DisplayPrompts.module.scss\";\nimport PromptsDumm from \"./PromptsDumm\";\nimport MathJax from \"../../../MathJax\";\nimport { connect } from \"react-redux\";\nimport { usePrompt } from \"../../../../../redux/actions/resolveTask\";\n\nconst DisplayPrompts = ({\n  usedPrompts,\n  model,\n  variables,\n  accountType,\n  taskId,\n  usePrompt\n}) => {\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, accountType == \"teacher\" && /*#__PURE__*/React.createElement(PromptsDumm, {\n    model: model,\n    variables: variables,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), accountType == \"student\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      usePrompt();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Poka\\u017C podpowiedz\"), usedPrompts >= 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Zmienne:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, variables.map(({\n    variable,\n    description\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, variable + \"  -  \", description)))), usedPrompts == 2 && /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Wz\\xF3r:\"), /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + model + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))));\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = state => ({\n  usedPrompts: state.tasks.taskConfig.usedPrompts\n});\n\nexport default connect(mapStateToProps, {\n  usePrompt\n})(DisplayPrompts);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/DisplayPrompts/DisplayPrompts.js"],"names":["React","useEffect","PropTypes","styles","PromptsDumm","MathJax","connect","usePrompt","DisplayPrompts","usedPrompts","model","variables","accountType","taskId","root","map","variable","description","index","propTypes","mapStateToProps","state","tasks","taskConfig"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0CAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,WADsB;AAEtBC,EAAAA,KAFsB;AAGtBC,EAAAA,SAHsB;AAItBC,EAAAA,WAJsB;AAKtBC,EAAAA,MALsB;AAMtBN,EAAAA;AANsB,CAAD,KAOjB;AACJN,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,WAAW,IAAI,SAAf,iBACC,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAApB;AAA2B,IAAA,SAAS,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIGC,WAAW,IAAI,SAAf,iBACC;AAAK,IAAA,SAAS,EAAET,MAAM,CAACW,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,SAAS;AACV,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAQGE,WAAW,IAAI,CAAf,iBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,CAACI,GAAV,CAAc,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAA4BC,KAA5B,kBACb;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAG,OADd,EAEGC,WAFH,CADD,CADH,CAHF,CATJ,EAsBGR,WAAW,IAAI,CAAf,iBACC,0CACG,GADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,MAAMC,KAAN,GAAc,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAvBJ,CALJ,CADF;AAuCD,CAjDD;;AAmDAF,cAAc,CAACW,SAAf,GAA2B,EAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,WAAW,EAAEY,KAAK,CAACC,KAAN,CAAYC,UAAZ,CAAuBd;AADF,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,cAAxC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DisplayPrompts.module.scss\";\nimport PromptsDumm from \"./PromptsDumm\";\nimport MathJax from \"../../../MathJax\";\nimport { connect } from \"react-redux\";\nimport { usePrompt } from \"../../../../../redux/actions/resolveTask\";\n\nconst DisplayPrompts = ({\n  usedPrompts,\n  model,\n  variables,\n  accountType,\n  taskId,\n  usePrompt,\n}) => {\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      {accountType == \"teacher\" && (\n        <PromptsDumm model={model} variables={variables} />\n      )}\n      {accountType == \"student\" && (\n        <div className={styles.root}>\n          <button\n            onClick={() => {\n              usePrompt();\n            }}\n          >\n            Pokaż podpowiedz\n          </button>\n          {usedPrompts >= 1 && (\n            <>\n              <h4>Zmienne:</h4>\n\n              <ul>\n                {variables.map(({ variable, description }, index) => (\n                  <li key={index}>\n                    {variable + \"  -  \"}\n                    {description}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          {usedPrompts == 2 && (\n            <>\n              {\" \"}\n              <h4>Wzór:</h4>\n              <MathJax content={\"`\" + model + \"`\"} />\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  usedPrompts: state.tasks.taskConfig.usedPrompts,\n});\n\nexport default connect(mapStateToProps, { usePrompt })(DisplayPrompts);\n"]},"metadata":{},"sourceType":"module"}