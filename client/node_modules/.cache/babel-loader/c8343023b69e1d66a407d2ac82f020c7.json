{"ast":null,"code":"import { ADD_TASK_CONTENT } from '../actions/newTask';\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case ADD_TASK_CONTENT:\n      return { ...statePart,\n        content: action.payload\n      };\n\n    case ADD_TASK_VARIABELS:\n      return { ...statePart,\n        variables: action.payload,\n        model: '',\n        groups: []\n      };\n\n    case ADD_TASK_MODEL:\n      return { ...statePart,\n        model: action.payload\n      };\n\n    case ADD_VAR_DESCRIPTION:\n      return { ...statePart,\n        variables: statePart.variables.map(item => {\n          if (item.variable === action.payload.variable) return { ...item,\n            description: action.payload.value\n          };else return item;\n        })\n      };\n\n    case ADD_GROUP:\n      return { ...statePart,\n        groups: action.payload\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/reducers/newTasksReducer.js"],"names":["ADD_TASK_CONTENT","reducer","statePart","action","type","content","payload","ADD_TASK_VARIABELS","variables","model","groups","ADD_TASK_MODEL","ADD_VAR_DESCRIPTION","map","item","variable","description","value","ADD_GROUP"],"mappings":"AAAA,SACEA,gBADF,QAEO,oBAFP;AAIA,eAAe,SAASC,OAAT,CAAiBC,SAAS,GAAG,EAA7B,EAAiCC,MAAM,GAAG,EAA1C,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,gBAAL;AACE,aAAO,EACL,GAAGE,SADE;AAELG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAKC,kBAAL;AACE,aAAO,EACL,GAAGL,SADE;AAELM,QAAAA,SAAS,EAAEL,MAAM,CAACG,OAFb;AAGLG,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKC,cAAL;AACE,aAAO,EACL,GAAGT,SADE;AAELO,QAAAA,KAAK,EAAEN,MAAM,CAACG;AAFT,OAAP;;AAKF,SAAKM,mBAAL;AACE,aAAO,EACL,GAAGV,SADE;AAELM,QAAAA,SAAS,EAAEN,SAAS,CAACM,SAAV,CAAoBK,GAApB,CAAyBC,IAAI,IAAG;AACzC,cAAGA,IAAI,CAACC,QAAL,KAAkBZ,MAAM,CAACG,OAAP,CAAeS,QAApC,EAA8C,OAAO,EAAE,GAAGD,IAAL;AAAWE,YAAAA,WAAW,EAAEb,MAAM,CAACG,OAAP,CAAeW;AAAvC,WAAP,CAA9C,KACK,OAAOH,IAAP;AACN,SAHU;AAFN,OAAP;;AAQF,SAAKI,SAAL;AACE,aAAO,EACL,GAAGhB,SADE;AAELQ,QAAAA,MAAM,EAAEP,MAAM,CAACG;AAFV,OAAP;;AAKF;AACE,aAAOJ,SAAP;AArCJ;AAuCD","sourcesContent":["import {\r\n  ADD_TASK_CONTENT\r\n} from '../actions/newTask';\r\n\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case ADD_TASK_CONTENT:\r\n      return {\r\n        ...statePart,\r\n        content: action.payload\r\n      };\r\n\r\n    case ADD_TASK_VARIABELS:\r\n      return {\r\n        ...statePart,\r\n        variables: action.payload,\r\n        model: '',\r\n        groups: []\r\n      };\r\n\r\n    case ADD_TASK_MODEL:\r\n      return {\r\n        ...statePart,\r\n        model: action.payload\r\n      };\r\n\r\n    case ADD_VAR_DESCRIPTION:\r\n      return {\r\n        ...statePart,\r\n        variables: statePart.variables.map( item =>{\r\n          if(item.variable === action.payload.variable) return { ...item, description: action.payload.value };\r\n          else return item;\r\n        })\r\n      };\r\n\r\n    case ADD_GROUP:\r\n      return {\r\n        ...statePart,\r\n        groups: action.payload\r\n      };\r\n\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}