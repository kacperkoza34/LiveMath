{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\CloseTask\\\\CloseTask.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from '../../MathJax';\nimport { connect } from 'react-redux';\nimport { getCloseTask } from '../../../../redux/actions/tasks';\n\nconst CloseTask = ({\n  match,\n  getCloseTask,\n  accountType,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, data.data.map(({\n    content\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, content + '   ', /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nCloseTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask\n})(CloseTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTask.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","MathJax","connect","getCloseTask","CloseTask","match","accountType","tasks","data","isFetching","errors","params","id","name","map","content","propTypes","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAGA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,KADiB;AAEjBF,EAAAA,YAFiB;AAGjBG,EAAAA,WAHiB;AAIjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA;AAHK;AAJU,CAAD,KASb;AAEHb,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,YAAY,CAACE,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAZ;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE,0CACCH,UAAU,gBAAE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBACT,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACK,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACA,IAAL,CAAUM,GAAV,CAAc,CAAC;AAACC,IAAAA;AAAD,GAAD,kBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GAAC,KADX,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CAAL,CAFF,CAFF,CADF;AAiBD,CAhCD;;AAkCAX,SAAS,CAACY,SAAV,GAAsB,EAAtB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BX,EAAAA,KAAK,EAAEW,KAAK,CAACX,KADkB;AAE/BD,EAAAA,WAAW,EAAEY,KAAK,CAACC,IAAN,CAAWX,IAAX,CAAgBF;AAFE,CAAJ,CAA7B;;AAKA,eAAeJ,OAAO,CAACe,eAAD,EAAiB;AAACd,EAAAA;AAAD,CAAjB,CAAP,CAAwCC,SAAxC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport MathJax from '../../MathJax';\r\nimport { connect } from 'react-redux';\r\nimport { getCloseTask } from '../../../../redux/actions/tasks';\r\n\r\n\r\nconst CloseTask = ({\r\n  match,\r\n  getCloseTask,\r\n  accountType,\r\n  tasks: {\r\n    data,\r\n    isFetching,\r\n    errors,\r\n  }\r\n}) =>{\r\n\r\n  useEffect(()=>{\r\n    getCloseTask(match.params.id);\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n    {isFetching? <BeatLoader size={20}/> :\r\n      <>\r\n        <h4>{data.name}</h4>\r\n        <ul>{data.data.map(({content})=>\r\n              <li>\r\n                {content+'   '}\r\n                <input></input>\r\n              </li>\r\n              )\r\n            }\r\n        </ul>\r\n      </>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nCloseTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks,\r\n  accountType: state.user.data.accountType\r\n})\r\n\r\nexport default connect(mapStateToProps,{getCloseTask})(CloseTask);\r\n"]},"metadata":{},"sourceType":"module"}