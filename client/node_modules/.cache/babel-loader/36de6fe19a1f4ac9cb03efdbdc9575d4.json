{"ast":null,"code":"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return;\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","ProfileGithub","username","repos","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA,cAAX;AAA2BG,EAAAA;AAA3B,CAAD,KAAsC;AAC1DN,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEP,CAACF,cAAc,CAACE,QAAD,CAAf,CAFO,CAAT;AAGA;AACD,CALD;;AAOAD,aAAa,CAACG,SAAd,GAA0B;AACxBJ,EAAAA,cAAc,EAAEF,SAAS,CAACO,IAAV,CAAeC,UADP;AAExBH,EAAAA,KAAK,EAAEL,SAAS,CAACS,KAAV,CAAgBD,UAFC;AAGxBJ,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,OAAN,CAAcR;AADW,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACU,eAAD,EAAkB;AAACT,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,aAA3C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) =>{\r\n  useEffect(()=>{\r\n    getGithubRepos(username);\r\n  },[getGithubRepos(username)])\r\n  return ;\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}