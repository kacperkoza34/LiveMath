{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from 'react-redux';\nimport { getBooleanTask } from '../../../../redux/actions/tasks';\n\nconst BooleanTask = ({\n  match,\n  getBooleanTask,\n  accountType,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getBooleanTask(match.params.id);\n  }, []);\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = '';\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  const onChange = e => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({\n      answer\n    }, i) => answer == taskStatus[i] && result++);\n    return `${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  console.log(taskStatus);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nCloseTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getBooleanTask\n})(CloseTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTask.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","connect","getBooleanTask","BooleanTask","match","accountType","tasks","data","isFetching","errors","params","id","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","prepareState","forEach","item","i","onChange","e","target","name","value","displayResult","result","answer","Object","keys","length","console","log","CloseTask","propTypes","mapStateToProps","state","user"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBF,EAAAA,cAFmB;AAGnBG,EAAAA,WAHmB;AAInBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA;AAHK;AAJY,CAAD,KASf;AAEHZ,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,cAAc,CAACE,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BhB,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACiB,YAAD,EAAeC,cAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMmB,YAAY,GAAG,MAAM;AACzBV,IAAAA,IAAI,CAACA,IAAL,CAAUW,OAAV,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9BR,MAAAA,OAAO,CAAE,GAAEQ,CAAE,EAAN,CAAP,GAAkB,EAAlB;AACA,KAFD;AAGAN,IAAAA,aAAa,CAAC,EAAC,GAAGF;AAAJ,KAAD,CAAb;AACD,GALD;;AAOA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtBN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgB,OAACS,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA1C,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIC,MAAM,GAAG,CAAb;AACApB,IAAAA,IAAI,CAACA,IAAL,CAAUW,OAAV,CAAkB,CAAC;AAACU,MAAAA;AAAD,KAAD,EAAWR,CAAX,KAAiBQ,MAAM,IAAIf,UAAU,CAACO,CAAD,CAApB,IAA2BO,MAAM,EAApE;AACA,WAAQ,GAAEA,MAAO,IAAGE,MAAM,CAACC,IAAP,CAAYjB,UAAZ,EAAwBkB,MAAO,EAAnD;AACD,GAJD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAZ;AACA,sBACE,yCADF;AAKD,CA1CD;;AA4CAqB,SAAS,CAACC,SAAV,GAAsB,EAAtB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/B/B,EAAAA,KAAK,EAAE+B,KAAK,CAAC/B,KADkB;AAE/BD,EAAAA,WAAW,EAAEgC,KAAK,CAACC,IAAN,CAAW/B,IAAX,CAAgBF;AAFE,CAAJ,CAA7B;;AAKA,eAAeJ,OAAO,CAACmC,eAAD,EAAiB;AAAClC,EAAAA;AAAD,CAAjB,CAAP,CAA0CgC,SAA1C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { connect } from 'react-redux';\r\nimport { getBooleanTask } from '../../../../redux/actions/tasks';\r\n\r\n\r\nconst BooleanTask = ({\r\n  match,\r\n  getBooleanTask,\r\n  accountType,\r\n  tasks: {\r\n    data,\r\n    isFetching,\r\n    errors,\r\n  }\r\n}) =>{\r\n\r\n  useEffect(()=>{\r\n    getBooleanTask(match.params.id);\r\n  },[]);\r\n\r\n  const answers = {};\r\n  const [taskStatus, setTaskStatus] =  useState(null);\r\n  const [checkAnswers, setChekAnswers] =  useState(false);\r\n\r\n  const prepareState = () => {\r\n    data.data.forEach((item, i) => {\r\n     answers[`${i}`] = '';\r\n    });\r\n    setTaskStatus({...answers});\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setChekAnswers(false);\r\n    setTaskStatus({...taskStatus, [e.target.name]: e.target.value});\r\n  };\r\n\r\n  const displayResult = () => {\r\n    let result = 0;\r\n    data.data.forEach(({answer}, i) => answer == taskStatus[i] && result++  );\r\n    return `${result}/${Object.keys(taskStatus).length}`\r\n  };\r\n  console.log(taskStatus)\r\n  return (\r\n    <>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nCloseTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks,\r\n  accountType: state.user.data.accountType\r\n})\r\n\r\nexport default connect(mapStateToProps,{getBooleanTask})(CloseTask);\r\n"]},"metadata":{},"sourceType":"module"}