{"ast":null,"code":"import { ADD_TASK_CONTENT, ADD_TASK_VARIABELS, ADD_TASK_MODEL, ADD_VAR_DESCRIPTION, ADD_GROUP, ADD_ADDITIONAL_VARIABLE, REMOVE_ADDITIONAL_VARIABLE, ADD_CLASS, ADD_SECTION, ADD_NAME, NEW_TASK_ERROR, CLEAR_NEW_TASK } from '../actions/newTask';\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case ADD_TASK_CONTENT:\n      return { ...statePart,\n        data: { ...statePart.data,\n          content: action.payload,\n          model: '',\n          groups: [],\n          variables: [],\n          additionalVariables: []\n        }\n      };\n\n    case ADD_NAME:\n      return { ...statePart,\n        data: { ...statePart.data,\n          name: action.payload\n        }\n      };\n\n    case ADD_TASK_VARIABELS:\n      return { ...statePart,\n        data: { ...statePart.data,\n          variables: action.payload,\n          model: '',\n          additionalVariables: [],\n          groups: []\n        }\n      };\n\n    case ADD_TASK_MODEL:\n      return { ...statePart,\n        data: { ...statePart.data,\n          model: action.payload\n        }\n      };\n\n    case ADD_VAR_DESCRIPTION:\n      return { ...statePart,\n        data: { ...statePart.data,\n          variables: statePart.data.variables.map(item => {\n            if (item.variable === action.payload.variable) return { ...item,\n              description: action.payload.value\n            };else return item;\n          })\n        }\n      };\n\n    case ADD_ADDITIONAL_VARIABLE:\n      return { ...statePart,\n        data: { ...statePart.data,\n          additionalVariables: [...statePart.data.additionalVariables, action.payload]\n        }\n      };\n\n    case REMOVE_ADDITIONAL_VARIABLE:\n      return { ...statePart,\n        data: { ...statePart.data,\n          additionalVariables: statePart.data.additionalVariables.filter(({\n            variable\n          }) => variable != action.payload)\n        }\n      };\n\n    case ADD_GROUP:\n      return { ...statePart,\n        data: { ...statePart.data,\n          groups: [...statePart.data.groups, action.payload]\n        }\n      };\n\n    case ADD_CLASS:\n      return { ...statePart,\n        data: { ...statePart.data,\n          class: action.payload\n        }\n      };\n\n    case ADD_SECTION:\n      return { ...statePart,\n        data: { ...statePart.data,\n          section: action.payload\n        }\n      };\n\n    case CLEAR_NEW_TASK:\n      return { ...statePart,\n        data: {\n          content: '',\n          name: '',\n          variables: [],\n          additionalVariables: [],\n          model: '',\n          groups: [],\n          class: '',\n          section: ''\n        },\n        success: action.payload\n      };\n\n    case NEW_TASK_ERROR:\n      return { ...statePart,\n        errors: action.payload\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/reducers/newTasksReducer.js"],"names":["ADD_TASK_CONTENT","ADD_TASK_VARIABELS","ADD_TASK_MODEL","ADD_VAR_DESCRIPTION","ADD_GROUP","ADD_ADDITIONAL_VARIABLE","REMOVE_ADDITIONAL_VARIABLE","ADD_CLASS","ADD_SECTION","ADD_NAME","NEW_TASK_ERROR","CLEAR_NEW_TASK","reducer","statePart","action","type","data","content","payload","model","groups","variables","additionalVariables","name","map","item","variable","description","value","filter","class","section","success","errors"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TASK_CONTENT,\r\n  ADD_TASK_VARIABELS,\r\n  ADD_TASK_MODEL,\r\n  ADD_VAR_DESCRIPTION,\r\n  ADD_GROUP,\r\n  ADD_ADDITIONAL_VARIABLE,\r\n  REMOVE_ADDITIONAL_VARIABLE,\r\n  ADD_CLASS,\r\n  ADD_SECTION,\r\n  ADD_NAME,\r\n  NEW_TASK_ERROR,\r\n  CLEAR_NEW_TASK\r\n} from '../actions/newTask';\r\n\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case ADD_TASK_CONTENT:\r\n      return {\r\n        ...statePart,\r\n        data:{\r\n          ...statePart.data,\r\n          content: action.payload,\r\n          model: '',\r\n          groups: [],\r\n          variables: [],\r\n          additionalVariables: []\r\n        }\r\n      };\r\n    case ADD_NAME:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          ...statePart.data,\r\n          name: action.payload\r\n        }\r\n      };\r\n    case ADD_TASK_VARIABELS:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          ...statePart.data,\r\n          variables: action.payload,\r\n          model: '',\r\n          additionalVariables: [],\r\n          groups: []\r\n        }\r\n      };\r\n\r\n    case ADD_TASK_MODEL:\r\n      return {\r\n        ...statePart,\r\n        data:{\r\n          ...statePart.data,\r\n          model: action.payload\r\n        }\r\n      };\r\n\r\n    case ADD_VAR_DESCRIPTION:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          ...statePart.data,\r\n          variables: statePart.data.variables.map( item =>{\r\n            if(item.variable === action.payload.variable) return { ...item, description: action.payload.value };\r\n            else return item;\r\n          })\r\n        }\r\n      };\r\n    case ADD_ADDITIONAL_VARIABLE:\r\n      return {\r\n        ...statePart,\r\n        data:{\r\n          ...statePart.data,\r\n          additionalVariables: [...statePart.data.additionalVariables, action.payload]\r\n        }\r\n      };\r\n    case REMOVE_ADDITIONAL_VARIABLE:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          ...statePart.data,\r\n          additionalVariables: statePart.data.additionalVariables.filter(({variable})=> variable != action.payload)\r\n        }\r\n      };\r\n    case ADD_GROUP:\r\n      return {\r\n        ...statePart,\r\n        data:{\r\n          ...statePart.data,\r\n          groups: [...statePart.data.groups, action.payload]\r\n        }\r\n      };\r\n    case ADD_CLASS:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          ...statePart.data,\r\n          class: action.payload\r\n        }\r\n      };\r\n    case ADD_SECTION:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          ...statePart.data,\r\n          section: action.payload\r\n        }\r\n      };\r\n    case CLEAR_NEW_TASK:\r\n      return {\r\n        ...statePart,\r\n        data: {\r\n          content: '',\r\n          name: '',\r\n          variables: [],\r\n          additionalVariables: [],\r\n          model: '',\r\n          groups: [],\r\n          class: '',\r\n          section: ''\r\n        },\r\n        success: action.payload\r\n      };\r\n    case NEW_TASK_ERROR:\r\n      return {\r\n        ...statePart,\r\n        errors: action.payload\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}