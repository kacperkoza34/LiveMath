{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\ReviewTask\\\\ReviewTask.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ReviewTask.module.scss\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport MathJax from \"../../MathJax\";\nimport { connect } from \"react-redux\";\n\nconst ReviewTask = ({\n  taskId,\n  studentId,\n  reduxAction,\n  dispatch,\n  correctAnswer,\n  correctAnswers\n}) => {\n  const [message, setMessage] = useState(\"\");\n  const [accept, setAccept] = useState(false);\n\n  const send = e => {\n    e.preventDefault();\n    reduxAction({\n      message,\n      accept,\n      student_id: studentId,\n      task_id: taskId\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => send(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Panel weryfikacyjny\"), correctAnswer ? /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Poprawna odpowied\\u017A: \", correctAnswer) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Poprawne odpowiedzi: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, correctAnswers.map((answer, index) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"`$\", index + 1, \". $\", answers, \"`\")))), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Dodaj wiadomo\\u015B\\u0107:\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    required: true,\n    maxCols: \"15\",\n    minCols: \"5\",\n    maxRows: \"15\",\n    minRows: \"5\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Wybierz status\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: accept,\n    onChange: e => {\n      setAccept(e.target.value === \"true\" ? true : false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Do poprawy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Rozwi\\u0105zane\")), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Potwierd\\u017A\")));\n};\n\nexport default connect()(ReviewTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/ReviewTask/ReviewTask.js"],"names":["React","useState","PropTypes","styles","TextareaAutosize","MathJax","connect","ReviewTask","taskId","studentId","reduxAction","dispatch","correctAnswer","correctAnswers","message","setMessage","accept","setAccept","send","e","preventDefault","student_id","task_id","root","map","answer","index","answers","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ReviewTask.module.scss\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport MathJax from \"../../MathJax\";\nimport { connect } from \"react-redux\";\n\nconst ReviewTask = ({\n  taskId,\n  studentId,\n  reduxAction,\n  dispatch,\n  correctAnswer,\n  correctAnswers,\n}) => {\n  const [message, setMessage] = useState(\"\");\n  const [accept, setAccept] = useState(false);\n\n  const send = (e) => {\n    e.preventDefault();\n    reduxAction({\n      message,\n      accept,\n      student_id: studentId,\n      task_id: taskId,\n    });\n  };\n  return (\n    <div className={styles.root}>\n      <form onSubmit={(e) => send(e)}>\n        <h4>Panel weryfikacyjny</h4>\n\n        {correctAnswer ? (\n          <h5>Poprawna odpowiedź: {correctAnswer}</h5>\n        ) : (\n          <>\n            <h5>Poprawne odpowiedzi: </h5>\n            <ul>\n              {correctAnswers.map((answer, index) => (\n                <li>\n                  `${index + 1}. ${answers}`\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n        <h5>Dodaj wiadomość:</h5>\n        <TextareaAutosize\n          required\n          maxCols=\"15\"\n          minCols=\"5\"\n          maxRows=\"15\"\n          minRows=\"5\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <h4>Wybierz status</h4>\n        <select\n          value={accept}\n          onChange={(e) => {\n            setAccept(e.target.value === \"true\" ? true : false);\n          }}\n        >\n          <option value={false}>Do poprawy</option>\n          <option value={true}>Rozwiązane</option>\n        </select>\n        <button>Potwierdź</button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(ReviewTask);\n"]},"metadata":{},"sourceType":"module"}