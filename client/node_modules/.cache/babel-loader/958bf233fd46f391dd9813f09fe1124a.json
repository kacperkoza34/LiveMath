{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\CloseTask\\\\CloseTaskFromApi.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./CloseTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport SendSolution from \"./SendSolution/SendSolution\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport ReviewTask from \"../ReviewTask/ReviewTask\";\nimport Messages from \"../Messages/Messages\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport { updateDescription, updateAnswer, sendCloseTaskResolution } from \"../../../../redux/actions/resolveTask\";\n\nconst CloseTaskFromApi = ({\n  match,\n  getCloseTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendCloseTaskResolution,\n  student,\n  tasks: {\n    data,\n    isFetching,\n    errors,\n    taskConfig\n  }\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n  const {\n    answer,\n    description,\n    descriptionRequired,\n    resolved,\n    toUpdate,\n    _id,\n    messages\n  } = taskConfig;\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  const onChange = e => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n    updateAnswer({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let result = 0;\n\n  const displayResult = () => {\n    result = 0;\n    data.data.forEach(({\n      answer\n    }, i) => answer == taskStatus[i] && result++);\n    return `Wynik: ${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  const sendSolution = (result, toUpdate = false) => {\n    if (descriptionRequired && !description.length) setError(\"Wymagany opis!\");else {\n      if (toUpdate) sendCloseTaskResolution({ ...taskConfig,\n        toUpdate,\n        result\n      });else sendCloseTaskResolution({ ...taskConfig,\n        toUpdate,\n        result\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, taskStatus === null && prepareState(), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, data.content), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.points,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Punkty: \", data.points), taskStatus && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, data.data.map(({\n    content,\n    answer: correctAnswer\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.listElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, `${i + 1}). `, /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + content + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), \"Podaj odpowiedz:\", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    autocomplete: \"off\",\n    name: `${i}`,\n    value: answer[`${i}`],\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, \"Twoja odpowiedz:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + answer[`${i}`] + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }))), checkAnswers && (answer[`${i}`] == correctAnswer ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Ok\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.fail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"\\u0179le\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Miejsce na link z rozwi\\u0105zaniem\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    maxCols: \"15\",\n    minCols: \"5\",\n    value: description,\n    onChange: e => updateDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), checkAnswers && displayResult(), /*#__PURE__*/React.createElement(SendSolution, {\n    setChekAnswers: setChekAnswers,\n    checkAnswers: checkAnswers,\n    displayResult: displayResult,\n    sendSolution: sendSolution,\n    resolved: resolved,\n    error: error,\n    toUpdate: toUpdate,\n    result: result,\n    answers: answer,\n    description: description,\n    accountType: accountType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), accountType === \"teacher\" && toUpdate ? /*#__PURE__*/React.createElement(ReviewTask, {\n    correctAnswers: data.data,\n    taskId: _id,\n    studentId: student,\n    reduxAction: reviewOpenTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })));\n};\n\nCloseTaskFromApi.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n  student: state.student.data._id\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendCloseTaskResolution\n})(CloseTaskFromApi);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTaskFromApi.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","MathJax","AddTaskToClass","SendSolution","TextareaAutosize","ReviewTask","Messages","connect","getCloseTask","setTaskConfig","updateDescription","updateAnswer","sendCloseTaskResolution","CloseTaskFromApi","match","accountType","student","tasks","data","isFetching","errors","taskConfig","params","id","answer","description","descriptionRequired","resolved","toUpdate","_id","messages","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","error","setError","prepareState","forEach","item","i","onChange","e","target","name","value","result","displayResult","Object","keys","length","sendSolution","root","content","points","map","correctAnswer","listElement","order","success","fail","reviewOpenTask","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./CloseTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport SendSolution from \"./SendSolution/SendSolution\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport ReviewTask from \"../ReviewTask/ReviewTask\";\nimport Messages from \"../Messages/Messages\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport {\n  updateDescription,\n  updateAnswer,\n  sendCloseTaskResolution,\n} from \"../../../../redux/actions/resolveTask\";\n\nconst CloseTaskFromApi = ({\n  match,\n  getCloseTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendCloseTaskResolution,\n  student,\n  tasks: { data, isFetching, errors, taskConfig },\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n\n  const {\n    answer,\n    description,\n    descriptionRequired,\n    resolved,\n    toUpdate,\n    _id,\n    messages,\n  } = taskConfig;\n\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers });\n  };\n\n  const onChange = (e) => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus, [e.target.name]: e.target.value });\n    updateAnswer({ ...taskStatus, [e.target.name]: e.target.value });\n  };\n\n  let result = 0;\n\n  const displayResult = () => {\n    result = 0;\n    data.data.forEach(({ answer }, i) => answer == taskStatus[i] && result++);\n    return `Wynik: ${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  const sendSolution = (result, toUpdate = false) => {\n    if (descriptionRequired && !description.length) setError(\"Wymagany opis!\");\n    else {\n      if (toUpdate)\n        sendCloseTaskResolution({ ...taskConfig, toUpdate, result });\n      else sendCloseTaskResolution({ ...taskConfig, toUpdate, result });\n    }\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {taskStatus === null && prepareState()}\n          <h4>{data.name}</h4>\n          <p>{data.content}</p>\n          <p className={styles.points}>Punkty: {data.points}</p>\n          {taskStatus && (\n            <ul>\n              {data.data.map(({ content, answer: correctAnswer }, i) => (\n                <li className={styles.listElement}>\n                  <div className={styles.order}>\n                    {`${i + 1}). `}\n                    <MathJax content={\"`\" + content + \"`\"} />\n                  </div>\n                  Podaj odpowiedz:\n                  <div className={styles.item}>\n                    <input\n                      autocomplete=\"off\"\n                      name={`${i}`}\n                      value={answer[`${i}`]}\n                      onChange={(e) => onChange(e)}\n                    ></input>\n                    <div>\n                      <span>Twoja odpowiedz:</span>\n                      <div className={styles.result}>\n                        <MathJax content={\"`\" + answer[`${i}`] + \"`\"} />\n                      </div>\n                    </div>\n                    {checkAnswers &&\n                      (answer[`${i}`] == correctAnswer ? (\n                        <div className={styles.success}>Ok</div>\n                      ) : (\n                        <div className={styles.fail}>Źle</div>\n                      ))}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n          <div className={styles.description}>\n            <h4>Miejsce na link z rozwiązaniem</h4>\n            <TextareaAutosize\n              maxCols=\"15\"\n              minCols=\"5\"\n              value={description}\n              onChange={(e) => updateDescription(e.target.value)}\n            ></TextareaAutosize>\n          </div>\n          {checkAnswers && displayResult()}\n          <SendSolution\n            setChekAnswers={setChekAnswers}\n            checkAnswers={checkAnswers}\n            displayResult={displayResult}\n            sendSolution={sendSolution}\n            resolved={resolved}\n            error={error}\n            toUpdate={toUpdate}\n            result={result}\n            answers={answer}\n            description={description}\n            accountType={accountType}\n          />\n          {accountType === \"teacher\" && toUpdate ? (\n            <ReviewTask\n              correctAnswers={data.data}\n              taskId={_id}\n              studentId={student}\n              reduxAction={reviewOpenTask}\n            />\n          ) : (\n            \"\"\n          )}\n          <Messages messages={messages} />\n        </>\n      )}\n    </div>\n  );\n};\n\nCloseTaskFromApi.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n  student: state.student.data._id,\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendCloseTaskResolution,\n})(CloseTaskFromApi);\n"]},"metadata":{},"sourceType":"module"}