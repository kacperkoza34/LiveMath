{"ast":null,"code":"import { UPDATE_CLASSES, SET_DEADLINE, SET_PROMPTS, SET_DESCRIPTION, ADD_TASK_ERROR, ADD_TASK_SUCCESS, CLEAR_TASK } from \"../actions/taskToClass\";\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case UPDATE_CLASSES:\n      return { ...statePart,\n        data: { ...statePart.data,\n          classes: action.payload\n        }\n      };\n\n    case SET_DEADLINE:\n      return { ...statePart,\n        data: { ...statePart.data,\n          deadLine: action.payload\n        }\n      };\n\n    case SET_PROMPTS:\n      return { ...statePart,\n        data: { ...statePart.data,\n          promptsAllowed: action.payload\n        }\n      };\n\n    case SET_DESCRIPTION:\n      return { ...statePart,\n        data: { ...statePart.data,\n          descriptionRequired: action.payload\n        }\n      };\n\n    case ADD_TASK_SUCCESS:\n      return { ...statePart,\n        success: true\n      };\n\n    case ADD_TASK_ERROR:\n      return { ...statePart,\n        errors: action.payload\n      };\n\n    case CLEAR_TASK:\n      return {\n        data: {\n          classes: [],\n          deadLine: \"\",\n          promptsAllowed: false,\n          descriptionRequired: false\n        },\n        isFetching: false,\n        errors: false,\n        success: false\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/reducers/taskToClassReducer.js"],"names":["UPDATE_CLASSES","SET_DEADLINE","SET_PROMPTS","SET_DESCRIPTION","ADD_TASK_ERROR","ADD_TASK_SUCCESS","CLEAR_TASK","reducer","statePart","action","type","data","classes","payload","deadLine","promptsAllowed","descriptionRequired","success","errors","isFetching"],"mappings":"AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,gBANF,EAOEC,UAPF,QAQO,wBARP;AAUA,eAAe,SAASC,OAAT,CAAiBC,SAAS,GAAG,EAA7B,EAAiCC,MAAM,GAAG,EAA1C,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,cAAL;AACE,aAAO,EACL,GAAGQ,SADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,SAAS,CAACG,IADT;AAEJC,UAAAA,OAAO,EAAEH,MAAM,CAACI;AAFZ;AAFD,OAAP;;AAOF,SAAKZ,YAAL;AACE,aAAO,EACL,GAAGO,SADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,SAAS,CAACG,IADT;AAEJG,UAAAA,QAAQ,EAAEL,MAAM,CAACI;AAFb;AAFD,OAAP;;AAOF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGM,SADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,SAAS,CAACG,IADT;AAEJI,UAAAA,cAAc,EAAEN,MAAM,CAACI;AAFnB;AAFD,OAAP;;AAOF,SAAKV,eAAL;AACE,aAAO,EACL,GAAGK,SADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,SAAS,CAACG,IADT;AAEJK,UAAAA,mBAAmB,EAAEP,MAAM,CAACI;AAFxB;AAFD,OAAP;;AAOF,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGG,SADE;AAELS,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGI,SADE;AAELU,QAAAA,MAAM,EAAET,MAAM,CAACI;AAFV,OAAP;;AAIF,SAAKP,UAAL;AACE,aAAO;AACLK,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE,EADL;AAEJE,UAAAA,QAAQ,EAAE,EAFN;AAGJC,UAAAA,cAAc,EAAE,KAHZ;AAIJC,UAAAA,mBAAmB,EAAE;AAJjB,SADD;AAOLG,QAAAA,UAAU,EAAE,KAPP;AAQLD,QAAAA,MAAM,EAAE,KARH;AASLD,QAAAA,OAAO,EAAE;AATJ,OAAP;;AAWF;AACE,aAAOT,SAAP;AAxDJ;AA0DD","sourcesContent":["import {\n  UPDATE_CLASSES,\n  SET_DEADLINE,\n  SET_PROMPTS,\n  SET_DESCRIPTION,\n  ADD_TASK_ERROR,\n  ADD_TASK_SUCCESS,\n  CLEAR_TASK,\n} from \"../actions/taskToClass\";\n\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case UPDATE_CLASSES:\n      return {\n        ...statePart,\n        data: {\n          ...statePart.data,\n          classes: action.payload,\n        },\n      };\n    case SET_DEADLINE:\n      return {\n        ...statePart,\n        data: {\n          ...statePart.data,\n          deadLine: action.payload,\n        },\n      };\n    case SET_PROMPTS:\n      return {\n        ...statePart,\n        data: {\n          ...statePart.data,\n          promptsAllowed: action.payload,\n        },\n      };\n    case SET_DESCRIPTION:\n      return {\n        ...statePart,\n        data: {\n          ...statePart.data,\n          descriptionRequired: action.payload,\n        },\n      };\n    case ADD_TASK_SUCCESS:\n      return {\n        ...statePart,\n        success: true,\n      };\n    case ADD_TASK_ERROR:\n      return {\n        ...statePart,\n        errors: action.payload,\n      };\n    case CLEAR_TASK:\n      return {\n        data: {\n          classes: [],\n          deadLine: \"\",\n          promptsAllowed: false,\n          descriptionRequired: false,\n        },\n        isFetching: false,\n        errors: false,\n        success: false,\n      };\n    default:\n      return statePart;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}