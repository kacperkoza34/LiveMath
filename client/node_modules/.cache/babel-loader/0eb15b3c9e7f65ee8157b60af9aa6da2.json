{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTaskToClass\\\\AddTaskToClass.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addOpenTask, addCloseTask, addBooleanTask } from \"../../../redux/actions/taskToClass\";\nimport SelectClass from \"./SelectClass\";\nimport SelectDeadLine from \"./SelectDeadLine\";\nimport SelectPrompt from \"./SelectPrompt\";\n\nconst AddTaskToClass = ({\n  taskId,\n  taskType,\n  taskParams,\n  addOpenTask,\n  addBooleanTask,\n  addCloseTask\n}) => {\n  const {\n    descriptionRequired,\n    promptsAllowed,\n    deadLine,\n    classes\n  } = taskParams;\n  const [error, setError] = useState(false);\n\n  const submitOpenTask = () => {\n    if (deadLine.length && classes.length) {\n      setError(false);\n      addOpenTask({\n        taskId,\n        descriptionRequired,\n        promptsAllowed,\n        deadLine,\n        classes\n      });\n    } else setError(true);\n  };\n\n  const submitCloseTask = () => {\n    if (deadLine.length && classes.length) {\n      setError(false);\n      addCloseTask({\n        taskId,\n        deadLine,\n        classes\n      });\n    } else setError(true);\n  };\n\n  const submitBooleanTask = () => {\n    if (deadLine.length && classes.length) {\n      setError(false);\n      addBooleanTask({\n        taskId,\n        deadLine,\n        classes\n      });\n    } else setError(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SelectClass, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SelectDeadLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), taskType === \"openTask\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SelectPrompt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, error && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, \"Wybierz klasy i termin wykonania\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => submitOpenTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Dodaj zadnie do klas\"))), taskType === \"closeTask\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, error && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, \"Wybierz klasy i termin wykonania\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => submitCloseTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Dodaj zadnie do klas\"))), taskType === \"booleanTask\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, error && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, \"Wybierz klasy i termin wykonania\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => submitBooleanTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Dodaj zadnie do klas\"))));\n};\n\nconst mapStateToProps = state => ({\n  taskId: state.tasks.data._id,\n  taskType: state.tasks.data.taskType,\n  taskParams: state.addTaskToClass.data\n});\n\nexport default connect(mapStateToProps, {\n  addOpenTask,\n  addCloseTask,\n  addBooleanTask\n})(AddTaskToClass);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTaskToClass/AddTaskToClass.js"],"names":["React","useState","PropTypes","connect","addOpenTask","addCloseTask","addBooleanTask","SelectClass","SelectDeadLine","SelectPrompt","AddTaskToClass","taskId","taskType","taskParams","descriptionRequired","promptsAllowed","deadLine","classes","error","setError","submitOpenTask","length","submitCloseTask","submitBooleanTask","mapStateToProps","state","tasks","data","_id","addTaskToClass"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,oCAJP;AAKA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,MADsB;AAEtBC,EAAAA,QAFsB;AAGtBC,EAAAA,UAHsB;AAItBT,EAAAA,WAJsB;AAKtBE,EAAAA,cALsB;AAMtBD,EAAAA;AANsB,CAAD,KAOjB;AACJ,QAAM;AAAES,IAAAA,mBAAF;AAAuBC,IAAAA,cAAvB;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA;AAAjD,MAA6DJ,UAAnE;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMmB,cAAc,GAAG,MAAM;AAC3B,QAAIJ,QAAQ,CAACK,MAAT,IAAmBJ,OAAO,CAACI,MAA/B,EAAuC;AACrCF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAf,MAAAA,WAAW,CAAC;AACVO,QAAAA,MADU;AAEVG,QAAAA,mBAFU;AAGVC,QAAAA,cAHU;AAIVC,QAAAA,QAJU;AAKVC,QAAAA;AALU,OAAD,CAAX;AAOD,KATD,MASOE,QAAQ,CAAC,IAAD,CAAR;AACR,GAXD;;AAaA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAIN,QAAQ,CAACK,MAAT,IAAmBJ,OAAO,CAACI,MAA/B,EAAuC;AACrCF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAd,MAAAA,YAAY,CAAC;AACXM,QAAAA,MADW;AAEXK,QAAAA,QAFW;AAGXC,QAAAA;AAHW,OAAD,CAAZ;AAKD,KAPD,MAOOE,QAAQ,CAAC,IAAD,CAAR;AACR,GATD;;AAWA,QAAMI,iBAAiB,GAAG,MAAM;AAC9B,QAAIP,QAAQ,CAACK,MAAT,IAAmBJ,OAAO,CAACI,MAA/B,EAAuC;AACrCF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAb,MAAAA,cAAc,CAAC;AACbK,QAAAA,MADa;AAEbK,QAAAA,QAFa;AAGbC,QAAAA;AAHa,OAAD,CAAd;AAKD,KAPD,MAOOE,QAAQ,CAAC,IAAD,CAAR;AACR,GATD;;AAUA,sBACE,uDACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGP,QAAQ,KAAK,UAAb,iBACC,uDACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADZ,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAME,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CAFF,CAJJ,EAcGR,QAAQ,KAAK,WAAb,iBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADZ,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMI,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF,CAfJ,EAwBGV,QAAQ,KAAK,aAAb,iBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADZ,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMK,iBAAiB,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF,CAzBJ,CADF;AAqCD,CAlFD;;AAoFA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,MAAM,EAAEc,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBC,GADS;AAElChB,EAAAA,QAAQ,EAAEa,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBf,QAFO;AAGlCC,EAAAA,UAAU,EAAEY,KAAK,CAACI,cAAN,CAAqBF;AAHC,CAAZ,CAAxB;;AAMA,eAAexB,OAAO,CAACqB,eAAD,EAAkB;AACtCpB,EAAAA,WADsC;AAEtCC,EAAAA,YAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZI,cAJY,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  addOpenTask,\n  addCloseTask,\n  addBooleanTask,\n} from \"../../../redux/actions/taskToClass\";\nimport SelectClass from \"./SelectClass\";\nimport SelectDeadLine from \"./SelectDeadLine\";\nimport SelectPrompt from \"./SelectPrompt\";\n\nconst AddTaskToClass = ({\n  taskId,\n  taskType,\n  taskParams,\n  addOpenTask,\n  addBooleanTask,\n  addCloseTask,\n}) => {\n  const { descriptionRequired, promptsAllowed, deadLine, classes } = taskParams;\n  const [error, setError] = useState(false);\n\n  const submitOpenTask = () => {\n    if (deadLine.length && classes.length) {\n      setError(false);\n      addOpenTask({\n        taskId,\n        descriptionRequired,\n        promptsAllowed,\n        deadLine,\n        classes,\n      });\n    } else setError(true);\n  };\n\n  const submitCloseTask = () => {\n    if (deadLine.length && classes.length) {\n      setError(false);\n      addCloseTask({\n        taskId,\n        deadLine,\n        classes,\n      });\n    } else setError(true);\n  };\n\n  const submitBooleanTask = () => {\n    if (deadLine.length && classes.length) {\n      setError(false);\n      addBooleanTask({\n        taskId,\n        deadLine,\n        classes,\n      });\n    } else setError(true);\n  };\n  return (\n    <>\n      <SelectClass />\n      <SelectDeadLine />\n      {taskType === \"openTask\" && (\n        <>\n          <SelectPrompt />\n          <div>\n            {error && <h5>Wybierz klasy i termin wykonania</h5>}\n            <button onClick={() => submitOpenTask()}>\n              Dodaj zadnie do klas\n            </button>\n          </div>\n        </>\n      )}\n      {taskType === \"closeTask\" && (\n        <>\n          <div>\n            {error && <h5>Wybierz klasy i termin wykonania</h5>}\n            <button onClick={() => submitCloseTask()}>\n              Dodaj zadnie do klas\n            </button>\n          </div>\n        </>\n      )}\n      {taskType === \"booleanTask\" && (\n        <>\n          <div>\n            {error && <h5>Wybierz klasy i termin wykonania</h5>}\n            <button onClick={() => submitBooleanTask()}>\n              Dodaj zadnie do klas\n            </button>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  taskId: state.tasks.data._id,\n  taskType: state.tasks.data.taskType,\n  taskParams: state.addTaskToClass.data,\n});\n\nexport default connect(mapStateToProps, {\n  addOpenTask,\n  addCloseTask,\n  addBooleanTask,\n})(AddTaskToClass);\n"]},"metadata":{},"sourceType":"module"}