{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AdditionalVariables.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addAddVariable } from '../../../../redux/actions/newTask';\n\nconst AdditionalVariables = ({\n  addAddVariable,\n  additionalVariables,\n  variables\n}) => {\n  const [formData, setFormData] = useState({\n    variable: '',\n    description: ''\n  });\n  const [error, setError] = useState('');\n\n  const onChange = e => {\n    if (e.target.name == 'variable') {\n      if (e.target.value.length > 1) setError('Zmienne nazywamy jedną literą');else {\n        let alredyUsed = [...variables, ...additionalVariables].some(({\n          variable\n        }) => variable == e.target.value);\n\n        if (!alredyUsed) {\n          setFormData({ ...formData,\n            [e.target.name]: e.target.value\n          });\n          setError('');\n        } else {\n          setError('Posiadasz już zmienną o tej nazwie');\n          setFormData({ ...formData,\n            [e.target.name]: ''\n          });\n        }\n      }\n      ;\n    } else setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addAddVariable({\n      variable: formData.variable,\n      description: formData.description\n    });\n    setFormData({\n      variable: '',\n      description: ''\n    });\n  };\n\n  return variables.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Dodaj pomocnicze zmienne\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Nazwa\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: 'variable',\n    placeholder: \"Zmienna\",\n    value: formData.variable,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Opis\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: 'description',\n    placeholder: \"Opis\",\n    value: formData.description,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Dodaj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), error.length > 0 && error, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, additionalVariables.length > 0 && additionalVariables.map(({\n    variable,\n    description\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, variable + '          ', description, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 51\n    }\n  }, \"Usu\\u0144\")))));\n};\n\nAdditionalVariables.propTypes = {};\n\nconst mapStateToProps = state => ({\n  additionalVariables: state.newTask.additionalVariables,\n  variables: state.newTask.variables\n});\n\nexport default connect(mapStateToProps, {\n  addAddVariable\n})(AdditionalVariables);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AdditionalVariables.js"],"names":["React","useState","PropTypes","connect","addAddVariable","AdditionalVariables","additionalVariables","variables","formData","setFormData","variable","description","error","setError","onChange","e","target","name","value","length","alredyUsed","some","onSubmit","preventDefault","map","propTypes","mapStateToProps","state","newTask"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addAddVariable } from '../../../../redux/actions/newTask';\r\n\r\nconst AdditionalVariables = ({addAddVariable,additionalVariables,variables}) => {\r\n  const [formData, setFormData] = useState({\r\n    variable: '',\r\n    description: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = e =>{\r\n    if(e.target.name == 'variable' ){\r\n      if(e.target.value.length > 1) setError('Zmienne nazywamy jedną literą');\r\n      else {\r\n        let alredyUsed = [...variables,...additionalVariables].some(({variable}) => variable == e.target.value);\r\n        if(!alredyUsed){\r\n          setFormData({...formData, [e.target.name]: e.target.value});\r\n          setError('');\r\n        }\r\n        else {\r\n          setError('Posiadasz już zmienną o tej nazwie');\r\n          setFormData({...formData, [e.target.name]: ''});\r\n        }\r\n      };\r\n    }\r\n    else setFormData({...formData, [e.target.name]: e.target.value});\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAddVariable(\r\n      {variable: formData.variable, description: formData.description}\r\n    );\r\n    setFormData({variable: '',description: '' });\r\n  };\r\n  return ( variables.length > 0 &&\r\n    <>\r\n      <h5>Dodaj pomocnicze zmienne</h5>\r\n      <form onSubmit={(e)=>onSubmit(e)}>\r\n        <h6>Nazwa</h6>\r\n        <input\r\n          name={'variable'}\r\n          placeholder=\"Zmienna\"\r\n          value={formData.variable}\r\n          onChange={e => onChange(e)}\r\n          required\r\n        />\r\n        <h6>Opis</h6>\r\n        <input\r\n          name={'description'}\r\n          placeholder=\"Opis\"\r\n          value={formData.description}\r\n          onChange={e => onChange(e)}\r\n          required\r\n        />\r\n        <input type=\"submit\" value='Dodaj' />\r\n      </form>\r\n      { error.length > 0 && error }\r\n      <ul>\r\n        {additionalVariables.length > 0 &&\r\n          additionalVariables.map(({variable, description})=>\r\n          <li>{variable+'          '}{description}<button>Usuń</button></li>)\r\n        }\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nAdditionalVariables.propTypes = {\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  additionalVariables: state.newTask.additionalVariables,\r\n  variables: state.newTask.variables\r\n});\r\n\r\nexport default connect(mapStateToProps,{addAddVariable})(AdditionalVariables);\r\n"]},"metadata":{},"sourceType":"module"}