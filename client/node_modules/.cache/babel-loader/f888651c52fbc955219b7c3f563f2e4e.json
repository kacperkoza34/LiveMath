{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\TasksList.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from 'react-redux';\nimport { getTasks } from '../../redux/actions/tasks';\n\nconst TasksList = ({\n  classId,\n  sectionId,\n  getTasks,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    if (classId && sectionId) {\n      getTasks({\n        classId,\n        sectionId\n      });\n    }\n  }, [sectionId]);\n\n  const showTaskType = type => {\n    switch (type) {\n      case 'openTask':\n        return 'Zadanie otwarte';\n\n      case 'closeTask':\n        return 'Zadanie zamknięte';\n\n      case 'booleanTask':\n        return 'Zadanie prawda fałsz';\n\n      default:\n        return 'Zadanie';\n    }\n  };\n\n  const displayTask = (id, type) => {\n    console.log(id);\n    console.log(type);\n    if (type == 'openTask') return /*#__PURE__*/React.createElement(Link, {\n      to: `/openTask/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }\n    });else if (type == 'closeTask') return /*#__PURE__*/React.createElement(Link, {\n      to: `/closeTask/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 40\n      }\n    });else if (type == 'booleanTask') return /*#__PURE__*/React.createElement(Link, {\n      to: `/booleanTask/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, classId && sectionId ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, data.length > 0 ? data.map(({\n    name,\n    taskType,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => displayTask(_id, taskType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, name, \"    \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, showTaskType(taskType)))) : 'Nie ma zadań z tego działu') : 'Wybierz dział'));\n};\n\nTasksList.propTypes = {\n  classId: PropTypes.string,\n  sectionId: PropTypes.string,\n  getTasks: PropTypes.func,\n  tasks: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getTasks\n})(TasksList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/TasksList.js"],"names":["React","useEffect","PropTypes","Link","Redirect","BeatLoader","connect","getTasks","TasksList","classId","sectionId","tasks","data","isFetching","errors","showTaskType","type","displayTask","id","console","log","length","map","name","taskType","_id","propTypes","string","func","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { connect } from 'react-redux';\r\nimport { getTasks } from '../../redux/actions/tasks';\r\n\r\nconst TasksList = ({classId,sectionId, getTasks, tasks:{ data, isFetching, errors }}) =>{\r\n\r\n  useEffect(()=>{\r\n    if(classId && sectionId){\r\n      getTasks({classId,sectionId});\r\n    }\r\n  },[sectionId]);\r\n\r\n  const showTaskType = (type) => {\r\n    switch (type) {\r\n      case 'openTask':\r\n        return 'Zadanie otwarte'\r\n      case 'closeTask':\r\n        return 'Zadanie zamknięte'\r\n      case 'booleanTask':\r\n        return 'Zadanie prawda fałsz'\r\n      default: return 'Zadanie'\r\n    }\r\n  };\r\n\r\n  const displayTask = (id,type) => {\r\n    console.log(id)\r\n    console.log(type)\r\n\r\n    if(type =='openTask') return <Link to={`/openTask/${id}`}/>;\r\n    else if(type =='closeTask') return <Link to={`/closeTask/${id}`}/>;\r\n    else if(type =='booleanTask') return <Link to={`/booleanTask/${id}`}/>;\r\n  };\r\n  return(\r\n    <>\r\n      {isFetching? <BeatLoader size={20}/> :\r\n        <>\r\n          {classId && sectionId ?\r\n            <ul>\r\n              {data.length> 0 ? data.map(({name, taskType, _id})=>\r\n                <li onClick={()=>displayTask(_id,taskType)}>\r\n                  <span>{name}    </span>\r\n                  <span>{showTaskType(taskType)}</span>\r\n                </li>) : 'Nie ma zadań z tego działu'}\r\n            </ul> :\r\n            'Wybierz dział'\r\n          }\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nTasksList.propTypes = {\r\n  classId: PropTypes.string,\r\n  sectionId: PropTypes.string,\r\n  getTasks: PropTypes.func,\r\n  tasks: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks\r\n})\r\n\r\nexport default connect(mapStateToProps,{getTasks})(TasksList);\r\n"]},"metadata":{},"sourceType":"module"}