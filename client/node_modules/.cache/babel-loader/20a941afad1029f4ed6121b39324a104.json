{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DisplayContent = ({\n  content,\n  variables,\n  group\n}) => {\n  const displayContent = content => {\n    for (let i in variables) {\n      const currentVar = variables[i].variable;\n      const re = new RegExp(`{${currentVar}}`, \"g\");\n      content = content.replace(re, group[currentVar]);\n    }\n\n    correctAnswer = groups[randomGroupIndex].answer;\n    setContent(content);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, content);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, displayContent(content));\n};\n\nDisplayContent.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default DisplayContent;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/DisplayContent.js"],"names":["React","PropTypes","DisplayContent","content","variables","group","displayContent","i","currentVar","variable","re","RegExp","replace","correctAnswer","groups","randomGroupIndex","answer","setContent","propTypes","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,SAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AAEpD,QAAMC,cAAc,GAAIH,OAAD,IAAY;AACjC,SAAI,IAAII,CAAR,IAAaH,SAAb,EAAuB;AACrB,YAAMI,UAAU,GAAGJ,SAAS,CAACG,CAAD,CAAT,CAAaE,QAAhC;AACA,YAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAY,IAAGH,UAAW,GAA1B,EAA8B,GAA9B,CAAX;AACAL,MAAAA,OAAO,GAAGA,OAAO,CAACS,OAAR,CAAgBF,EAAhB,EAAoBL,KAAK,CAACG,UAAD,CAAzB,CAAV;AACD;;AACDK,IAAAA,aAAa,GAAGC,MAAM,CAACC,gBAAD,CAAN,CAAyBC,MAAzC;AACAC,IAAAA,UAAU,CAACd,OAAD,CAAV;AACA,wBAAO,0CAAGA,OAAH,CAAP;AACD,GATD;;AAWA,sBAAO,0CAAGG,cAAc,CAACH,OAAD,CAAjB,CAAP;AACD,CAdD;;AAgBAD,cAAc,CAACgB,SAAf,GAA2B,EAA3B;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAGA,eAAelB,cAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DisplayContent = ({content,variables,group}) => {\r\n\r\n  const displayContent = (content) =>{\r\n    for(let i in variables){\r\n      const currentVar = variables[i].variable;\r\n      const re = new RegExp(`{${currentVar}}`, \"g\");\r\n      content = content.replace(re, group[currentVar]);\r\n    }\r\n    correctAnswer = groups[randomGroupIndex].answer;\r\n    setContent(content);\r\n    return <>{content}</>;\r\n  }\r\n\r\n  return <>{displayContent(content)}</>\r\n}\r\n\r\nDisplayContent.propTypes = {\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nexport default DisplayContent;\r\n"]},"metadata":{},"sourceType":"module"}