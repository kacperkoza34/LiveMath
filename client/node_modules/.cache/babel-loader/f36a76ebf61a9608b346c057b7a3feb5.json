{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\VariabelsList.js\";\nimport React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport { addTaskData, addVarDescription } from '../../../../redux/actions/newTask';\n\nclass VariabelsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      variablesInput: '',\n      activeForm: 0,\n      addingType: '',\n      varsExist: false,\n      varsOneLetter: false\n    };\n  }\n\n  getCode() {\n    const {\n      taskContent: task\n    } = this.props;\n    let subString = '';\n    let start = false;\n    const code = [];\n\n    for (let i in task) {\n      if (task[i] === '}') {\n        if (subString.length) {\n          if (!code.some(({\n            variable\n          }) => variable == subString.trim())) {\n            code.push({\n              variable: subString.trim(),\n              description: ''\n            });\n          }\n        }\n\n        ;\n        subString = '';\n        start = false;\n      }\n\n      ;\n      if (start) subString = subString + task[i];\n\n      if (task[i] === '{') {\n        start = true;\n        i++;\n      }\n    }\n\n    if (code.length) {\n      this.setState({\n        varsExist: false\n      });\n\n      if (code.some(({\n        variable\n      }) => variable.length !== 1)) {\n        console.log('test warunku');\n        this.setState({\n          varsOneLetter: true\n        });\n        return [];\n      } else {\n        this.setState({\n          varsOneLetter: false\n        });\n        return code;\n      }\n    } else {\n      this.setState({\n        varsExist: true\n      });\n      return code;\n    }\n\n    ;\n  }\n\n  addDescription(e, variable) {\n    const {\n      addVarDescription\n    } = this.props;\n    console.log(e.target.value);\n    console.log(variable);\n    addVarDescription(e.target.value, variable);\n  }\n\n  render() {\n    const {\n      addTaskData,\n      taskData\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => addTaskData(this.getCode()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Ustal zmienne\"), this.state.varsExist && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 35\n      }\n    }, \"Nie poda\\u0142e\\u015B zmiennych\"), this.state.varsOneLetter && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 39\n      }\n    }, \"Nazwy zmiennych powinny zawiera\\u0107 jedn\\u0105 litere\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Nazwa\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Opis\")), Array.from(taskData).map(({\n      variable,\n      description\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      key: variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, variable), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      value: description,\n      onChange: e => this.addDescription(e, variable),\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  taskContent: state.newTask.content,\n  taskData: state.newTask.variables\n});\n\nexport default connect(mapStateToProps, {\n  addTaskData,\n  addVarDescription\n})(VariabelsList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/VariabelsList.js"],"names":["React","TextareaAutosize","connect","addTaskData","addVarDescription","VariabelsList","Component","state","variablesInput","activeForm","addingType","varsExist","varsOneLetter","getCode","taskContent","task","props","subString","start","code","i","length","some","variable","trim","push","description","setState","console","log","addDescription","e","target","value","render","taskData","Array","from","map","mapStateToProps","newTask","content","variables"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { connect } from 'react-redux';\r\nimport { addTaskData, addVarDescription } from '../../../../redux/actions/newTask';\r\n\r\nclass VariabelsList extends React.Component {\r\n\r\n  state = {\r\n    variablesInput: '',\r\n    activeForm: 0,\r\n    addingType: '',\r\n    varsExist: false,\r\n    varsOneLetter: false\r\n  }\r\n\r\n  getCode(){\r\n    const { taskContent: task } = this.props;\r\n    let subString = '';\r\n    let start = false;\r\n    const code = [];\r\n    for(let i in task){\r\n      if(task[i] === '}'){\r\n        if(subString.length){\r\n          if(!code.some(({variable}) => variable == subString.trim())){\r\n            code.push({variable: subString.trim(), description: ''});\r\n          }\r\n        };\r\n        subString = '';\r\n        start = false;\r\n      };\r\n      if(start) subString = subString + task[i];\r\n      if( task[i] === '{'){\r\n         start = true;\r\n         i++;\r\n      }\r\n    }\r\n    if(code.length){\r\n      this.setState({varsExist: false});\r\n      if(code.some(({variable}) => variable.length !== 1)){\r\n        console.log('test warunku')\r\n        this.setState({varsOneLetter: true});\r\n        return [];\r\n      }\r\n      else {\r\n        this.setState({varsOneLetter: false});\r\n        return code\r\n      }\r\n    }\r\n    else {\r\n      this.setState({varsExist: true});\r\n      return code;\r\n    };\r\n  }\r\n\r\n  addDescription(e,variable){\r\n    const { addVarDescription } = this.props;\r\n    console.log(e.target.value);\r\n    console.log(variable);\r\n    addVarDescription(e.target.value, variable);\r\n  }\r\n\r\n  render(){\r\n    const { addTaskData, taskData } = this.props;\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => addTaskData(this.getCode())}>\r\n          Ustal zmienne\r\n        </button>\r\n        { this.state.varsExist && <h4>Nie podałeś zmiennych</h4>}\r\n        { this.state.varsOneLetter && <h4>Nazwy zmiennych powinny zawierać jedną litere</h4>}\r\n\r\n        <ul>\r\n          <li>\r\n            <span>Nazwa</span>\r\n            <span>Opis</span>\r\n          </li>\r\n          {Array.from(taskData).map( ({variable, description}) =>\r\n            <li key={variable}>\r\n              <span>{variable}</span>\r\n              <span>\r\n              <TextareaAutosize\r\n                value={description}\r\n                onChange={e =>  this.addDescription(e,variable)}\r\n                name=\"title\"\r\n              />\r\n              </span>\r\n            </li>\r\n          )\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  taskContent: state.newTask.content,\r\n  taskData: state.newTask.variables\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n {addTaskData,addVarDescription})\r\n (VariabelsList);\r\n"]},"metadata":{},"sourceType":"module"}