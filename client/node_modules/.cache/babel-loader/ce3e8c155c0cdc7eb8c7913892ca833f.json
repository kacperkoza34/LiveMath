{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\TaskDashboard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst TaskDashboard = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Zadania\"), false ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Klasy\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, classes.map(({\n    title,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => {\n      setActiveClass(_id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 43\n    }\n  }, title))), /*#__PURE__*/React.createElement(AddClass, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"students-view bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Uczniowie\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, activeClass == null ? /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 39\n    }\n  }, \"Wybierz klase\") : /*#__PURE__*/React.createElement(React.Fragment, null, classes.map(({\n    _id,\n    students,\n    open,\n    title,\n    maxStudentsAmount\n  }) => _id == activeClass ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, title), students.length === maxStudentsAmount ? /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 64\n    }\n  }, \"Klasa jest pe\\u0142na\") : /*#__PURE__*/React.createElement(ClassStatus, {\n    myId: myId,\n    classId: _id,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(StudentsList, {\n    students: students,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  })) : ''))))));\n};\n\nTaskDashboard.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(TaskDashboard);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/TaskDashboard.js"],"names":["React","PropTypes","connect","Spinner","TaskDashboard","classes","map","title","_id","setActiveClass","activeClass","students","open","maxStudentsAmount","length","myId","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAG,MAAK;AAEzB,sBACE,uDACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIG,qBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,GAAR,CAAY,CAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,kBAAe;AAAI,IAAA,OAAO,EAAE,MAAI;AAC3CC,MAAAA,cAAc,CAACD,GAAD,CAAd;AACD,KAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAExBD,KAFwB,CAA3B,CADH,CAFF,eAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,WAAW,IAAI,IAAf,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAtB,gBACA,0CACGL,OAAO,CAACC,GAAR,CAAY,CAAC;AAACE,IAAAA,GAAD;AAAKG,IAAAA,QAAL;AAAcC,IAAAA,IAAd;AAAoBL,IAAAA,KAApB;AAA2BM,IAAAA;AAA3B,GAAD,KACXL,GAAG,IAAIE,WAAP,gBACA,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,EAEGI,QAAQ,CAACG,MAAT,KAAoBD,iBAApB,gBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAxC,gBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEE,IAAnB;AAAyB,IAAA,OAAO,EAAEP,GAAlC;AAAuC,IAAA,IAAI,EAAEI,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAIE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAED,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADA,GAOI,EARL,CADH,CAFJ,CAFF,CAVF,CALJ,CADF;AAwCD,CA1CD;;AA4CAP,aAAa,CAACY,SAAd,GAA0B,EAA1B;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAGA,eAAehB,OAAO,CAACe,eAAD,CAAP,CAAyBb,aAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst TaskDashboard = () =>{\r\n\r\n  return(\r\n    <>\r\n      <h3 className=\"large text-primary\">\r\n        Zadania\r\n      </h3>\r\n      {false? <Spinner/>:\r\n        <div className='wrapper'>\r\n          <div className='select-class'>\r\n            <h2>Klasy</h2>\r\n            <ul>\r\n              {classes.map(({title,_id})=><li onClick={()=>{\r\n                setActiveClass(_id)\r\n              }}>{title}</li>)}\r\n            </ul>\r\n            <AddClass />\r\n          </div>\r\n          <div className='students-view bg-dark'>\r\n            <h2>Uczniowie</h2>\r\n            <ul>\r\n              { activeClass == null ? <h5>Wybierz klase</h5> :\r\n                <>\r\n                  {classes.map(({_id,students,open, title, maxStudentsAmount})=>(\r\n                    _id == activeClass ? (\r\n                    <>\r\n                      <h2>{title}</h2>\r\n                      {students.length === maxStudentsAmount ? <h5>Klasa jest pe≈Çna</h5> :\r\n                        <ClassStatus myId={myId} classId={_id} open={open}/>}\r\n                      <StudentsList students={students} />\r\n                    </>\r\n                    ) : ''\r\n                  ))\r\n                  }\r\n                </>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nTaskDashboard.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nexport default connect(mapStateToProps)(TaskDashboard);\r\n"]},"metadata":{},"sourceType":"module"}