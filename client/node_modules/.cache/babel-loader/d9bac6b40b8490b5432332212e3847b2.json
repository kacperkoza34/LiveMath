{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\DisplayPrompts.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MathJax from '../../MathJax';\n\nconst DisplayPrompts = ({\n  usedPrompts,\n  model,\n  variables\n}) => {\n  const [prompts, addOne] = useState(usedPrompts);\n  const [canAddPrompt, cantAddPrompt] = useState(true);\n\n  const addPrompts = () => {\n    if (propmts == 1) cantAddPrompt(false);\n    if (propmts < 2) addOne(propmts + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, canAddPrompt && usedPrompts != 2 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addPrompts(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 47\n    }\n  }, \"Poka\\u017C podpowiedz\"), propmts >= 1 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, variables.map(({\n    variable,\n    description\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, variable + '  -  ', description))), propmts == 2 && /*#__PURE__*/React.createElement(MathJax, {\n    content: model,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }));\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default DisplayPrompts;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/DisplayPrompts.js"],"names":["React","useState","PropTypes","MathJax","DisplayPrompts","usedPrompts","model","variables","prompts","addOne","canAddPrompt","cantAddPrompt","addPrompts","propmts","map","variable","description","index","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AAC1D,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBR,QAAQ,CAACI,WAAD,CAAlC;AACA,QAAM,CAACK,YAAD,EAAeC,aAAf,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMW,UAAU,GAAG,MAAM;AACvB,QAAGC,OAAO,IAAI,CAAd,EAAiBF,aAAa,CAAC,KAAD,CAAb;AACjB,QAAGE,OAAO,GAAG,CAAb,EAAgBJ,MAAM,CAACI,OAAO,GAAC,CAAT,CAAN;AACjB,GAHD;;AAIA,sBACE,0CACKH,YAAY,IAAIL,WAAW,IAAI,CAAhC,iBAAsC;AAAQ,IAAA,OAAO,EAAE,MAAIO,UAAU,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAD1C,EAEIC,OAAO,IAAI,CAAX,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,SAAS,CAACO,GAAV,CAAc,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,EAA0BC,KAA1B,kBAChB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBF,QAAQ,GAAC,OAA1B,EAAmCC,WAAnC,CADE,CAFJ,CAHJ,EAUIH,OAAO,IAAI,CAAX,iBACA,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEP,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF;AAgBD,CAvBD;;AAyBAF,cAAc,CAACc,SAAf,GAA2B,EAA3B;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAGA,eAAehB,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MathJax from '../../MathJax';\r\n\r\nconst DisplayPrompts = ({usedPrompts, model, variables}) => {\r\n  const [prompts, addOne] = useState(usedPrompts);\r\n  const [canAddPrompt, cantAddPrompt] = useState(true)\r\n  const addPrompts = () => {\r\n    if(propmts == 1) cantAddPrompt(false);\r\n    if(propmts < 2) addOne(propmts+1);\r\n  }\r\n  return(\r\n    <>\r\n      { (canAddPrompt && usedPrompts != 2) && <button onClick={()=>addPrompts()}>Poka≈º podpowiedz</button>}\r\n      { propmts >= 1 &&\r\n        <ul>\r\n          {\r\n            variables.map(({variable, description}, index) =>\r\n          <li key={index}>{variable+'  -  '}{description}</li>)\r\n          }\r\n        </ul>\r\n      }\r\n      { propmts == 2 &&\r\n        <MathJax content={model} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nDisplayPrompts.propTypes = {\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nexport default DisplayPrompts;\r\n"]},"metadata":{},"sourceType":"module"}