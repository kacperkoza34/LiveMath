{"ast":null,"code":"import { TASKS_LOADING, TASKS_SUCCESS, TASKS_ERROR, CLEAR_TASKS, ADD_TASK_CONTENT } from '../actions/tasks';\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case TASKS_LOADING:\n      return { ...statePart,\n        isFetching: true\n      };\n\n    case TASKS_SUCCESS:\n      return { ...statePart,\n        isFetching: false,\n        data: action.payload\n      };\n\n    case TASKS_ERROR:\n      return { ...statePart,\n        isFetching: false,\n        errors: action.payload\n      };\n\n    case CLEAR_TASKS:\n      return { ...statePart,\n        data: {},\n        isFetching: true\n      };\n\n    case CLEAR_TASKS:\n      return { ...statePart,\n        data: {},\n        isFetching: true\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/reducers/tasksReducer.js"],"names":["TASKS_LOADING","TASKS_SUCCESS","TASKS_ERROR","CLEAR_TASKS","ADD_TASK_CONTENT","reducer","statePart","action","type","isFetching","data","payload","errors"],"mappings":"AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,gBALF,QAMO,kBANP;AAQA,eAAe,SAASC,OAAT,CAAiBC,SAAS,GAAG,EAA7B,EAAiCC,MAAM,GAAG,EAA1C,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,aAAL;AACE,aAAO,EACL,GAAGM,SADE;AAELG,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGK,SADE;AAELG,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAHR,OAAP;;AAKF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGI,SADE;AAELG,QAAAA,UAAU,EAAE,KAFP;AAGLG,QAAAA,MAAM,EAAEL,MAAM,CAACI;AAHV,OAAP;;AAKF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGG,SADE;AAELI,QAAAA,IAAI,EAAE,EAFD;AAGLD,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGG,SADE;AAELI,QAAAA,IAAI,EAAE,EAFD;AAGLD,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF;AACE,aAAOH,SAAP;AA/BJ;AAiCD","sourcesContent":["import {\r\n  TASKS_LOADING,\r\n  TASKS_SUCCESS,\r\n  TASKS_ERROR,\r\n  CLEAR_TASKS,\r\n  ADD_TASK_CONTENT\r\n} from '../actions/tasks';\r\n\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case TASKS_LOADING:\r\n      return {\r\n        ...statePart,\r\n        isFetching: true\r\n      }\r\n    case TASKS_SUCCESS:\r\n      return {\r\n        ...statePart,\r\n        isFetching: false,\r\n        data: action.payload\r\n      }\r\n    case TASKS_ERROR:\r\n      return {\r\n        ...statePart,\r\n        isFetching: false,\r\n        errors: action.payload\r\n      }\r\n    case CLEAR_TASKS:\r\n      return {\r\n        ...statePart,\r\n        data: {},\r\n        isFetching: true\r\n      }\r\n    case CLEAR_TASKS:\r\n      return {\r\n        ...statePart,\r\n        data: {},\r\n        isFetching: true\r\n      }\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}