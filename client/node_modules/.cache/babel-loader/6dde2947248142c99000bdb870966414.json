{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\NewTask.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\n\nconst NewTask = () => {\n  const [taskType, setTaskType] = useState(null);\n  const [redirect, setRedirect] = useState(null);\n  const [valiadtionError, setError] = useState(false);\n\n  const addTask = () => {\n    if (taskType) setRedirect(true);else setError(true);\n  };\n\n  if (taskType && redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/add/${taskType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 36\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Dodaj zadanie\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: taskType,\n    onChange: e => {\n      setError(false);\n      setTaskType(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"---\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"openTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Zadanie otwarte\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"closeTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Zadanie zamkni\\u0119te\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"booleanTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Zadanie prawda fa\\u0142sz\")), valiadtionError && \"Wybierz rodzaj zadania\");\n};\n\nexport default NewTask;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/NewTask.js"],"names":["React","useState","PropTypes","Redirect","NewTask","taskType","setTaskType","redirect","setRedirect","valiadtionError","setError","addTask","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,QAAlB,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpB,QAAIN,QAAJ,EAAcG,WAAW,CAAC,IAAD,CAAX,CAAd,KACKE,QAAQ,CAAC,IAAD,CAAR;AACN,GAHD;;AAKA,MAAIL,QAAQ,IAAIE,QAAhB,EAA0B,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,QAAOF,QAAS,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAE1B,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAE,MAAMM,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,IAAA,KAAK,EAAEN,QADT;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAO;AACfF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,MAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,IAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,eAQE;AAAQ,IAAA,KAAK,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,eASE;AAAQ,IAAA,KAAK,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,eAUE;AAAQ,IAAA,KAAK,EAAE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAVF,CAFF,EAcGL,eAAe,IAAI,wBAdtB,CADF;AAkBD,CA9BD;;AAgCA,eAAeL,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\n\nconst NewTask = () => {\n  const [taskType, setTaskType] = useState(null);\n  const [redirect, setRedirect] = useState(null);\n  const [valiadtionError, setError] = useState(false);\n\n  const addTask = () => {\n    if (taskType) setRedirect(true);\n    else setError(true);\n  };\n\n  if (taskType && redirect) return <Redirect to={`/add/${taskType}`} />;\n\n  return (\n    <>\n      <button onClick={() => addTask()}>Dodaj zadanie</button>\n      <select\n        value={taskType}\n        onChange={(e) => {\n          setError(false);\n          setTaskType(e.target.value);\n        }}\n      >\n        <option value={\"\"}>---</option>\n        <option value={\"openTask\"}>Zadanie otwarte</option>\n        <option value={\"closeTask\"}>Zadanie zamknięte</option>\n        <option value={\"booleanTask\"}>Zadanie prawda fałsz</option>\n      </select>\n      {valiadtionError && \"Wybierz rodzaj zadania\"}\n    </>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}