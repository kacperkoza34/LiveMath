{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\Features\\\\AddGroups\\\\AddGroups.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./AddGroups.module.scss\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { addGroup, deleteGroup } from \"../../../../../../redux/actions/newTask\";\n\nconst AddGroups = ({\n  variables,\n  content,\n  addGroup,\n  deleteGroup,\n  groups\n}) => {\n  useEffect(() => {}, [variables, content]);\n  const mockVars = {};\n  variables.forEach(({\n    variable\n  }, index) => {\n    mockVars[variable] = \"\";\n  });\n  const [formData, setFormData] = useState({ ...mockVars,\n    answer: \"\"\n  });\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addGroup({ ...formData,\n      id: uuidv4()\n    });\n    setFormData({ ...mockVars,\n      answer: \"\"\n    });\n  };\n\n  const displayGroup = item => {\n    const listItems = [];\n\n    for (let i in item) {\n      if (i != \"id\") {\n        listItems.push( /*#__PURE__*/React.createElement(\"li\", {\n          styles: \"display: block\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, i == \"answer\" ? \"Odpowiedz =  \" : `${i} =  `), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, item[i])));\n      }\n    }\n\n    const list = /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }\n    }, listItems);\n    return list;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, variables.length > 0 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Zdefinuj warto\\u015Bci dla grup\"), variables.map(({\n    variable\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, variable + \"  =  \"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Warto\\u015B\\u0107\",\n    name: variable,\n    value: formData[variable],\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Dodaj odpowiedz:\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Odpowiedz\",\n    name: \"answer\",\n    value: formData.answer,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }\n  }, \"Dodaj\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, groups.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    styles: \"display: block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, `Grupa ${index + 1}`, displayGroup(item), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteGroup(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Usun grupe\")))));\n};\n\nconst mapStateToProps = state => ({\n  variables: state.newTask.data.variables,\n  content: state.newTask.data.content,\n  groups: state.newTask.data.groups\n});\n\nexport default connect(mapStateToProps, {\n  addGroup,\n  deleteGroup\n})(AddGroups);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/Features/AddGroups/AddGroups.js"],"names":["React","useState","useEffect","styles","TextareaAutosize","v4","uuidv4","connect","addGroup","deleteGroup","AddGroups","variables","content","groups","mockVars","forEach","variable","index","formData","setFormData","answer","onChange","e","target","name","value","onSubmit","preventDefault","id","displayGroup","item","listItems","i","push","list","root","length","map","box","mapStateToProps","state","newTask","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./AddGroups.module.scss\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { addGroup, deleteGroup } from \"../../../../../../redux/actions/newTask\";\n\nconst AddGroups = ({ variables, content, addGroup, deleteGroup, groups }) => {\n  useEffect(() => {}, [variables, content]);\n\n  const mockVars = {};\n  variables.forEach(({ variable }, index) => {\n    mockVars[variable] = \"\";\n  });\n\n  const [formData, setFormData] = useState({ ...mockVars, answer: \"\" });\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addGroup({ ...formData, id: uuidv4() });\n    setFormData({ ...mockVars, answer: \"\" });\n  };\n  const displayGroup = (item) => {\n    const listItems = [];\n    for (let i in item) {\n      if (i != \"id\") {\n        listItems.push(\n          <li styles=\"display: block\">\n            <span>{i == \"answer\" ? \"Odpowiedz =  \" : `${i} =  `}</span>\n            <span>{item[i]}</span>\n          </li>\n        );\n      }\n    }\n    const list = <ul>{listItems}</ul>;\n\n    return list;\n  };\n  return (\n    <div className={styles.root}>\n      {variables.length > 0 && (\n        <form onSubmit={(e) => onSubmit(e)}>\n          <h3>Zdefinuj wartości dla grup</h3>\n          {variables.map(({ variable }) => (\n            <div className={styles.box}>\n              <h5>{variable + \"  =  \"}</h5>\n              <input\n                placeholder=\"Wartość\"\n                name={variable}\n                value={formData[variable]}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n          ))}\n          <div className={styles.box}>\n            <h5>Dodaj odpowiedz:</h5>\n            <input\n              placeholder=\"Odpowiedz\"\n              name=\"answer\"\n              value={formData.answer}\n              onChange={(e) => onChange(e)}\n              required\n            />\n          </div>\n          {<button>Dodaj</button>}\n        </form>\n      )}\n      <ul className={styles.groups}>\n        {groups.map((item, index) => (\n          <li styles=\"display: block\">\n            {`Grupa ${index + 1}`}\n            {displayGroup(item)}\n            <button onClick={() => deleteGroup(item.id)}>Usun grupe</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  variables: state.newTask.data.variables,\n  content: state.newTask.data.content,\n  groups: state.newTask.data.groups,\n});\n\nexport default connect(mapStateToProps, { addGroup, deleteGroup })(AddGroups);\n"]},"metadata":{},"sourceType":"module"}