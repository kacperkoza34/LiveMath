{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load user\n\nexport const loadUser = (register = false) => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  if (register) window.location.reload();else {\n    try {\n      let res;\n\n      if (localStorage.token) {\n        res = await axios.get('/api/auth');\n        dispatch({\n          type: USER_LOADED,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: AUTH_ERROR\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n\n    ;\n  }\n}; // Register user\n\nexport const register = ({\n  name,\n  email,\n  password,\n  params\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    let res;\n\n    if (params.class) {\n      res = await axios.post(`/api/users/student/${params.teacher}/${params.class}`, body, config);\n    } else {\n      res = await axios.post(`/api/users/teacher/${params.teacher}`, body, config);\n    }\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(({\n        msg\n      }) => {\n        dispatch(setAlert(msg, 'danger'));\n      });\n    }\n\n    ;\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login user\n\nexport const login = ({\n  email,\n  password,\n  accountType\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password,\n    accountType\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(({\n        msg\n      }) => {\n        dispatch(setAlert(msg, 'danger'));\n      });\n    }\n\n    ;\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  window.location.reload();\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemo/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","register","dispatch","localStorage","token","window","location","reload","res","get","type","payload","data","err","name","email","password","params","config","headers","body","JSON","stringify","class","post","teacher","errors","response","forEach","msg","login","accountType","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load user\r\n\r\nexport const loadUser = (register = false) => async dispatch => {\r\n  if(localStorage.token){\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  if(register) window.location.reload();\r\n  else {\r\n    try {\r\n      let res;\r\n      if(localStorage.token){\r\n        res = await axios.get('/api/auth');\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AUTH_ERROR\r\n        })\r\n      }\r\n    } catch (err){\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      })\r\n    };\r\n  }\r\n};\r\n\r\n// Register user\r\n\r\nexport const register = ({ name, email, password, params}) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ name, email, password});\r\n  try {\r\n    let res;\r\n    if(params.class){\r\n      res = await axios.post(`/api/users/student/${params.teacher}/${params.class}`, body, config);\r\n    }\r\n    else {\r\n      res = await axios.post(`/api/users/teacher/${params.teacher}`, body, config);\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if(errors){\r\n      errors.forEach(({msg}) => {\r\n        dispatch(setAlert(msg, 'danger'));\r\n      });\r\n    };\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login user\r\n\r\nexport const login = ({email, password, accountType}) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({email, password, accountType});\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if(errors){\r\n      errors.forEach(({msg}) => {\r\n        dispatch(setAlert(msg, 'danger'));\r\n      });\r\n    };\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// LOGOUT\r\n\r\nexport const logout = () => dispatch => {\r\n  window.location.reload();\r\n  dispatch({type: CLEAR_PROFILE});\r\n  dispatch({type: LOGOUT});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}