{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register user\n\nexport const register = ({\n  name,\n  email,\n  password,\n  params\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  console.log(params);\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    let res;\n\n    if (params.class) {\n      res = await axios.post(`/api/users/student/${params.teacher}/${params.class}`, body, config);\n    } else {\n      res = await axios.post(`/api/users/teacher/${params.teacher}`, body, config);\n    }\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const {\n      errors,\n      msg\n    } = err.response.data;\n    console.log(err.response.data);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    if (msg) dispatch(setAlert(msg, 'danger'));\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login user\n\nexport const login = ({\n  email,\n  password,\n  accountType\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password,\n    accountType\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err.response);\n    const {\n      errors,\n      msg\n    } = err.response.data;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    if (msg) dispatch(setAlert(msg, 'danger'));\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemo/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","params","config","headers","console","log","body","JSON","stringify","class","post","teacher","errors","msg","response","forEach","error","login","accountType","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load user\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if(localStorage.token){\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err){\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    })\r\n  }\r\n};\r\n\r\n// Register user\r\n\r\nexport const register = ({ name, email, password, params}) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  console.log(params)\r\n  const body = JSON.stringify({ name, email, password});\r\n  try {\r\n    let res;\r\n    if(params.class){\r\n      res = await axios.post(`/api/users/student/${params.teacher}/${params.class}`, body, config);\r\n    }\r\n    else {\r\n      res = await axios.post(`/api/users/teacher/${params.teacher}`, body, config);\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const {errors, msg} = err.response.data;\r\n    console.log(err.response.data);\r\n    if(errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    if(msg)dispatch(setAlert(msg, 'danger'));\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n};\r\n\r\n// Login user\r\n\r\nexport const login = ({email, password, accountType}) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({email, password, accountType});\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n    console.log(res);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    console.log(err.response);\r\n\r\n    const {errors, msg} = err.response.data;\r\n    if(errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    if(msg)dispatch(setAlert(msg, 'danger'));\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n};\r\n\r\n// LOGOUT\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({type: CLEAR_PROFILE});\r\n  dispatch({type: LOGOUT});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}