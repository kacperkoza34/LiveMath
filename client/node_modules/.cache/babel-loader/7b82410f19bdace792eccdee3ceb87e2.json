{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\SendTask.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sendOpenTask } from '../../../../redux/actions/newTask';\n\nconst SendTask = ({\n  newTask\n}) => {\n  const {\n    content,\n    variables,\n    model,\n    groups,\n    section,\n    class: classNew\n  } = newTask;\n  const [error, setError] = useState('');\n\n  const sendTask = () => {\n    if (content && variables.length && model && groups.length && section && classNew) {\n      setError('');\n      sendOpenTask(newTask);\n    } else setError('Nie uzupełniono wszystkich danych');\n\n    console.log(content.trim().length);\n    console.log(variables.length);\n    console.log(model.trim().length);\n    console.log(groups.length);\n    console.log(section);\n    console.log(classNew);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error.length > 0 && error, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask\n});\n\nexport default connect(mapStateToProps)(SendTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/SendTask.js"],"names":["React","useState","PropTypes","connect","sendOpenTask","SendTask","newTask","content","variables","model","groups","section","class","classNew","error","setError","sendTask","length","console","log","trim","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAE7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,MAA7B;AAAqCC,IAAAA,OAArC;AAA8CC,IAAAA,KAAK,EAAIC;AAAvD,MAAoEP,OAA1E;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMe,QAAQ,GAAG,MAAK;AACpB,QAAGT,OAAO,IACPC,SAAS,CAACS,MADV,IAEAR,KAFA,IAGAC,MAAM,CAACO,MAHP,IAIAN,OAJA,IAKAE,QALH,EAMC;AACEE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAX,MAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,KATF,MAUKS,QAAQ,CAAC,mCAAD,CAAR;;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAO,CAACa,IAAR,GAAeH,MAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACS,MAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAaV,KAAK,CAACW,IAAN,GAAaH,MAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACO,MAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAGD,GApBD;;AAqBA,sBACE,0CACGC,KAAK,CAACG,MAAN,GAAe,CAAf,IAAoBH,KADvB,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAIE,QAAQ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF;AAMD,CA/BD;;AAiCA,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB;AADmB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { sendOpenTask } from '../../../../redux/actions/newTask';\r\n\r\nconst SendTask = ({newTask}) =>{\r\n\r\n  const { content, variables, model, groups, section, class :  classNew } = newTask;\r\n  const [error, setError] = useState('');\r\n  const sendTask = () =>{\r\n    if(content &&\r\n       variables.length &&\r\n       model &&\r\n       groups.length &&\r\n       section &&\r\n       classNew\r\n    ){\r\n       setError('');\r\n       sendOpenTask(newTask);\r\n     }\r\n    else setError('Nie uzupełniono wszystkich danych');\r\n    console.log(content.trim().length);\r\n    console.log(variables.length);\r\n    console.log( model.trim().length);\r\n    console.log(groups.length);\r\n    console.log(section);\r\n    console.log(classNew);\r\n\r\n\r\n  }\r\n  return(\r\n    <>\r\n      {error.length > 0 && error }\r\n      <button onClick={()=>sendTask()}>Zapisz zadanie</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  newTask: state.newTask\r\n});\r\n\r\nexport default connect(mapStateToProps)(SendTask);\r\n"]},"metadata":{},"sourceType":"module"}