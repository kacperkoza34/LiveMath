{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\SendTask.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst SendTask = ({\n  newTask: {\n    content,\n    variables,\n    model,\n    groups\n  }\n}) => {\n  const [error, setError] = useState([]);\n\n  const sendTask = () => {\n    setError([]);\n    console.log(content.length);\n    console.log(variables.length);\n    console.log(model.length);\n    console.log(groups.length);\n    if (!content.length) setError([...error, {\n      msg: 'Nie podano treśći zadania'\n    }]);\n    if (!variables.length) setError([...error, {\n      msg: 'Nie podano zmiennych'\n    }]);\n    if (!model.length) setError([...error, {\n      msg: 'Nie podano wzoru'\n    }]);\n    if (!groups.length) setError([...error, {\n      msg: 'Nie podano grup'\n    }]);\n    let allValuesAdded = false;\n    groups.forEach((item, i) => {\n      allValuesAdded = variables.some(({\n        variable\n      }) => item[variable] == null);\n      if (item.answer == null) allValuesAdded = true;\n    });\n    if (allValuesAdded) setError([...error, {\n      msg: 'Nie uzupełniono wszystkich wartości w grupach'\n    }]);\n    if (!error.lenght) console.log('wysyłam');\n  };\n\n  console.log(error);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, error.length > 0 && error.map(({\n    msg\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 52\n    }\n  }, msg))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask\n});\n\nexport default connect(mapStateToProps)(SendTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/SendTask.js"],"names":["React","useState","PropTypes","connect","SendTask","newTask","content","variables","model","groups","error","setError","sendTask","console","log","length","msg","allValuesAdded","forEach","item","i","some","variable","answer","lenght","map","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO;AAEPC,IAAAA,SAFO;AAGPC,IAAAA,KAHO;AAIPC,IAAAA;AAJO;AADO,CAAD,KAMT;AAEN,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,QAAQ,GAAG,MAAK;AACpBD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACS,MAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACQ,MAAtB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,MAAnB;AAEA,QAAG,CAACT,OAAO,CAACS,MAAZ,EAAoBJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACM,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AACpB,QAAG,CAACT,SAAS,CAACQ,MAAd,EAAsBJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACM,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AACtB,QAAG,CAACR,KAAK,CAACO,MAAV,EAAkBJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACM,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AAClB,QAAG,CAACP,MAAM,CAACM,MAAX,EAAmBJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACM,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AAEnB,QAAIC,cAAc,GAAG,KAArB;AACAR,IAAAA,MAAM,CAACS,OAAP,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1BH,MAAAA,cAAc,GAAGV,SAAS,CAACc,IAAV,CAAe,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAgBH,IAAI,CAACG,QAAD,CAAJ,IAAkB,IAAjD,CAAjB;AACA,UAAGH,IAAI,CAACI,MAAL,IAAe,IAAlB,EAAwBN,cAAc,GAAG,IAAjB;AACzB,KAHD;AAIA,QAAGA,cAAH,EAAmBN,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACM,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AAEnB,QAAG,CAACN,KAAK,CAACc,MAAV,EAAkBX,OAAO,CAACC,GAAR,CAAY,SAAZ;AACnB,GApBD;;AAqBAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoBL,KAAK,CAACe,GAAN,CAAW,CAAC;AAACT,IAAAA;AAAD,GAAD,kBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,GAAL,CAAtB,CADvB,CADF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAIJ,QAAQ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD,CAxCD;;AA0CA,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAClCtB,EAAAA,OAAO,EAAEsB,KAAK,CAACtB;AADmB,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACuB,eAAD,CAAP,CAAyBtB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SendTask = ({\r\n  newTask: {\r\n    content,\r\n    variables,\r\n    model,\r\n    groups\r\n  }}) =>{\r\n\r\n  const [error, setError] = useState([]);\r\n\r\n  const sendTask = () =>{\r\n    setError([]);\r\n    console.log(content.length);\r\n    console.log(variables.length);\r\n    console.log(model.length);\r\n    console.log(groups.length);\r\n\r\n    if(!content.length) setError([...error,{msg: 'Nie podano treśći zadania'}]);\r\n    if(!variables.length) setError([...error,{msg: 'Nie podano zmiennych'}]);\r\n    if(!model.length) setError([...error,{msg: 'Nie podano wzoru'}]);\r\n    if(!groups.length) setError([...error,{msg: 'Nie podano grup'}]);\r\n\r\n    let allValuesAdded = false;\r\n    groups.forEach((item, i) => {\r\n      allValuesAdded = variables.some(({variable}) => item[variable] == null);\r\n      if(item.answer == null) allValuesAdded = true;\r\n    });\r\n    if(allValuesAdded) setError([...error,{msg: 'Nie uzupełniono wszystkich wartości w grupach'}]);\r\n\r\n    if(!error.lenght) console.log('wysyłam');\r\n  }\r\n  console.log(error);\r\n  return(\r\n    <>\r\n      <ul>\r\n        {error.length > 0 && error.map( ({msg}) => <li>{msg}</li> ) }\r\n      </ul>\r\n      <button onClick={()=>sendTask()}>Zapisz zadanie</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  newTask: state.newTask\r\n});\r\n\r\nexport default connect(mapStateToProps)(SendTask);\r\n"]},"metadata":{},"sourceType":"module"}