{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\TasksList.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from 'react-redux';\nimport { getTasks, clearTasks, taskSuccess } from '../../redux/actions/tasks';\n\nconst TasksList = ({\n  classId,\n  sectionId,\n  getTasks,\n  clearTasks,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    if (classId && sectionId) {\n      getTasks({\n        classId,\n        sectionId\n      });\n    }\n  }, [sectionId]);\n\n  const showTaskType = type => {\n    switch (type) {\n      case 'openTask':\n        return 'Zadanie otwarte';\n\n      case 'closeTask':\n        return 'Zadanie zamknięte';\n\n      case 'booleanTask':\n        return 'Zadanie prawda fałsz';\n\n      default:\n        return 'Zadanie';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, classId && sectionId ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, data.length > 0 ? data.map(({\n    name,\n    taskType,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => clearTasks(),\n    to: `/display/${taskType}/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, showTaskType(taskType))))) : 'Nie ma zadań z tego działu') : 'Wybierz dział'));\n};\n\nTasksList.propTypes = {\n  classId: PropTypes.string,\n  sectionId: PropTypes.string,\n  getTasks: PropTypes.func,\n  tasks: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getTasks,\n  clearTasks\n})(TasksList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/TasksList.js"],"names":["React","useEffect","PropTypes","Link","Redirect","BeatLoader","connect","getTasks","clearTasks","taskSuccess","TasksList","classId","sectionId","tasks","data","isFetching","errors","showTaskType","type","length","map","name","taskType","_id","propTypes","string","func","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,WAA/B,QAAkD,2BAAlD;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,OADiB;AAEjBC,EAAAA,SAFiB;AAGjBL,EAAAA,QAHiB;AAIjBC,EAAAA,UAJiB;AAKjBK,EAAAA,KAAK,EAAC;AACJC,IAAAA,IADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA;AAHI;AALW,CAAD,KASV;AAENf,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,OAAO,IAAIC,SAAd,EAAwB;AACtBL,MAAAA,QAAQ,CAAC;AAACI,QAAAA,OAAD;AAASC,QAAAA;AAAT,OAAD,CAAR;AACD;AACF,GAJQ,EAIP,CAACA,SAAD,CAJO,CAAT;;AAMA,QAAMK,YAAY,GAAIC,IAAD,IAAU;AAC7B,YAAQA,IAAR;AACE,WAAK,UAAL;AACE,eAAO,iBAAP;;AACF,WAAK,WAAL;AACE,eAAO,mBAAP;;AACF,WAAK,aAAL;AACE,eAAO,sBAAP;;AACF;AAAS,eAAO,SAAP;AAPX;AASD,GAVD;;AAWA,sBACE,0CACGH,UAAU,gBAAE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBACT,0CACGJ,OAAO,IAAIC,SAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACK,MAAL,GAAa,CAAb,GAAiBL,IAAI,CAACM,GAAL,CAAS,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA;AAAjB,GAAD,kBACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAIf,UAAU,EAA7B;AAAiC,IAAA,EAAE,EAAG,YAAWc,QAAS,IAAGC,GAAI,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,YAAY,CAACK,QAAD,CAAnB,CAFF,CADF,CADgB,CAAjB,GAOK,4BARR,CADD,GAWC,eAZJ,CAFJ,CADF;AAqBD,CAjDD;;AAmDAZ,SAAS,CAACc,SAAV,GAAsB;AACpBb,EAAAA,OAAO,EAAET,SAAS,CAACuB,MADC;AAEpBb,EAAAA,SAAS,EAAEV,SAAS,CAACuB,MAFD;AAGpBlB,EAAAA,QAAQ,EAAEL,SAAS,CAACwB,IAHA;AAIpBb,EAAAA,KAAK,EAAEX,SAAS,CAACyB;AAJG,CAAtB;;AAOA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BhB,EAAAA,KAAK,EAAEgB,KAAK,CAAChB;AADkB,CAAJ,CAA7B;;AAIA,eAAeP,OAAO,CAACsB,eAAD,EAAiB;AAACrB,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAjB,CAAP,CAA+CE,SAA/C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { connect } from 'react-redux';\r\nimport { getTasks, clearTasks, taskSuccess } from '../../redux/actions/tasks';\r\n\r\nconst TasksList = ({\r\n  classId,\r\n  sectionId,\r\n  getTasks,\r\n  clearTasks, \r\n  tasks:{\r\n    data,\r\n    isFetching,\r\n    errors\r\n  }}) =>{\r\n\r\n  useEffect(()=>{\r\n    if(classId && sectionId){\r\n      getTasks({classId,sectionId});\r\n    }\r\n  },[sectionId]);\r\n\r\n  const showTaskType = (type) => {\r\n    switch (type) {\r\n      case 'openTask':\r\n        return 'Zadanie otwarte'\r\n      case 'closeTask':\r\n        return 'Zadanie zamknięte'\r\n      case 'booleanTask':\r\n        return 'Zadanie prawda fałsz'\r\n      default: return 'Zadanie'\r\n    }\r\n  };\r\n  return(\r\n    <>\r\n      {isFetching? <BeatLoader size={20}/> :\r\n        <>\r\n          {classId && sectionId ?\r\n            <ul>\r\n              {data.length> 0 ? data.map(({name, taskType, _id})=>\r\n                <li>\r\n                  <Link onClick={()=>clearTasks()} to={`/display/${taskType}/${_id}`}>\r\n                    <span>{name}</span>\r\n                    <span>{showTaskType(taskType)}</span>\r\n                  </Link>\r\n                </li>\r\n                ) : 'Nie ma zadań z tego działu'}\r\n            </ul> :\r\n            'Wybierz dział'\r\n          }\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nTasksList.propTypes = {\r\n  classId: PropTypes.string,\r\n  sectionId: PropTypes.string,\r\n  getTasks: PropTypes.func,\r\n  tasks: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks\r\n})\r\n\r\nexport default connect(mapStateToProps,{getTasks,clearTasks})(TasksList);\r\n"]},"metadata":{},"sourceType":"module"}