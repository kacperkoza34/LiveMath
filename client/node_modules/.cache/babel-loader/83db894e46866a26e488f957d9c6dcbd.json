{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\OpenTaskDumm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport SendSolutionDumm from \"./SendSolution/SendSolutionDumm\";\nimport PromptsDumm from \"./DisplayPrompts/PromptsDumm\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask } from \"../../../../redux/actions/tasks\";\n\nconst getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst OpenTaskDumm = ({\n  match,\n  getOpenTask,\n  accountType,\n  updateDescription,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getOpenTask(match.params.id);\n  }, []);\n  const [answer, setAnswer] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [randomIndex, setRandomIndex] = useState(null);\n  const [checkAnswer, check] = useState(false);\n\n  const setGroup = () => {\n    const index = getRandomIntInclusive(0, data.data.groups.length - 1);\n    setRandomIndex(index);\n    setCorrectAnswer(data.data.groups[index].answer);\n  };\n\n  const addAnswer = e => {\n    check(false);\n    setAnswer(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, data.name), /*#__PURE__*/React.createElement(DisplayContent, {\n    content: data.data.content,\n    variables: data.data.variables,\n    group: data.data.groups[randomIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Punkty: \", data.points), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Ilo\\u015B\\u0107 grup: \", data.data.groups.length))), randomIndex === null ? setGroup() : \"\", /*#__PURE__*/React.createElement(PromptsDumm, {\n    model: data.data.model,\n    variables: [...data.data.variables, ...data.data.additionalVariables],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Miejsce na link z rozwi\\u0105zaniem\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    maxCols: \"15\",\n    minCols: \"5\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Odpowied\\u017A:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: answer,\n    onChange: e => addAnswer(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Twoja odpowied\\u017A:\"), /*#__PURE__*/React.createElement(MathJax, {\n    className: styles.answer,\n    content: \"`\" + answer + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SendSolutionDumm, {\n    checkAnswer: checkAnswer,\n    answer: answer,\n    correctAnswer: correctAnswer,\n    check: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), accountType == \"teacher\" && /*#__PURE__*/React.createElement(AddTaskToClass, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 40\n    }\n  })));\n};\n\nOpenTaskDumm.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask\n})(OpenTaskDumm);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/OpenTaskDumm.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","DisplayContent","SendSolutionDumm","PromptsDumm","MathJax","TextareaAutosize","AddTaskToClass","connect","getOpenTask","getRandomIntInclusive","min","max","Math","ceil","floor","random","OpenTaskDumm","match","accountType","updateDescription","tasks","data","isFetching","errors","params","id","answer","setAnswer","description","setDescription","correctAnswer","setCorrectAnswer","randomIndex","setRandomIndex","checkAnswer","check","setGroup","index","groups","length","addAnswer","e","target","value","root","header","name","content","variables","points","model","additionalVariables","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport SendSolutionDumm from \"./SendSolution/SendSolutionDumm\";\nimport PromptsDumm from \"./DisplayPrompts/PromptsDumm\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask } from \"../../../../redux/actions/tasks\";\n\nconst getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst OpenTaskDumm = ({\n  match,\n  getOpenTask,\n  accountType,\n  updateDescription,\n  tasks: { data, isFetching, errors },\n}) => {\n  useEffect(() => {\n    getOpenTask(match.params.id);\n  }, []);\n\n  const [answer, setAnswer] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [randomIndex, setRandomIndex] = useState(null);\n  const [checkAnswer, check] = useState(false);\n\n  const setGroup = () => {\n    const index = getRandomIntInclusive(0, data.data.groups.length - 1);\n    setRandomIndex(index);\n    setCorrectAnswer(data.data.groups[index].answer);\n  };\n\n  const addAnswer = (e) => {\n    check(false);\n    setAnswer(e.target.value);\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          <div className={styles.header}>\n            <div>\n              <h4>{data.name}</h4>\n              <DisplayContent\n                content={data.data.content}\n                variables={data.data.variables}\n                group={data.data.groups[randomIndex]}\n              />\n            </div>\n            <p>\n              <span>Punkty: {data.points}</span>\n              <span>Ilość grup: {data.data.groups.length}</span>\n            </p>\n          </div>\n          {randomIndex === null ? setGroup() : \"\"}\n          <PromptsDumm\n            model={data.data.model}\n            variables={[\n              ...data.data.variables,\n              ...data.data.additionalVariables,\n            ]}\n          />\n          <h4>Miejsce na link z rozwiązaniem</h4>\n          <TextareaAutosize\n            maxCols=\"15\"\n            minCols=\"5\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          ></TextareaAutosize>\n          <div className={styles.answer}>\n            <h4>Odpowiedź:</h4>\n            <input value={answer} onChange={(e) => addAnswer(e)}></input>\n          </div>\n          <div className={styles.answer}>\n            <h4>Twoja odpowiedź:</h4>\n            <MathJax className={styles.answer} content={\"`\" + answer + \"`\"} />\n          </div>\n          <SendSolutionDumm\n            checkAnswer={checkAnswer}\n            answer={answer}\n            correctAnswer={correctAnswer}\n            check={check}\n          />\n          {accountType == \"teacher\" && <AddTaskToClass />}\n        </>\n      )}\n    </div>\n  );\n};\n\nOpenTaskDumm.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n})(OpenTaskDumm);\n"]},"metadata":{},"sourceType":"module"}