{"ast":null,"code":"import { apiRequest } from '../actions/apiRequest';\nimport { REGISTER_START, REGISTER_SUCCESS, LOGIN_START, LOGIN_SUCCESS, AUTH_ERROR, ALREDY_LOGGED, authError, loginSuccess, registerSuccess, loading } from '../actions/auth';\nimport { setAuthToken } from '../../utils/setAuthToken';\nconst configJson = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst register = ({\n  dispatch,\n  register\n}) => next => action => {\n  next(action);\n\n  if (action.type === REGISTER_START) {\n    const {\n      name,\n      email,\n      password,\n      params\n    } = action.payload;\n    let url = '';\n\n    if (params.class) {\n      url = `/api/users/student/${params.teacher}/${params.class}`;\n    } else {\n      url = `/api/users/teacher/${params.teacher}`;\n    }\n\n    dispatch(loading());\n    dispatch(apiRequest('POST', url, registerSuccess, authError, {\n      name,\n      email,\n      password\n    }, configJson));\n  }\n\n  if (action.type === LOGIN_START) {\n    const url = '/api/auth';\n    dispatch(loading());\n    dispatch(apiRequest('POST', url, loginSuccess, authError, action.payload, configJson));\n  }\n\n  if (action.type === REGISTER_SUCCESS) {\n    console.log(action.payload);\n  }\n\n  if (action.type === LOGIN_SUCCESS) {\n    console.log(action.payload);\n  }\n\n  if (action.type === AUTH_ERROR) {\n    console.log(action.payload);\n  }\n\n  if (action.type === ALREDY_LOGGED) {\n    console.log(action.payload);\n  }\n};\n\nexport default register;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/middleware/auth.js"],"names":["apiRequest","REGISTER_START","REGISTER_SUCCESS","LOGIN_START","LOGIN_SUCCESS","AUTH_ERROR","ALREDY_LOGGED","authError","loginSuccess","registerSuccess","loading","setAuthToken","configJson","headers","register","dispatch","next","action","type","name","email","password","params","payload","url","class","teacher","console","log"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,SAPF,EAQEC,YARF,EASEC,eATF,EAUEC,OAVF,QAWO,iBAXP;AAaA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACP,oBAAiB;AADV;AADQ,CAAnB;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWD,EAAAA;AAAX,CAAD,KAA0BE,IAAI,IAAIC,MAAM,IAAI;AAC3DD,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AACA,MAAKA,MAAM,CAACC,IAAP,KAAgBjB,cAArB,EAAuC;AACrC,UAAM;AAAEkB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB,QAAoCL,MAAM,CAACM,OAAjD;AAEA,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAGF,MAAM,CAACG,KAAV,EAAgB;AACbD,MAAAA,GAAG,GAAI,sBAAqBF,MAAM,CAACI,OAAQ,IAAGJ,MAAM,CAACG,KAAM,EAA3D;AACD,KAFF,MAEQ;AACLD,MAAAA,GAAG,GAAI,sBAAqBF,MAAM,CAACI,OAAQ,EAA3C;AACD;;AACFX,IAAAA,QAAQ,CAACL,OAAO,EAAR,CAAR;AACAK,IAAAA,QAAQ,CAACf,UAAU,CAAC,MAAD,EAASwB,GAAT,EAAcf,eAAd,EAA+BF,SAA/B,EAA0C;AAACY,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAA1C,EAAmET,UAAnE,CAAX,CAAR;AACD;;AAED,MAAKK,MAAM,CAACC,IAAP,KAAgBf,WAArB,EAAoC;AAClC,UAAMqB,GAAG,GAAG,WAAZ;AACAT,IAAAA,QAAQ,CAACL,OAAO,EAAR,CAAR;AACAK,IAAAA,QAAQ,CAACf,UAAU,CAAC,MAAD,EAASwB,GAAT,EAAchB,YAAd,EAA4BD,SAA5B,EAAuCU,MAAM,CAACM,OAA9C,EAAuDX,UAAvD,CAAX,CAAR;AACD;;AAED,MAAKK,MAAM,CAACC,IAAP,KAAgBhB,gBAArB,EAAyC;AACvCyB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACM,OAAnB;AACD;;AAED,MAAKN,MAAM,CAACC,IAAP,KAAgBd,aAArB,EAAsC;AACpCuB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACM,OAAnB;AACD;;AAED,MAAKN,MAAM,CAACC,IAAP,KAAgBb,UAArB,EAAmC;AACjCsB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACM,OAAnB;AACD;;AAED,MAAKN,MAAM,CAACC,IAAP,KAAgBZ,aAArB,EAAsC;AACpCqB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACM,OAAnB;AACD;AACF,CApCD;;AAsCA,eAAeT,QAAf","sourcesContent":["import { apiRequest } from '../actions/apiRequest';\r\nimport {\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  AUTH_ERROR,\r\n  ALREDY_LOGGED,\r\n  authError,\r\n  loginSuccess,\r\n  registerSuccess,\r\n  loading\r\n} from '../actions/auth';\r\n\r\nimport { setAuthToken } from '../../utils/setAuthToken';\r\n\r\nconst configJson = {\r\n  headers: {\r\n    'Content-Type' : 'application/json'\r\n  }\r\n};\r\n\r\nconst register = ({dispatch, register}) => next => action => {\r\n  next(action);\r\n  if ( action.type === REGISTER_START  ) {\r\n    const { name, email, password, params } = action.payload;\r\n\r\n    let url = '';\r\n    if(params.class){\r\n       url = `/api/users/student/${params.teacher}/${params.class}`\r\n     } else {\r\n       url = `/api/users/teacher/${params.teacher}`\r\n     }\r\n    dispatch(loading());\r\n    dispatch(apiRequest('POST', url, registerSuccess, authError, {name, email, password}, configJson));\r\n  }\r\n\r\n  if ( action.type === LOGIN_START  ) {\r\n    const url = '/api/auth';\r\n    dispatch(loading());\r\n    dispatch(apiRequest('POST', url, loginSuccess, authError, action.payload, configJson));\r\n  }\r\n\r\n  if ( action.type === REGISTER_SUCCESS  ) {\r\n    console.log(action.payload)\r\n  }\r\n\r\n  if ( action.type === LOGIN_SUCCESS  ) {\r\n    console.log(action.payload)\r\n  }\r\n\r\n  if ( action.type === AUTH_ERROR  ) {\r\n    console.log(action.payload)\r\n  }\r\n\r\n  if ( action.type === ALREDY_LOGGED  ) {\r\n    console.log(action.payload)\r\n  }\r\n};\r\n\r\nexport default register;\r\n"]},"metadata":{},"sourceType":"module"}