{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\SendTask.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst SendTask = ({\n  newTask: {\n    content,\n    variables,\n    model,\n    groups\n  }\n}) => {\n  const [error, setError] = useState([]);\n\n  const sendTask = async () => {\n    try {\n      await setError([]);\n      if (!content.length) await setError([...error, {\n        msg: 'Nie podano treśći zadania'\n      }]);\n      if (!variables.length) await setError([...error, {\n        msg: 'Nie podano zmiennych'\n      }]);\n      if (!model.length) await setError([...error, {\n        msg: 'Nie podano wzoru'\n      }]);\n      if (!groups.length) await setError([...error, {\n        msg: 'Nie podano grup'\n      }]);\n      let allValuesAdded = false;\n      await groups.forEach((item, i) => {\n        allValuesAdded = variables.some(({\n          variable\n        }) => item[variable] == null);\n        if (item.answer == null) allValuesAdded = true;\n      });\n      if (allValuesAdded) await setError([...error, {\n        msg: 'Nie uzupełniono wszystkich wartości w grupach'\n      }]);\n      if (!error.lenght) console.log('wysyłam');\n    } catch (e) {\n      if (e) console.log('coś poszło nie tak');\n    }\n  };\n\n  console.log(error);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, error.length > 0 && error.map(({\n    msg\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 52\n    }\n  }, msg))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask\n});\n\nexport default connect(mapStateToProps)(SendTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/SendTask.js"],"names":["React","useState","PropTypes","connect","SendTask","newTask","content","variables","model","groups","error","setError","sendTask","length","msg","allValuesAdded","forEach","item","i","some","variable","answer","lenght","console","log","e","map","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO;AAEPC,IAAAA,SAFO;AAGPC,IAAAA,KAHO;AAIPC,IAAAA;AAJO;AADO,CAAD,KAMT;AAEN,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,QAAQ,GAAG,YAAW;AAC1B,QAAG;AACD,YAAMD,QAAQ,CAAC,EAAD,CAAd;AACA,UAAG,CAACL,OAAO,CAACO,MAAZ,EAAoB,MAAMF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACI,QAAAA,GAAG,EAAE;AAAN,OAAV,CAAD,CAAd;AACpB,UAAG,CAACP,SAAS,CAACM,MAAd,EAAsB,MAAMF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACI,QAAAA,GAAG,EAAE;AAAN,OAAV,CAAD,CAAd;AACtB,UAAG,CAACN,KAAK,CAACK,MAAV,EAAkB,MAAMF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACI,QAAAA,GAAG,EAAE;AAAN,OAAV,CAAD,CAAd;AAClB,UAAG,CAACL,MAAM,CAACI,MAAX,EAAmB,MAAMF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACI,QAAAA,GAAG,EAAE;AAAN,OAAV,CAAD,CAAd;AAEnB,UAAIC,cAAc,GAAG,KAArB;AACA,YAAMN,MAAM,CAACO,OAAP,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AAChCH,QAAAA,cAAc,GAAGR,SAAS,CAACY,IAAV,CAAe,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAgBH,IAAI,CAACG,QAAD,CAAJ,IAAkB,IAAjD,CAAjB;AACA,YAAGH,IAAI,CAACI,MAAL,IAAe,IAAlB,EAAwBN,cAAc,GAAG,IAAjB;AACzB,OAHK,CAAN;AAIA,UAAGA,cAAH,EAAmB,MAAMJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACI,QAAAA,GAAG,EAAE;AAAN,OAAV,CAAD,CAAd;AAEnB,UAAG,CAACJ,KAAK,CAACY,MAAV,EAAkBC,OAAO,CAACC,GAAR,CAAY,SAAZ;AACnB,KAfD,CAeE,OAAOC,CAAP,EAAU;AACV,UAAGA,CAAH,EAAMF,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACP;AACF,GAnBD;;AAoBAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,MAAN,GAAe,CAAf,IAAoBH,KAAK,CAACgB,GAAN,CAAW,CAAC;AAACZ,IAAAA;AAAD,GAAD,kBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,GAAL,CAAtB,CADvB,CADF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAIF,QAAQ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD,CAvCD;;AAyCA,MAAMe,eAAe,GAAIC,KAAD,KAAY;AAClCvB,EAAAA,OAAO,EAAEuB,KAAK,CAACvB;AADmB,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SendTask = ({\r\n  newTask: {\r\n    content,\r\n    variables,\r\n    model,\r\n    groups\r\n  }}) =>{\r\n\r\n  const [error, setError] = useState([]);\r\n\r\n  const sendTask = async () =>{\r\n    try{\r\n      await setError([]);\r\n      if(!content.length) await setError([...error,{msg: 'Nie podano treśći zadania'}]);\r\n      if(!variables.length) await setError([...error,{msg: 'Nie podano zmiennych'}]);\r\n      if(!model.length) await setError([...error,{msg: 'Nie podano wzoru'}]);\r\n      if(!groups.length) await setError([...error,{msg: 'Nie podano grup'}]);\r\n\r\n      let allValuesAdded = false;\r\n      await groups.forEach((item, i) => {\r\n        allValuesAdded = variables.some(({variable}) => item[variable] == null);\r\n        if(item.answer == null) allValuesAdded = true;\r\n      });\r\n      if(allValuesAdded) await setError([...error,{msg: 'Nie uzupełniono wszystkich wartości w grupach'}]);\r\n\r\n      if(!error.lenght) console.log('wysyłam');\r\n    } catch (e) {\r\n      if(e) console.log('coś poszło nie tak')\r\n    }\r\n  }\r\n  console.log(error);\r\n  return(\r\n    <>\r\n      <ul>\r\n        {error.length > 0 && error.map( ({msg}) => <li>{msg}</li> ) }\r\n      </ul>\r\n      <button onClick={()=>sendTask()}>Zapisz zadanie</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  newTask: state.newTask\r\n});\r\n\r\nexport default connect(mapStateToProps)(SendTask);\r\n"]},"metadata":{},"sourceType":"module"}