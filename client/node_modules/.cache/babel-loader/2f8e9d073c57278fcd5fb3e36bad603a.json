{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\BooleanTask\\\\BooleanTask.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from '../../MathJax';\nimport { connect } from 'react-redux';\nimport { getBooleanTask } from '../../../../redux/actions/tasks';\n\nconst BooleanTask = ({\n  match,\n  getBooleanTask,\n  accountType,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getBooleanTask(match.params.id);\n  }, []);\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = '';\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, taskStatus === null && prepareState(), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, data.description), taskStatus && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, data.data.map(({\n    content,\n    answer\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, `${i + 1}). `, \"Podaj odpowiedz:\", /*#__PURE__*/React.createElement(\"input\", {\n    name: `${i}`,\n    value: taskStatus[`${i}`],\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), checkAnswers && (taskStatus[`${i}`] == answer ? 'Ok' : 'Źle'))))));\n};\n\nBooleanTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getBooleanTask\n})(BooleanTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/BooleanTask/BooleanTask.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","MathJax","connect","getBooleanTask","BooleanTask","match","accountType","tasks","data","isFetching","errors","params","id","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","prepareState","forEach","item","i","name","description","map","content","answer","e","onChange","propTypes","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBF,EAAAA,cAFmB;AAGnBG,EAAAA,WAHmB;AAInBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA;AAHK;AAJY,CAAD,KASf;AAEHb,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,cAAc,CAACE,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BjB,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACkB,YAAD,EAAeC,cAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMoB,YAAY,GAAG,MAAM;AACzBV,IAAAA,IAAI,CAACA,IAAL,CAAUW,OAAV,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9BR,MAAAA,OAAO,CAAE,GAAEQ,CAAE,EAAN,CAAP,GAAkB,EAAlB;AACA,KAFD;AAGAN,IAAAA,aAAa,CAAC,EAAC,GAAGF;AAAJ,KAAD,CAAb;AACD,GALD;;AAQA,sBACE,0CACGJ,UAAU,gBAAE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBACT,0CACGK,UAAU,KAAK,IAAf,IAAuBI,YAAY,EADtC,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAI,CAACc,IAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,IAAI,CAACe,WAAT,CAHF,EAIGT,UAAU,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACA,IAAL,CAAUgB,GAAV,CAAc,CAAC;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAD,EAAkBL,CAAlB,kBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,GAAEA,CAAC,GAAC,CAAE,KAAZ,mCAEE;AACE,IAAA,IAAI,EAAG,GAAEA,CAAE,EADb;AAEE,IAAA,KAAK,EAAEP,UAAU,CAAE,GAAEO,CAAE,EAAN,CAFnB;AAGE,IAAA,QAAQ,EAAGM,CAAD,IAAKC,QAAQ,CAACD,CAAD,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOIX,YAAY,KAAKF,UAAU,CAAE,GAAEO,CAAE,EAAN,CAAV,IAAsBK,MAAtB,GAA8B,IAA9B,GAAoC,KAAzC,CAPhB,CADD,CAAL,CALJ,CAFJ,CADF;AA0BD,CArDD;;AAuDAtB,WAAW,CAACyB,SAAZ,GAAwB,EAAxB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BxB,EAAAA,KAAK,EAAEwB,KAAK,CAACxB,KADkB;AAE/BD,EAAAA,WAAW,EAAEyB,KAAK,CAACC,IAAN,CAAWxB,IAAX,CAAgBF;AAFE,CAAJ,CAA7B;;AAKA,eAAeJ,OAAO,CAAC4B,eAAD,EAAiB;AAAC3B,EAAAA;AAAD,CAAjB,CAAP,CAA0CC,WAA1C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport MathJax from '../../MathJax';\r\nimport { connect } from 'react-redux';\r\nimport { getBooleanTask } from '../../../../redux/actions/tasks';\r\n\r\n\r\nconst BooleanTask = ({\r\n  match,\r\n  getBooleanTask,\r\n  accountType,\r\n  tasks: {\r\n    data,\r\n    isFetching,\r\n    errors,\r\n  }\r\n}) =>{\r\n\r\n  useEffect(()=>{\r\n    getBooleanTask(match.params.id);\r\n  },[]);\r\n\r\n  const answers = {};\r\n  const [taskStatus, setTaskStatus] =  useState(null);\r\n  const [checkAnswers, setChekAnswers] =  useState(false);\r\n\r\n  const prepareState = () => {\r\n    data.data.forEach((item, i) => {\r\n     answers[`${i}`] = '';\r\n    });\r\n    setTaskStatus({...answers});\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {isFetching? <BeatLoader size={20}/> :\r\n        <>\r\n          {taskStatus === null && prepareState()}\r\n          <h4>{data.name}</h4>\r\n          <p>{data.description}</p>\r\n          {taskStatus &&\r\n            <ul>{data.data.map(({content,answer},i)=>\r\n                  <li>{`${i+1}). `}\r\n                    Podaj odpowiedz:\r\n                    <input\r\n                      name={`${i}`}\r\n                      value={taskStatus[`${i}`]}\r\n                      onChange={(e)=>onChange(e)}\r\n                    ></input>\r\n                    { checkAnswers && (taskStatus[`${i}`] == answer? 'Ok': 'Źle')}\r\n                  </li>\r\n                  )\r\n                }\r\n            </ul>\r\n          }\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nBooleanTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks,\r\n  accountType: state.user.data.accountType\r\n})\r\n\r\nexport default connect(mapStateToProps,{getBooleanTask})(BooleanTask);\r\n"]},"metadata":{},"sourceType":"module"}