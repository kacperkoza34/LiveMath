{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\TaskDashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TasksList from './TasksList';\nimport NewTask from './NewTask';\nimport './TaskDashboard.css';\nimport { availableClasses } from './TaskDashboardConfig.js';\nimport { taskSuccess } from '../../redux/actions/tasks';\nimport { connect } from 'react-redux';\n\nconst TaskDashboard = () => {\n  const [activeList, setActiveList] = useState(null);\n  const [title, setTitle] = useState('Wybierz klase');\n  const [activeSection, setActiveSection] = useState(null);\n\n  const hideSections = () => {\n    setActiveList(null);\n    setActiveSection(null);\n  };\n\n  const showSections = id => {\n    setActiveList(id);\n    setActiveSection(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NewTask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-class-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Zadania\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, availableClasses.map(({\n    name,\n    id,\n    sections\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => {\n      id == activeList ? hideSections() : setActiveList(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, name)), id == activeList ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sublist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }\n  }, sections.map(section => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-el\",\n    onClick: () => setActiveSection(section.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }\n  }, section.name))) : '')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"students-view bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TasksList, {\n    classId: activeList,\n    sectionId: activeSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default connect(null, {\n  taskSuccess\n})(TaskDashboard);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/TaskDashboard.js"],"names":["React","useState","useEffect","PropTypes","TasksList","NewTask","availableClasses","taskSuccess","connect","TaskDashboard","activeList","setActiveList","title","setTitle","activeSection","setActiveSection","hideSections","showSections","id","map","name","sections","section"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,qBAAP;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAK;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,eAAD,CAAlC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMe,YAAY,GAAG,MAAK;AACxBL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHD;;AAIA,QAAME,YAAY,GAAIC,EAAD,IAAO;AAC1BP,IAAAA,aAAa,CAACO,EAAD,CAAb;AACAH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHD;;AAIA,sBACE,uDACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,gBAAgB,CAACa,GAAjB,CAAqB,CAAC;AAACC,IAAAA,IAAD;AAAOF,IAAAA,EAAP;AAAWG,IAAAA;AAAX,GAAD,kBACpB,uDACE;AAAI,IAAA,OAAO,EAAE,MAAI;AAAEH,MAAAA,EAAE,IAAIR,UAAN,GAAkBM,YAAY,EAA9B,GAAmCL,aAAa,CAACO,EAAD,CAAhD;AAAqD,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,IAAP,CADF,CADF,EAIIF,EAAE,IAAIR,UAAN,gBAAkB;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACfW,QAAQ,CAACF,GAAT,CAAcG,OAAD,iBAAW;AAAI,IAAA,SAAS,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAIP,gBAAgB,CAACO,OAAO,CAACJ,EAAT,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoEI,OAAO,CAACF,IAA5E,CAAxB,CADe,CAAlB,GAEQ,EANZ,CADD,CADH,CAFF,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEV,UAApB;AAAgC,IAAA,SAAS,EAAEI,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CAFF,CADF;AA0BD,CAvCD;;AAyCA,eAAeN,OAAO,CAAC,IAAD,EAAM;AAACD,EAAAA;AAAD,CAAN,CAAP,CAA4BE,aAA5B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TasksList from './TasksList';\r\nimport NewTask from './NewTask';\r\nimport './TaskDashboard.css';\r\nimport { availableClasses } from './TaskDashboardConfig.js';\r\nimport { taskSuccess } from '../../redux/actions/tasks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TaskDashboard = () =>{\r\n  const [activeList, setActiveList] = useState(null);\r\n  const [title, setTitle] = useState('Wybierz klase');\r\n  const [activeSection, setActiveSection] = useState(null);\r\n\r\n  const hideSections = () =>{\r\n    setActiveList(null);\r\n    setActiveSection(null);\r\n  }\r\n  const showSections = (id) =>{\r\n    setActiveList(id);\r\n    setActiveSection(null);\r\n  }\r\n  return(\r\n    <>\r\n      <NewTask />\r\n      <div className='wrapper'>\r\n        <div className='select-class-width'>\r\n          <h2>Zadania</h2>\r\n          <ul>\r\n            {availableClasses.map(({name, id, sections})=>\r\n              <>\r\n                <li onClick={()=>{ id == activeList? hideSections() : setActiveList(id)}}>\r\n                  <span>{name}</span>\r\n                </li>\r\n                { id == activeList? <ul className='sublist'>\r\n                    {sections.map((section)=><li className='list-el' onClick={()=>setActiveSection(section.id)}>{section.name}</li>)}\r\n                  </ul> : ''\r\n                }\r\n              </>\r\n          )}\r\n          </ul>\r\n        </div>\r\n        <div className='students-view bg-dark'>\r\n          <TasksList classId={activeList} sectionId={activeSection} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(null,{taskSuccess})(TaskDashboard);\r\n"]},"metadata":{},"sourceType":"module"}