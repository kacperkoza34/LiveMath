{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\OpenTaskFromApi.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport DisplayPromptsFromApi from \"./DisplayPrompts/DisplayPromptsFromApi\";\nimport Messages from \"./Messages/Messages\";\nimport SendSolutionApi from \"./SendSolution/SendSolutionApi\";\nimport SendSolutionDumm from \"./SendSolution/SendSolutionDumm\";\nimport ReviewTask from \"../ReviewTask/ReviewTask\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport { useOnePrompt, updateDescription, updateAnswer, sendOpenTaskResolution, reviewOpenTask } from \"../../../../redux/actions/resolveTask\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  student,\n  reviewOpenTask,\n  tasks: {\n    data,\n    isFetching,\n    errors,\n    taskConfig\n  }\n}) => {\n  const {\n    deadLine,\n    promptsAllowed,\n    usedPrompts,\n    descriptionRequired,\n    _id,\n    resolved,\n    group,\n    description,\n    answer,\n    toUpdate,\n    messages\n  } = taskConfig;\n  useEffect(() => {\n    getOpenTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [checkAnswer, check] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const countPoints = points => {\n    if (!usedPrompts) return points;\n    if (usedPrompts === 1) return (points / 2).toPrecision(2);\n    if (usedPrompts === 2) return (points / 4).toPrecision(2);\n  };\n\n  const sendSolution = (toUpdate = false) => {\n    if (descriptionRequired && !description.length) setError(\"Wymagany opis!\");else {\n      if (toUpdate) sendOpenTaskResolution({ ...taskConfig,\n        toUpdate: true\n      });else sendOpenTaskResolution({ ...taskConfig\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, correctAnswer == null && setCorrectAnswer(data.data.groups[group].answer), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, data.name), /*#__PURE__*/React.createElement(DisplayContent, {\n    content: data.data.content,\n    variables: data.data.variables,\n    group: data.data.groups[group],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Punkty: \", countPoints(data.points)))), /*#__PURE__*/React.createElement(DisplayPromptsFromApi, {\n    resolved: resolved,\n    promptsAllowed: promptsAllowed,\n    usedPrompts: usedPrompts,\n    action: useOnePrompt,\n    accountType: accountType,\n    taskId: _id,\n    model: data.data.model,\n    variables: [...data.data.variables, ...data.data.additionalVariables],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Miejsce na link z rozwi\\u0105zaniem\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    maxCols: \"15\",\n    minCols: \"5\",\n    value: description,\n    onChange: e => {\n      setError(\"\");\n      updateDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Odpowied\\u017A:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: answer,\n    onChange: e => {\n      updateAnswer(e.target.value);\n      check(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Twoja odpowied\\u017A:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + answer + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }))), accountType === \"student\" ? /*#__PURE__*/React.createElement(SendSolutionApi, {\n    check: check,\n    checkAnswer: checkAnswer,\n    answer: answer,\n    correctAnswer: correctAnswer,\n    error: error,\n    resolved: resolved,\n    sendSolution: sendSolution,\n    toUpdate: toUpdate,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(SendSolutionDumm, {\n    checkAnswer: checkAnswer,\n    answer: answer,\n    correctAnswer: correctAnswer,\n    check: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), accountType === \"teacher\" && toUpdate ? /*#__PURE__*/React.createElement(ReviewTask, {\n    correctAnswer: correctAnswer,\n    taskId: _id,\n    studentId: student,\n    reduxAction: reviewOpenTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  })));\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n  student: state.student.data._id\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  reviewOpenTask\n})(OpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/OpenTaskFromApi.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","DisplayContent","DisplayPromptsFromApi","Messages","SendSolutionApi","SendSolutionDumm","ReviewTask","MathJax","TextareaAutosize","AddTaskToClass","connect","getOpenTask","setTaskConfig","useOnePrompt","updateDescription","updateAnswer","sendOpenTaskResolution","reviewOpenTask","OpenTask","match","accountType","student","tasks","data","isFetching","errors","taskConfig","deadLine","promptsAllowed","usedPrompts","descriptionRequired","_id","resolved","group","description","answer","toUpdate","messages","params","id","correctAnswer","setCorrectAnswer","checkAnswer","check","error","setError","countPoints","points","toPrecision","sendSolution","length","root","groups","header","name","content","variables","model","additionalVariables","e","target","value","result","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport DisplayPromptsFromApi from \"./DisplayPrompts/DisplayPromptsFromApi\";\nimport Messages from \"./Messages/Messages\";\nimport SendSolutionApi from \"./SendSolution/SendSolutionApi\";\nimport SendSolutionDumm from \"./SendSolution/SendSolutionDumm\";\nimport ReviewTask from \"../ReviewTask/ReviewTask\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport {\n  useOnePrompt,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  reviewOpenTask,\n} from \"../../../../redux/actions/resolveTask\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  student,\n  reviewOpenTask,\n  tasks: { data, isFetching, errors, taskConfig },\n}) => {\n  const {\n    deadLine,\n    promptsAllowed,\n    usedPrompts,\n    descriptionRequired,\n    _id,\n    resolved,\n    group,\n    description,\n    answer,\n    toUpdate,\n    messages,\n  } = taskConfig;\n  useEffect(() => {\n    getOpenTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [checkAnswer, check] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const countPoints = (points) => {\n    if (!usedPrompts) return points;\n    if (usedPrompts === 1) return (points / 2).toPrecision(2);\n    if (usedPrompts === 2) return (points / 4).toPrecision(2);\n  };\n\n  const sendSolution = (toUpdate = false) => {\n    if (descriptionRequired && !description.length) setError(\"Wymagany opis!\");\n    else {\n      if (toUpdate) sendOpenTaskResolution({ ...taskConfig, toUpdate: true });\n      else sendOpenTaskResolution({ ...taskConfig });\n    }\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {correctAnswer == null &&\n            setCorrectAnswer(data.data.groups[group].answer)}\n          <div className={styles.header}>\n            <div>\n              <h4>{data.name}</h4>\n              <DisplayContent\n                content={data.data.content}\n                variables={data.data.variables}\n                group={data.data.groups[group]}\n              />\n            </div>\n            <p>\n              <span>Punkty: {countPoints(data.points)}</span>\n            </p>\n          </div>\n          <DisplayPromptsFromApi\n            resolved={resolved}\n            promptsAllowed={promptsAllowed}\n            usedPrompts={usedPrompts}\n            action={useOnePrompt}\n            accountType={accountType}\n            taskId={_id}\n            model={data.data.model}\n            variables={[\n              ...data.data.variables,\n              ...data.data.additionalVariables,\n            ]}\n          />\n          <h4>Miejsce na link z rozwiązaniem</h4>\n          <TextareaAutosize\n            maxCols=\"15\"\n            minCols=\"5\"\n            value={description}\n            onChange={(e) => {\n              setError(\"\");\n              updateDescription(e.target.value);\n            }}\n          ></TextareaAutosize>\n          <div className={styles.answer}>\n            <h4>Odpowiedź:</h4>\n            <input\n              value={answer}\n              onChange={(e) => {\n                updateAnswer(e.target.value);\n                check(false);\n              }}\n            ></input>\n          </div>\n          <div className={styles.answer}>\n            <h4>Twoja odpowiedź:</h4>\n            <div className={styles.result}>\n              <MathJax content={\"`\" + answer + \"`\"} />\n            </div>\n          </div>\n          {accountType === \"student\" ? (\n            <SendSolutionApi\n              check={check}\n              checkAnswer={checkAnswer}\n              answer={answer}\n              correctAnswer={correctAnswer}\n              error={error}\n              resolved={resolved}\n              sendSolution={sendSolution}\n              toUpdate={toUpdate}\n              error={error}\n            />\n          ) : (\n            <SendSolutionDumm\n              checkAnswer={checkAnswer}\n              answer={answer}\n              correctAnswer={correctAnswer}\n              check={check}\n            />\n          )}\n          {accountType === \"teacher\" && toUpdate ? (\n            <ReviewTask\n              correctAnswer={correctAnswer}\n              taskId={_id}\n              studentId={student}\n              reduxAction={reviewOpenTask}\n            />\n          ) : (\n            \"\"\n          )}\n          <Messages messages={messages} />\n        </>\n      )}\n    </div>\n  );\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n  student: state.student.data._id,\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  reviewOpenTask,\n})(OpenTask);\n"]},"metadata":{},"sourceType":"module"}