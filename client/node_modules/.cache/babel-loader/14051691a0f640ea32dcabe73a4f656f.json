{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMath\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Github Repos\"), repos === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }) : repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, repo.name))))));\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","Spinner","connect","getGithubRepos","ProfileGithub","username","repos","map","repo","_id","html_url","name","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA,cAAX;AAA2BG,EAAAA;AAA3B,CAAD,KAAsC;AAC1DP,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEP,CAACF,cAAD,CAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGG,KAAK,KAAK,IAAV,gBAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GACCA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACZ;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAED,IAAI,CAACE,QADb;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,IAAI,CAACG,IALR,CADF,CADF,CADF,CADF,CAHJ,CADF;AAuBD,CA5BD;;AA8BAP,aAAa,CAACQ,SAAd,GAA0B;AACxBT,EAAAA,cAAc,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADP;AAExBR,EAAAA,KAAK,EAAEN,SAAS,CAACe,KAAV,CAAgBD,UAFC;AAGxBT,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,KAAK,EAAEY,KAAK,CAACC,OAAN,CAAcb;AADW,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,aAA3C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) =>{\r\n  useEffect(()=>{\r\n    getGithubRepos(username);\r\n  },[getGithubRepos]);\r\n\r\n  return(\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? <Spinner/> :(\r\n        repos.map(repo=>(\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}