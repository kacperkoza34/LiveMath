{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\CloseTask\\\\CloseTaskFromApi.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./CloseTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport SendSolution from \"./SendSolution/SendSolution\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport { updateDescription, updateAnswer, sendOpenTaskResolution } from \"../../../../redux/actions/resolveTask\";\n\nconst CloseTaskFromApi = ({\n  match,\n  getCloseTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  tasks: {\n    data,\n    isFetching,\n    errors,\n    taskConfig: {\n      answer,\n      description\n    }\n  }\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  const onChange = e => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n    updateAnswer({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({\n      answer\n    }, i) => answer == taskStatus[i] && result++);\n    return `Wynik: ${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, taskStatus === null && prepareState(), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, data.content), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.points,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Punkty: \", data.points), taskStatus && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, data.data.map(({\n    content,\n    answer: correctAnswer\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.listElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, `${i + 1}). `, /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + content + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), \"Podaj odpowiedz:\", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    autocomplete: \"off\",\n    name: `${i}`,\n    value: answer[`${i}`],\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, \"Twoja odpowiedz:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + taskStatus[`${i}`] + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))), checkAnswers && (answer[`${i}`] == correctAnswer ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Ok\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.fail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"\\u0179le\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Miejsce na link z rozwi\\u0105zaniem\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    maxCols: \"15\",\n    minCols: \"5\",\n    value: description,\n    onChange: e => updateDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChekAnswers(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Sprawd\\u017A odpowiedzi\")), checkAnswers && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, displayResult()), /*#__PURE__*/React.createElement(SendSolution, {\n    maxResult: taskStatus,\n    answers: answer,\n    description: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }))));\n};\n\nCloseTaskFromApi.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution\n})(CloseTaskFromApi);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTaskFromApi.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","MathJax","AddTaskToClass","SendSolution","TextareaAutosize","connect","getCloseTask","setTaskConfig","updateDescription","updateAnswer","sendOpenTaskResolution","CloseTaskFromApi","match","accountType","tasks","data","isFetching","errors","taskConfig","answer","description","params","id","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","prepareState","forEach","item","i","onChange","e","target","name","value","displayResult","result","Object","keys","length","root","content","points","map","correctAnswer","listElement","order","success","fail","check","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./CloseTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport SendSolution from \"./SendSolution/SendSolution\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport {\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n} from \"../../../../redux/actions/resolveTask\";\n\nconst CloseTaskFromApi = ({\n  match,\n  getCloseTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  tasks: {\n    data,\n    isFetching,\n    errors,\n    taskConfig: { answer, description },\n  },\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers });\n  };\n\n  const onChange = (e) => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus, [e.target.name]: e.target.value });\n    updateAnswer({ ...taskStatus, [e.target.name]: e.target.value });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({ answer }, i) => answer == taskStatus[i] && result++);\n    return `Wynik: ${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {taskStatus === null && prepareState()}\n          <h4>{data.name}</h4>\n          <p>{data.content}</p>\n          <p className={styles.points}>Punkty: {data.points}</p>\n          {taskStatus && (\n            <ul>\n              {data.data.map(({ content, answer: correctAnswer }, i) => (\n                <li className={styles.listElement}>\n                  <div className={styles.order}>\n                    {`${i + 1}). `}\n                    <MathJax content={\"`\" + content + \"`\"} />\n                  </div>\n                  Podaj odpowiedz:\n                  <div className={styles.item}>\n                    <input\n                      autocomplete=\"off\"\n                      name={`${i}`}\n                      value={answer[`${i}`]}\n                      onChange={(e) => onChange(e)}\n                    ></input>\n                    <div>\n                      <span>Twoja odpowiedz:</span>\n                      <div className={styles.result}>\n                        <MathJax content={\"`\" + taskStatus[`${i}`] + \"`\"} />\n                      </div>\n                    </div>\n                    {checkAnswers &&\n                      (answer[`${i}`] == correctAnswer ? (\n                        <div className={styles.success}>Ok</div>\n                      ) : (\n                        <div className={styles.fail}>Źle</div>\n                      ))}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n          <div className={styles.description}>\n            <h4>Miejsce na link z rozwiązaniem</h4>\n            <TextareaAutosize\n              maxCols=\"15\"\n              minCols=\"5\"\n              value={description}\n              onChange={(e) => updateDescription(e.target.value)}\n            ></TextareaAutosize>\n          </div>\n          <div className={styles.check}>\n            <button onClick={() => setChekAnswers(true)}>\n              Sprawdź odpowiedzi\n            </button>\n          </div>\n          {checkAnswers && (\n            <>\n              <div className={styles.result}>{displayResult()}</div>\n              <SendSolution\n                maxResult={taskStatus}\n                answers={answer}\n                description={description}\n              />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nCloseTaskFromApi.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n})(CloseTaskFromApi);\n"]},"metadata":{},"sourceType":"module"}