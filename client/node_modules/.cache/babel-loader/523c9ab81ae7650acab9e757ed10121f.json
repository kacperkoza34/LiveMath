{"ast":null,"code":"import { apiRequest } from '../actions/apiRequest';\nimport { SEND_OPEN_TASK, NEW_TASK_SUCCESS, NEW_TASK_ERROR, newTaskError, newTaskSuccess } from '../actions/newTask';\nimport { smallLoadingStart, smallLoadingStop } from '../actions/smallLoading';\n\nconst newTask = ({\n  dispatch\n}) => next => action => {\n  next(action);\n\n  if (action.type === SEND_OPEN_TASK) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest('POST', '/api/tasks/open', newTaskSuccess, newTaskError, action.payload, null));\n  }\n\n  if (action.type === NEW_TASK_SUCCESS) {\n    dispatch(smallLoadingStop());\n  }\n\n  if (action.type === NEW_TASK_SUCCESS) {\n    dispatch(smallLoadingStop());\n  }\n};\n\nexport default newTask;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/middleware/newTask.js"],"names":["apiRequest","SEND_OPEN_TASK","NEW_TASK_SUCCESS","NEW_TASK_ERROR","newTaskError","newTaskSuccess","smallLoadingStart","smallLoadingStop","newTask","dispatch","next","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,oBANP;AAQA,SACEC,iBADF,EAEEC,gBAFF,QAGO,yBAHP;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgBC,IAAI,IAAIC,MAAM,IAAI;AAChDD,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AACA,MAAKA,MAAM,CAACC,IAAP,KAAgBX,cAArB,EAAuC;AACrCQ,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CAACT,UAAU,CAAC,MAAD,EAAQ,iBAAR,EAA2BK,cAA3B,EAA2CD,YAA3C,EAAyDO,MAAM,CAACE,OAAhE,EAAyE,IAAzE,CAAX,CAAR;AACD;;AACD,MAAKF,MAAM,CAACC,IAAP,KAAgBV,gBAArB,EAAyC;AACvCO,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACD;;AACD,MAAKI,MAAM,CAACC,IAAP,KAAgBV,gBAArB,EAAyC;AACvCO,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACD;AACF,CAZD;;AAcA,eAAeC,OAAf","sourcesContent":["import { apiRequest } from '../actions/apiRequest';\r\nimport {\r\n  SEND_OPEN_TASK,\r\n  NEW_TASK_SUCCESS,\r\n  NEW_TASK_ERROR,\r\n  newTaskError,\r\n  newTaskSuccess\r\n} from '../actions/newTask';\r\n\r\nimport {\r\n  smallLoadingStart,\r\n  smallLoadingStop\r\n} from '../actions/smallLoading'\r\n\r\n\r\nconst newTask = ({dispatch}) => next => action => {\r\n  next(action);\r\n  if ( action.type === SEND_OPEN_TASK  ) {\r\n    dispatch(smallLoadingStart());\r\n    dispatch(apiRequest('POST','/api/tasks/open', newTaskSuccess, newTaskError, action.payload, null));\r\n  }\r\n  if ( action.type === NEW_TASK_SUCCESS  ) {\r\n    dispatch(smallLoadingStop());\r\n  }\r\n  if ( action.type === NEW_TASK_SUCCESS  ) {\r\n    dispatch(smallLoadingStop());\r\n  }\r\n};\r\n\r\nexport default newTask;\r\n"]},"metadata":{},"sourceType":"module"}