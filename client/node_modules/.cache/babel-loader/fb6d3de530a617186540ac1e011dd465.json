{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\routing\\\\StudentRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst StudentRoute = ({\n  component: Component,\n  accountType,\n  auth: {\n    isAuthenticated\n  },\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!loading) {\n        if (isAuthenticated && accountType == 'student') return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 72\n          }\n        }));else return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }\n        });\n      } else return /*#__PURE__*/React.createElement(BeatLoader, {\n        size: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 27\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nStudentRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps)(StudentRoute);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/routing/StudentRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","BeatLoader","StudentRoute","component","Component","accountType","auth","isAuthenticated","rest","props","loading","propTypes","object","isRequired","mapStateToProps","state","user","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAA3C;AAAiE,KAAGC;AAApE,CAAD,KAAgF;AACnG,sBACE,oBAAC,KAAD,oBAAWA,IAAX;AACA,IAAA,MAAM,EAAEC,KAAK,IAAG;AACN,UAAG,CAACC,OAAJ,EAAY;AACV,YAAGH,eAAe,IAAIF,WAAW,IAAI,SAArC,EAAgD,oBAAO,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP,CAAhD,KACK,oBAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACN,OAHD,MAIK,oBAAO,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACN,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAbD;;AAeAP,YAAY,CAACS,SAAb,GAAyB;AACvBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADmB;AAE/BD,EAAAA,WAAW,EAAEU,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBZ;AAFE,CAAJ,CAA7B;;AAKA,eAAeL,OAAO,CAACc,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst StudentRoute = ({ component: Component, accountType ,auth: { isAuthenticated } , ...rest }) => {\r\n  return (\r\n    <Route {...rest}\r\n    render={props =>{\r\n              if(!loading){\r\n                if(isAuthenticated && accountType == 'student') return <Component {...props}/>;\r\n                else return <Redirect to='/login' />;\r\n              }\r\n              else return <BeatLoader size={50}/>\r\n            }\r\n          }\r\n   />\r\n );\r\n};\r\n\r\nStudentRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n  auth: state.auth,\r\n  accountType: state.user.data.accountType\r\n})\r\n\r\nexport default connect(mapStateToProps)(StudentRoute);\r\n"]},"metadata":{},"sourceType":"module"}