{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMath\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  console.log(profile);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-ligth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Back to profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 34\n    }\n  }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"No experience credentials\")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/components/profile/Profile.js"],"names":["React","useEffect","PropTypes","connect","Spinner","Link","getProfileById","ProfileTop","ProfileAbout","Profile","profile","loading","auth","match","params","id","console","log","isAuthenticated","user","_id","experience","length","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(()=>{\r\n    getProfileById(match.params.id);\r\n  },[getProfileById,match.params.id]);\r\n  console.log(profile);\r\n  return (\r\n    <>\r\n      {profile === null || loading ? <Spinner/> :\r\n        <>\r\n          <Link to='/profiles' className='btn btn-ligth'>\r\n            Back to profiles\r\n          </Link>\r\n          {auth.isAuthenticated && auth.loading === false && auth.user._id ===\r\n            profile.user._id && (<Link to='/edit-profile' className='btn btn-dark'>Edit profile</Link>)\r\n          }\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <>\r\n                  {profile.experience.map( experience => (\r\n                    <ProfileExperience key={experience._id}/>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              ) }\r\n            </div>\r\n          </div>\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}