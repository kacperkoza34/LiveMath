{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport DashboardTeacher from './DashboardTeacher';\nimport DashboardStudent from './DashboardStudent';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Dashboard = ({\n  user: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  const content = isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, data.accountType == 'student' ? /*#__PURE__*/React.createElement(DashboardStudent, {\n    user: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(DashboardTeacher, {\n    user: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }));\n  return errors;\n};\n\nDashboard.propTypes = {\n  getTeacherProfile: PropTypes.func.isRequired,\n  getStudentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","connect","Link","DashboardTeacher","DashboardStudent","BeatLoader","Dashboard","user","data","isFetching","errors","content","accountType","propTypes","getTeacherProfile","func","isRequired","getStudentProfile","auth","object","profile","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB;AAAR,CAAD,KAA4C;AAC5D,QAAMC,OAAO,GACXF,UAAU,gBAAG,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACR,0CACID,IAAI,CAACI,WAAL,IAAoB,SAApB,gBACA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAEA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ;AASA,SAAOE,MAAP;AACD,CAXD;;AAaAJ,SAAS,CAACO,SAAV,GAAsB;AACpBC,EAAAA,iBAAiB,EAAEd,SAAS,CAACe,IAAV,CAAeC,UADd;AAEpBC,EAAAA,iBAAiB,EAAEjB,SAAS,CAACe,IAAV,CAAeC,UAFd;AAGpBE,EAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBH,UAHH;AAIpBI,EAAAA,OAAO,EAAEpB,SAAS,CAACmB,MAAV,CAAiBH;AAJN,CAAtB;;AAOA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,IAAI,EAAEe,KAAK,CAACf;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACoB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport DashboardTeacher from './DashboardTeacher';\r\nimport DashboardStudent from './DashboardStudent';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst Dashboard = ({ user: { data, isFetching, errors } }) => {\r\n  const content = (\r\n    isFetching ? <BeatLoader size={50}/> :\r\n      <>\r\n        { data.accountType == 'student' ?\r\n          <DashboardStudent user={data} /> :\r\n          <DashboardTeacher user={data} />\r\n        }\r\n      </>\r\n  );\r\n  return errors\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getTeacherProfile: PropTypes.func.isRequired,\r\n  getStudentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}