{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\DisplayPrompts.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DisplayPrompts = ({\n  usedPrompts,\n  model,\n  variables\n}) => {\n  const [propmts, addOne] = useState(usedPrompts);\n  const [canAddPrompt, cantAddPrompt] = useState(true);\n\n  const addPrompts = () => {\n    if (propmts == 1) cantAddPrompt(false);\n    if (propmts < 2) addOne(propmts + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, canAddPrompt && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addPrompts(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, \"Poka\\u017C podpowiedz\"));\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default DisplayPrompts;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/DisplayPrompts.js"],"names":["React","useState","PropTypes","DisplayPrompts","usedPrompts","model","variables","propmts","addOne","canAddPrompt","cantAddPrompt","addPrompts","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AAC1D,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBP,QAAQ,CAACG,WAAD,CAAlC;AACA,QAAM,CAACK,YAAD,EAAeC,aAAf,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAGJ,OAAO,IAAI,CAAd,EAAiBG,aAAa,CAAC,KAAD,CAAb;AACjB,QAAGH,OAAO,GAAG,CAAb,EAAgBC,MAAM,CAACD,OAAO,GAAC,CAAT,CAAN;AACjB,GAHD;;AAIA,sBACE,0CACIE,YAAY,iBAAI;AAAQ,IAAA,OAAO,EAAE,MAAIE,UAAU,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADpB,CADF;AAKD,CAZD;;AAcAR,cAAc,CAACS,SAAf,GAA2B,EAA3B;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAGA,eAAeX,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DisplayPrompts = ({usedPrompts, model, variables}) => {\r\n  const [propmts, addOne] = useState(usedPrompts);\r\n  const [canAddPrompt, cantAddPrompt] = useState(true)\r\n  const addPrompts = () => {\r\n    if(propmts == 1) cantAddPrompt(false);\r\n    if(propmts < 2) addOne(propmts+1);\r\n  }\r\n  return(\r\n    <>\r\n      { canAddPrompt && <button onClick={()=>addPrompts()}>Poka≈º podpowiedz</button>}\r\n    </>\r\n  )\r\n}\r\n\r\nDisplayPrompts.propTypes = {\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nexport default DisplayPrompts;\r\n"]},"metadata":{},"sourceType":"module"}