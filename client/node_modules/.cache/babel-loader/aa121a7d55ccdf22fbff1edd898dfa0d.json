{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTaskToClass\\\\AddTaskToClass.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { connect } from 'react-redux';\nimport { getClasses } from '../../../redux/actions/classes';\n\nconst AddTaskToClass = ({\n  getClasses,\n  classes,\n  taskType,\n  taskId\n}) => {\n  const {\n    isFetching,\n    errors,\n    data\n  } = classes;\n  useEffect(() => {\n    getClasses();\n  }, []);\n  const [selectedClasses, setSelectedClasses] = useState([]);\n\n  const addClass = _id => {\n    if (selectedClasses.includes(_id)) setSelectedClasses([...selectedClasses.filter(item => item !== _id)]);else setSelectedClasses([...selectedClasses, _id]);\n  };\n\n  const addToClasses = () => {};\n\n  return isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Dodaj zadanie do klasy\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, data.map(({\n    title,\n    _id\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: () => addClass(_id),\n    name: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"scales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, title)))));\n};\n\nconst mapStateToProps = state => ({\n  classes: state.classes\n});\n\nexport default connect(mapStateToProps, {\n  getClasses\n})(AddTaskToClass);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTaskToClass/AddTaskToClass.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","connect","getClasses","AddTaskToClass","classes","taskType","taskId","isFetching","errors","data","selectedClasses","setSelectedClasses","addClass","_id","includes","filter","item","addToClasses","map","title","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACD,EAAAA,UAAD;AAAaE,EAAAA,OAAb;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,CAAD,KAA4C;AACjE,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIDL,OAJL;AAMAP,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,UAAU;AACX,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAM,CAAEQ,eAAF,EAAmBC,kBAAnB,IAA0Cb,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMc,QAAQ,GAAIC,GAAD,IAAQ;AACvB,QAAGH,eAAe,CAACI,QAAhB,CAAyBD,GAAzB,CAAH,EAAkCF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,CAACK,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,KAAKH,GAA1C,CAAJ,CAAD,CAAlB,CAAlC,KACKF,kBAAkB,CAAC,CAAC,GAAGD,eAAJ,EAAoBG,GAApB,CAAD,CAAlB;AACN,GAHD;;AAKA,QAAMI,YAAY,GAAG,MAAK,CAEzB,CAFD;;AAIA,SAASV,UAAU,gBAAG,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACjB,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACS,GAAL,CAAS,CAAC;AAACC,IAAAA,KAAD;AAAON,IAAAA;AAAP,GAAD,kBACR,uDACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,MAAID,QAAQ,CAACC,GAAD,CAA5C;AAAmD,IAAA,IAAI,EAAEM,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,KAArB,CAFF,CADD,CADH,CAFF,CADF;AAcD,CApCD;;AAsCA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BjB,EAAAA,OAAO,EAAEiB,KAAK,CAACjB;AADgB,CAAJ,CAA7B;;AAIA,eAAeH,OAAO,CAACmB,eAAD,EAAiB;AAAClB,EAAAA;AAAD,CAAjB,CAAP,CAAsCC,cAAtC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { connect } from 'react-redux';\r\nimport { getClasses } from '../../../redux/actions/classes';\r\n\r\nconst AddTaskToClass = ({getClasses, classes, taskType ,taskId}) =>{\r\n  const {\r\n    isFetching,\r\n    errors,\r\n    data\r\n   } = classes;\r\n\r\n  useEffect(()=>{\r\n    getClasses();\r\n  },[]);\r\n\r\n  const [ selectedClasses, setSelectedClasses ] = useState([]);\r\n\r\n  const addClass = (_id) =>{\r\n    if(selectedClasses.includes(_id)) setSelectedClasses([...selectedClasses.filter((item) => item !== _id)]);\r\n    else setSelectedClasses([...selectedClasses,_id]);\r\n  };\r\n\r\n  const addToClasses = () =>{\r\n\r\n  };\r\n\r\n  return ( isFetching ? <BeatLoader size={15} /> :\r\n    <>\r\n      <h4>Dodaj zadanie do klasy</h4>\r\n      <div>\r\n        {data.map(({title,_id})=>\r\n          <>\r\n            <input type=\"checkbox\" onClick={()=>addClass(_id)} name={title} />\r\n            <label for=\"scales\">{title}</label>\r\n          </>\r\n        )\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n  classes: state.classes\r\n})\r\n\r\nexport default connect(mapStateToProps,{getClasses})(AddTaskToClass);\r\n"]},"metadata":{},"sourceType":"module"}