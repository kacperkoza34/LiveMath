{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\SendTask.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sendOpenTask } from '../../../../redux/actions/newTask';\n\nconst SendTask = ({\n  newTask,\n  sendOpenTask\n}) => {\n  const {\n    content,\n    name,\n    variables,\n    model,\n    groups,\n    section,\n    class: classNew\n  } = newTask;\n  const [error, setError] = useState('');\n\n  const sendTask = () => {\n    if (content.trim().length && name.trim().length && variables.length && model.trim().length && groups.length && section.length && classNew.length) {\n      setError('');\n      sendOpenTask(newTask);\n    } else setError('Nie uzupełniono wszystkich danych');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error.length > 0 && error, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask.data\n});\n\nexport default connect(mapStateToProps, {\n  sendOpenTask\n})(SendTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/SendTask.js"],"names":["React","useState","PropTypes","connect","sendOpenTask","SendTask","newTask","content","name","variables","model","groups","section","class","classNew","error","setError","sendTask","trim","length","mapStateToProps","state","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUF,EAAAA;AAAV,CAAD,KAA4B;AAE3C,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA,MAAnC;AAA2CC,IAAAA,OAA3C;AAAoDC,IAAAA,KAAK,EAAIC;AAA7D,MAA0ER,OAAhF;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMgB,QAAQ,GAAG,MAAK;AACpB,QAAGV,OAAO,CAACW,IAAR,GAAeC,MAAf,IACAX,IAAI,CAACU,IAAL,GAAYC,MADZ,IAEAV,SAAS,CAACU,MAFV,IAGAT,KAAK,CAACQ,IAAN,GAAaC,MAHb,IAIAR,MAAM,CAACQ,MAJP,IAKAP,OAAO,CAACO,MALR,IAMAL,QAAQ,CAACK,MANZ,EAOC;AACEH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAZ,MAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,KAVF,MAWKU,QAAQ,CAAC,mCAAD,CAAR;AACN,GAbD;;AAcA,sBACE,0CACGD,KAAK,CAACI,MAAN,GAAe,CAAf,IAAoBJ,KADvB,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAIE,QAAQ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF;AAMD,CAxBD;;AA0BA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,OAAO,EAAEe,KAAK,CAACf,OAAN,CAAcgB;AADW,CAAZ,CAAxB;;AAIA,eAAenB,OAAO,CAACiB,eAAD,EAAiB;AAAChB,EAAAA;AAAD,CAAjB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { sendOpenTask } from '../../../../redux/actions/newTask';\r\n\r\nconst SendTask = ({newTask, sendOpenTask}) =>{\r\n\r\n  const { content, name, variables, model, groups, section, class :  classNew } = newTask;\r\n  const [error, setError] = useState('');\r\n  const sendTask = () =>{\r\n    if(content.trim().length &&\r\n       name.trim().length &&\r\n       variables.length &&\r\n       model.trim().length &&\r\n       groups.length &&\r\n       section.length &&\r\n       classNew.length\r\n    ){\r\n       setError('');\r\n       sendOpenTask(newTask);\r\n     }\r\n    else setError('Nie uzupełniono wszystkich danych');\r\n  }\r\n  return(\r\n    <>\r\n      {error.length > 0 && error }\r\n      <button onClick={()=>sendTask()}>Zapisz zadanie</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  newTask: state.newTask.data\r\n});\r\n\r\nexport default connect(mapStateToProps,{sendOpenTask})(SendTask);\r\n"]},"metadata":{},"sourceType":"module"}