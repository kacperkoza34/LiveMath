{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // reducers\n\nimport authReducer from './reducers/authReducer';\nimport userReducer from './reducers/userReducer'; /// applyMiddleware\n\nimport auth from './middleware/auth';\nimport user from './middleware/auth';\nimport apiRequest from './middleware/apiRequest';\nconst initialState = {\n  auth: {\n    token: null,\n    isAuthenticated: false,\n    isFetching: false,\n    errors: []\n  },\n  user: {\n    data: {},\n    isFetching: false,\n    errors: []\n  }\n};\nconst reducers = {\n  auth: authReducer,\n  user: userReducer\n};\nconst combinedReducers = combineReducers(reducers);\nconst store = createStore(combinedReducers, initialState, composeWithDevTools(applyMiddleware(thunk, auth, apiRequest)));\nexport default store;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","authReducer","userReducer","auth","user","apiRequest","initialState","token","isAuthenticated","isFetching","errors","data","reducers","combinedReducers","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAGA,MAAMC,YAAY,GAAE;AAClBH,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAE,IADH;AAEJC,IAAAA,eAAe,EAAE,KAFb;AAGJC,IAAAA,UAAU,EAAE,KAHR;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GADY;AAOlBN,EAAAA,IAAI,EAAE;AACJO,IAAAA,IAAI,EAAE,EADF;AAEJF,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AAPY,CAApB;AAcA,MAAME,QAAQ,GAAG;AACfT,EAAAA,IAAI,EAAEF,WADS;AAEfG,EAAAA,IAAI,EAAEF;AAFS,CAAjB;AAKA,MAAMW,gBAAgB,GAAGjB,eAAe,CAACgB,QAAD,CAAxC;AAGA,MAAME,KAAK,GAAGjB,WAAW,CACvBgB,gBADuB,EAEvBP,YAFuB,EAGvBN,mBAAmB,CACjBF,eAAe,CACbC,KADa,EAEbI,IAFa,EAGbE,UAHa,CADE,CAHI,CAAzB;AAYA,eAAeS,KAAf","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// reducers\r\nimport authReducer from './reducers/authReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\n/// applyMiddleware\r\nimport auth from './middleware/auth';\r\nimport user from './middleware/auth';\r\nimport apiRequest from './middleware/apiRequest';\r\n\r\n\r\nconst initialState ={\r\n  auth: {\r\n    token: null,\r\n    isAuthenticated: false,\r\n    isFetching: false,\r\n    errors: []\r\n  },\r\n  user: {\r\n    data: {},\r\n    isFetching: false,\r\n    errors: []\r\n  }\r\n};\r\n\r\nconst reducers = {\r\n  auth: authReducer,\r\n  user: userReducer\r\n};\r\n\r\nconst combinedReducers = combineReducers(reducers);\r\n\r\n\r\nconst store = createStore(\r\n  combinedReducers,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(\r\n      thunk,\r\n      auth,\r\n      apiRequest\r\n    ),\r\n  )\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}