{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\DisplayPrompts\\\\DisplayPrompts.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DisplayPrompts.module.scss\";\nimport MathJax from \"../../../MathJax\";\nimport { connect } from \"react-redux\";\nimport { usePrompt } from \"../../../../../redux/actions/resolveTask\";\n\nconst DisplayPrompts = ({\n  usedPrompts,\n  model,\n  variables,\n  accountType\n}) => {\n  const [prompts, addOne] = useState(usedPrompts);\n  const [canAddPrompt, cantAddPrompt] = useState(true);\n\n  const addPrompts = () => {\n    if (prompts == 1) cantAddPrompt(false);\n    if (prompts < 2) addOne(prompts + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, \" \", canAddPrompt && usedPrompts != 2 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addPrompts(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Poka\\u017C podpowiedz\"), prompts >= 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Zmienne:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, variables.map(({\n    variable,\n    description\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, variable + \"  -  \", description)))), prompts == 2 && /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Wz\\xF3r:\"), /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + model + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }))));\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default DisplayPrompts;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/DisplayPrompts/DisplayPrompts.js"],"names":["React","useState","PropTypes","styles","MathJax","connect","usePrompt","DisplayPrompts","usedPrompts","model","variables","accountType","prompts","addOne","canAddPrompt","cantAddPrompt","addPrompts","root","map","variable","description","index","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0CAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA;AAAjC,CAAD,KAAoD;AACzE,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBZ,QAAQ,CAACO,WAAD,CAAlC;AAEA,QAAM,CAACM,YAAD,EAAeC,aAAf,IAAgCd,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMe,UAAU,GAAG,MAAM;AACvB,QAAIJ,OAAO,IAAI,CAAf,EAAkBG,aAAa,CAAC,KAAD,CAAb;AAClB,QAAIH,OAAO,GAAG,CAAd,EAAiBC,MAAM,CAACD,OAAO,GAAG,CAAX,CAAN;AAClB,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACc,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0CACG,GADH,EAEGH,YAAY,IAAIN,WAAW,IAAI,CAA/B,iBACC;AAAQ,IAAA,OAAO,EAAE,MAAMQ,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,EAKGJ,OAAO,IAAI,CAAX,iBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAA4BC,KAA5B,kBACb;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAG,OADd,EAEGC,WAFH,CADD,CADH,CAHF,CANJ,EAmBGR,OAAO,IAAI,CAAX,iBACC,0CACG,GADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,MAAMH,KAAN,GAAc,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CApBJ,CADF,CADF;AA+BD,CAvCD;;AAyCAF,cAAc,CAACe,SAAf,GAA2B,EAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAEA,eAAejB,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DisplayPrompts.module.scss\";\nimport MathJax from \"../../../MathJax\";\nimport { connect } from \"react-redux\";\nimport { usePrompt } from \"../../../../../redux/actions/resolveTask\";\n\nconst DisplayPrompts = ({ usedPrompts, model, variables, accountType }) => {\n  const [prompts, addOne] = useState(usedPrompts);\n\n  const [canAddPrompt, cantAddPrompt] = useState(true);\n  const addPrompts = () => {\n    if (prompts == 1) cantAddPrompt(false);\n    if (prompts < 2) addOne(prompts + 1);\n  };\n  return (\n    <div className={styles.root}>\n      <>\n        {\" \"}\n        {canAddPrompt && usedPrompts != 2 && (\n          <button onClick={() => addPrompts()}>Pokaż podpowiedz</button>\n        )}\n        {prompts >= 1 && (\n          <>\n            <h4>Zmienne:</h4>\n\n            <ul>\n              {variables.map(({ variable, description }, index) => (\n                <li key={index}>\n                  {variable + \"  -  \"}\n                  {description}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n        {prompts == 2 && (\n          <>\n            {\" \"}\n            <h4>Wzór:</h4>\n            <MathJax content={\"`\" + model + \"`\"} />\n          </>\n        )}\n      </>\n    </div>\n  );\n};\n\nDisplayPrompts.propTypes = {};\n\nconst mapStateToProps = (state) => ({});\n\nexport default DisplayPrompts;\n"]},"metadata":{},"sourceType":"module"}