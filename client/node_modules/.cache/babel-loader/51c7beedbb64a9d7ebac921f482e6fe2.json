{"ast":null,"code":"import { apiRequest } from \"../actions/apiRequest\";\nimport { USE_PROMPT, UPDATE_PROMPT, SEND_OPEN_TASK_RESOLUTION, updatePrompt } from \"../actions/resolveTask\";\nimport { taskError, TASKS_ERROR } from \"../actions/tasks\";\nimport { smallLoadingStart, smallLoadingStop } from \"../actions/smallLoading\";\n\nconst resolveTask = ({\n  dispatch\n}) => next => action => {\n  next(action);\n\n  if (action.type === USE_PROMPT) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest(\"PUT\", `/api/tasks/${action.payload}`, updatePrompt, taskError, null, null));\n  }\n\n  if (action.type === SEND_OPEN_TASK_RESOLUTION) {\n    dispatch(smallLoadingStop());\n    dispatch(apiRequest(\"PUT\", `/api/tasks/resolve/open`, updatePrompt, taskError, action.payload, null));\n  }\n\n  if (action.type === UPDATE_PROMPT || action.type === TASKS_ERROR) {\n    dispatch(smallLoadingStop());\n  }\n};\n\nexport default resolveTask;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/middleware/resolveTask.js"],"names":["apiRequest","USE_PROMPT","UPDATE_PROMPT","SEND_OPEN_TASK_RESOLUTION","updatePrompt","taskError","TASKS_ERROR","smallLoadingStart","smallLoadingStop","resolveTask","dispatch","next","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,yBAHF,EAIEC,YAJF,QAKO,wBALP;AAMA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,yBAApD;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBC,IAAD,IAAWC,MAAD,IAAY;AAC1DD,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,UAApB,EAAgC;AAC9BS,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CACNV,UAAU,CACR,KADQ,EAEP,cAAaY,MAAM,CAACE,OAAQ,EAFrB,EAGRV,YAHQ,EAIRC,SAJQ,EAKR,IALQ,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MAAIO,MAAM,CAACC,IAAP,KAAgBV,yBAApB,EAA+C;AAC7CO,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACAE,IAAAA,QAAQ,CACNV,UAAU,CACR,KADQ,EAEP,yBAFO,EAGRI,YAHQ,EAIRC,SAJQ,EAKRO,MAAM,CAACE,OALC,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgBX,aAAhB,IAAiCU,MAAM,CAACC,IAAP,KAAgBP,WAArD,EAAkE;AAChEI,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACD;AACF,CAlCD;;AAoCA,eAAeC,WAAf","sourcesContent":["import { apiRequest } from \"../actions/apiRequest\";\nimport {\n  USE_PROMPT,\n  UPDATE_PROMPT,\n  SEND_OPEN_TASK_RESOLUTION,\n  updatePrompt,\n} from \"../actions/resolveTask\";\nimport { taskError, TASKS_ERROR } from \"../actions/tasks\";\n\nimport { smallLoadingStart, smallLoadingStop } from \"../actions/smallLoading\";\n\nconst resolveTask = ({ dispatch }) => (next) => (action) => {\n  next(action);\n\n  if (action.type === USE_PROMPT) {\n    dispatch(smallLoadingStart());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/tasks/${action.payload}`,\n        updatePrompt,\n        taskError,\n        null,\n        null\n      )\n    );\n  }\n\n  if (action.type === SEND_OPEN_TASK_RESOLUTION) {\n    dispatch(smallLoadingStop());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/tasks/resolve/open`,\n        updatePrompt,\n        taskError,\n        action.payload,\n        null\n      )\n    );\n  }\n\n  if (action.type === UPDATE_PROMPT || action.type === TASKS_ERROR) {\n    dispatch(smallLoadingStop());\n  }\n};\n\nexport default resolveTask;\n"]},"metadata":{},"sourceType":"module"}