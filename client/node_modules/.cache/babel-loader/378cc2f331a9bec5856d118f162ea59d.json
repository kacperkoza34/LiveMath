{"ast":null,"code":"import { ADD_TASK_CONTENT, ADD_TASK_VARIABELS, ADD_TASK_MODEL, ADD_VAR_DESCRIPTION, ADD_GROUP, ADD_ADDITIONAL_VARIABLE, REMOVE_ADDITIONAL_VARIABLE, ADD_CLASS, ADD_SECTION } from '../actions/newTask';\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case ADD_TASK_CONTENT:\n      return { ...statePart,\n        content: action.payload\n      };\n\n    case ADD_TASK_VARIABELS:\n      return { ...statePart,\n        variables: action.payload,\n        model: '',\n        groups: []\n      };\n\n    case ADD_TASK_MODEL:\n      return { ...statePart,\n        model: action.payload\n      };\n\n    case ADD_VAR_DESCRIPTION:\n      return { ...statePart,\n        variables: statePart.variables.map(item => {\n          if (item.variable === action.payload.variable) return { ...item,\n            description: action.payload.value\n          };else return item;\n        })\n      };\n\n    case ADD_ADDITIONAL_VARIABLE:\n      return { ...statePart,\n        additionalVariables: [...statePart.additionalVariables, action.payload]\n      };\n\n    case REMOVE_ADDITIONAL_VARIABLE:\n      return { ...statePart,\n        additionalVariables: statePart.additionalVariables.filter(({\n          variable\n        }) => variable != action.payload)\n      };\n\n    case ADD_CLASS:\n      return { ...statePart,\n        class: action.payload\n      };\n\n    case ADD_SECTION:\n      return { ...statePart,\n        section: action.payload\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/reducers/newTasksReducer.js"],"names":["ADD_TASK_CONTENT","ADD_TASK_VARIABELS","ADD_TASK_MODEL","ADD_VAR_DESCRIPTION","ADD_GROUP","ADD_ADDITIONAL_VARIABLE","REMOVE_ADDITIONAL_VARIABLE","ADD_CLASS","ADD_SECTION","reducer","statePart","action","type","content","payload","variables","model","groups","map","item","variable","description","value","additionalVariables","filter","class","section"],"mappings":"AAAA,SACEA,gBADF,EAEEC,kBAFF,EAGEC,cAHF,EAIEC,mBAJF,EAKEC,SALF,EAMEC,uBANF,EAOEC,0BAPF,EAQEC,SARF,EASEC,WATF,QAUO,oBAVP;AAYA,eAAe,SAASC,OAAT,CAAiBC,SAAS,GAAG,EAA7B,EAAiCC,MAAM,GAAG,EAA1C,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,gBAAL;AACE,aAAO,EACL,GAAGU,SADE;AAELG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAKb,kBAAL;AACE,aAAO,EACL,GAAGS,SADE;AAELK,QAAAA,SAAS,EAAEJ,MAAM,CAACG,OAFb;AAGLE,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKf,cAAL;AACE,aAAO,EACL,GAAGQ,SADE;AAELM,QAAAA,KAAK,EAAEL,MAAM,CAACG;AAFT,OAAP;;AAKF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGO,SADE;AAELK,QAAAA,SAAS,EAAEL,SAAS,CAACK,SAAV,CAAoBG,GAApB,CAAyBC,IAAI,IAAG;AACzC,cAAGA,IAAI,CAACC,QAAL,KAAkBT,MAAM,CAACG,OAAP,CAAeM,QAApC,EAA8C,OAAO,EAAE,GAAGD,IAAL;AAAWE,YAAAA,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeQ;AAAvC,WAAP,CAA9C,KACK,OAAOH,IAAP;AACN,SAHU;AAFN,OAAP;;AAOF,SAAKd,uBAAL;AACE,aAAO,EACL,GAAGK,SADE;AAELa,QAAAA,mBAAmB,EAAE,CAAC,GAAGb,SAAS,CAACa,mBAAd,EAAmCZ,MAAM,CAACG,OAA1C;AAFhB,OAAP;;AAIF,SAAKR,0BAAL;AACE,aAAO,EACL,GAAGI,SADE;AAELa,QAAAA,mBAAmB,EAAEb,SAAS,CAACa,mBAAV,CAA8BC,MAA9B,CAAqC,CAAC;AAACJ,UAAAA;AAAD,SAAD,KAAeA,QAAQ,IAAIT,MAAM,CAACG,OAAvE;AAFhB,OAAP;;AAIF,SAAKP,SAAL;AACE,aAAO,EACL,GAAGG,SADE;AAELe,QAAAA,KAAK,EAAEd,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGE,SADE;AAELgB,QAAAA,OAAO,EAAEf,MAAM,CAACG;AAFX,OAAP;;AAIF;AACE,aAAOJ,SAAP;AAlDJ;AAoDD","sourcesContent":["import {\r\n  ADD_TASK_CONTENT,\r\n  ADD_TASK_VARIABELS,\r\n  ADD_TASK_MODEL,\r\n  ADD_VAR_DESCRIPTION,\r\n  ADD_GROUP,\r\n  ADD_ADDITIONAL_VARIABLE,\r\n  REMOVE_ADDITIONAL_VARIABLE,\r\n  ADD_CLASS,\r\n  ADD_SECTION\r\n} from '../actions/newTask';\r\n\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case ADD_TASK_CONTENT:\r\n      return {\r\n        ...statePart,\r\n        content: action.payload\r\n      };\r\n\r\n    case ADD_TASK_VARIABELS:\r\n      return {\r\n        ...statePart,\r\n        variables: action.payload,\r\n        model: '',\r\n        groups: []\r\n      };\r\n\r\n    case ADD_TASK_MODEL:\r\n      return {\r\n        ...statePart,\r\n        model: action.payload\r\n      };\r\n\r\n    case ADD_VAR_DESCRIPTION:\r\n      return {\r\n        ...statePart,\r\n        variables: statePart.variables.map( item =>{\r\n          if(item.variable === action.payload.variable) return { ...item, description: action.payload.value };\r\n          else return item;\r\n        })\r\n      };\r\n    case ADD_ADDITIONAL_VARIABLE:\r\n      return {\r\n        ...statePart,\r\n        additionalVariables: [...statePart.additionalVariables, action.payload]\r\n      };\r\n    case REMOVE_ADDITIONAL_VARIABLE:\r\n      return {\r\n        ...statePart,\r\n        additionalVariables: statePart.additionalVariables.filter(({variable})=> variable != action.payload)\r\n      };\r\n    case ADD_CLASS:\r\n      return {\r\n        ...statePart,\r\n        class: action.payload\r\n      };\r\n    case ADD_SECTION:\r\n      return {\r\n        ...statePart,\r\n        section: action.payload\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}