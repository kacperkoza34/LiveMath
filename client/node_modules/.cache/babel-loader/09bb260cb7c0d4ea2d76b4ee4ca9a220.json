{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\CloseTask\\\\CloseTask.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask } from \"../../../../redux/actions/tasks\";\n\nconst CloseTask = ({\n  match,\n  getCloseTask,\n  accountType,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n  }, []);\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers\n    });\n  };\n\n  const onChange = e => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({\n      answer\n    }, i) => answer == taskStatus[i] && result++);\n    return `${result}/${Object.keys(taskStatus).length}`;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, taskStatus === null && prepareState(), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, data.content), taskStatus && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, data.data.map(({\n    content,\n    answer\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, `${i + 1}). `, /*#__PURE__*/React.createElement(MathJax, {\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }), \"Podaj odpowiedz:\", /*#__PURE__*/React.createElement(\"input\", {\n    name: `${i}`,\n    value: taskStatus[`${i}`],\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }), checkAnswers && (taskStatus[`${i}`] == answer ? \"Ok\" : \"Źle\")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChekAnswers(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Sprawd\\u017A odpowiedzi\"), checkAnswers && displayResult(), accountType == \"teacher\" && /*#__PURE__*/React.createElement(AddTaskToClass, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }\n  })));\n};\n\nCloseTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getCloseTask\n})(CloseTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/CloseTask/CloseTask.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","MathJax","AddTaskToClass","connect","getCloseTask","CloseTask","match","accountType","tasks","data","isFetching","errors","params","id","answers","taskStatus","setTaskStatus","checkAnswers","setChekAnswers","prepareState","forEach","item","i","onChange","e","target","name","value","displayResult","result","answer","Object","keys","length","content","map","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport MathJax from \"../../MathJax\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getCloseTask } from \"../../../../redux/actions/tasks\";\n\nconst CloseTask = ({\n  match,\n  getCloseTask,\n  accountType,\n  tasks: { data, isFetching, errors },\n}) => {\n  useEffect(() => {\n    getCloseTask(match.params.id);\n  }, []);\n\n  const answers = {};\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [checkAnswers, setChekAnswers] = useState(false);\n\n  const prepareState = () => {\n    data.data.forEach((item, i) => {\n      answers[`${i}`] = \"\";\n    });\n    setTaskStatus({ ...answers });\n  };\n\n  const onChange = (e) => {\n    setChekAnswers(false);\n    setTaskStatus({ ...taskStatus, [e.target.name]: e.target.value });\n  };\n\n  const displayResult = () => {\n    let result = 0;\n    data.data.forEach(({ answer }, i) => answer == taskStatus[i] && result++);\n    return `${result}/${Object.keys(taskStatus).length}`;\n  };\n  return (\n    <>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {taskStatus === null && prepareState()}\n          <h4>{data.name}</h4>\n          <p>{data.content}</p>\n          {taskStatus && (\n            <ul>\n              {data.data.map(({ content, answer }, i) => (\n                <li>\n                  {`${i + 1}). `}\n                  <MathJax content={content} />\n                  Podaj odpowiedz:\n                  <input\n                    name={`${i}`}\n                    value={taskStatus[`${i}`]}\n                    onChange={(e) => onChange(e)}\n                  ></input>\n                  {checkAnswers &&\n                    (taskStatus[`${i}`] == answer ? \"Ok\" : \"Źle\")}\n                </li>\n              ))}\n            </ul>\n          )}\n          <button onClick={() => setChekAnswers(true)}>\n            Sprawdź odpowiedzi\n          </button>\n          {checkAnswers && displayResult()}\n          {accountType == \"teacher\" && <AddTaskToClass />}\n        </>\n      )}\n    </>\n  );\n};\n\nCloseTask.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n});\n\nexport default connect(mapStateToProps, { getCloseTask })(CloseTask);\n"]},"metadata":{},"sourceType":"module"}