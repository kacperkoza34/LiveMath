{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; // Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; // DELETE comment\n\nexport const deleteComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types';\r\n\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n      const res = await axios.get('/api/posts');\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: res.data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\n\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n      const res = await axios.put(`/api/posts/like/${id}`);\r\n      dispatch({\r\n        type: UPDATE_LIKES,\r\n        payload: { id, likes: res.data}\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n      const res = await axios.put(`/api/posts/unlike/${id}`);\r\n      dispatch({\r\n        type: UPDATE_LIKES,\r\n        payload: { id, likes: res.data}\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n      const res = await axios.delete(`/api/posts/${id}`);\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      });\r\n      dispatch(setAlert('Post removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`/api/posts`, formData, config);\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data\r\n      });\r\n      dispatch(setAlert('Post added', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n      const res = await axios.get(`/api/posts/${id}`);\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n      dispatch({\r\n        type: ADD_COMMENT,\r\n        payload: res.data\r\n      });\r\n      dispatch(setAlert('Comment added', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\n// DELETE comment\r\nexport const deleteComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n      dispatch({\r\n        type: ADD_COMMENT,\r\n        payload: res.data\r\n      });\r\n      dispatch(setAlert('Comment added', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}