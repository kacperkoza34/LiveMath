{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\Features\\\\VariabelsList\\\\VariabelsList.js\";\nimport React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport styles from \"./VariabelsList.module.scss\";\nimport { connect } from \"react-redux\";\nimport { addTaskData, addVarDescription } from \"../../../../../../redux/actions/newTask\";\n\nclass VariabelsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      variablesInput: \"\",\n      activeForm: 0,\n      addingType: \"\",\n      varsExist: false,\n      varsOneLetter: false\n    };\n  }\n\n  getCode() {\n    const {\n      taskContent: task\n    } = this.props;\n    let subString = \"\";\n    let start = false;\n    const code = [];\n\n    for (let i in task) {\n      if (task[i] === \"}\") {\n        if (subString.length) {\n          if (!code.some(({\n            variable\n          }) => variable == subString.trim())) {\n            code.push({\n              variable: subString.trim(),\n              description: \"\"\n            });\n          }\n        }\n\n        subString = \"\";\n        start = false;\n      }\n\n      if (start) subString = subString + task[i];\n\n      if (task[i] === \"{\") {\n        start = true;\n        i++;\n      }\n    }\n\n    if (code.length) {\n      this.setState({\n        varsExist: false\n      });\n\n      if (code.some(({\n        variable\n      }) => variable.length !== 1)) {\n        this.setState({\n          varsOneLetter: true\n        });\n        return [];\n      } else {\n        this.setState({\n          varsOneLetter: false\n        });\n        return code;\n      }\n    } else {\n      this.setState({\n        varsExist: true\n      });\n      return code;\n    }\n  }\n\n  addDescription(e, variable) {\n    const {\n      addVarDescription\n    } = this.props;\n    addVarDescription(e.target.value, variable);\n  }\n\n  render() {\n    const {\n      addTaskData,\n      taskData\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => addTaskData(this.getCode()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Ustal zmienne\"), this.state.varsExist && /*#__PURE__*/React.createElement(\"h4\", {\n      className: styles.warning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Nie poda\\u0142e\\u015B zmiennych\"), this.state.varsOneLetter && /*#__PURE__*/React.createElement(\"h4\", {\n      className: styles.warning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Nazwy zmiennych powinny zawiera\\u0107 jedn\\u0105 litere\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, Array.from(taskData).length > 0 && /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: styles.variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \"Nazwa\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Opis\")))), Array.from(taskData).map(({\n      variable,\n      description\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      key: variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, variable), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      value: description,\n      placeholder: \"Opis\",\n      onChange: e => this.addDescription(e, variable),\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: styles.variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, variable), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      value: description,\n      placeholder: \"Opis\",\n      onChange: e => this.addDescription(e, variable),\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  taskContent: state.newTask.data.content,\n  taskData: state.newTask.data.variables\n});\n\nexport default connect(mapStateToProps, {\n  addTaskData,\n  addVarDescription\n})(VariabelsList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/Features/VariabelsList/VariabelsList.js"],"names":["React","TextareaAutosize","styles","connect","addTaskData","addVarDescription","VariabelsList","Component","state","variablesInput","activeForm","addingType","varsExist","varsOneLetter","getCode","taskContent","task","props","subString","start","code","i","length","some","variable","trim","push","description","setState","addDescription","e","target","value","render","taskData","root","warning","Array","from","map","mapStateToProps","newTask","data","content","variables"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport styles from \"./VariabelsList.module.scss\";\nimport { connect } from \"react-redux\";\nimport {\n  addTaskData,\n  addVarDescription,\n} from \"../../../../../../redux/actions/newTask\";\n\nclass VariabelsList extends React.Component {\n  state = {\n    variablesInput: \"\",\n    activeForm: 0,\n    addingType: \"\",\n    varsExist: false,\n    varsOneLetter: false,\n  };\n\n  getCode() {\n    const { taskContent: task } = this.props;\n    let subString = \"\";\n    let start = false;\n    const code = [];\n    for (let i in task) {\n      if (task[i] === \"}\") {\n        if (subString.length) {\n          if (!code.some(({ variable }) => variable == subString.trim())) {\n            code.push({ variable: subString.trim(), description: \"\" });\n          }\n        }\n        subString = \"\";\n        start = false;\n      }\n      if (start) subString = subString + task[i];\n      if (task[i] === \"{\") {\n        start = true;\n        i++;\n      }\n    }\n    if (code.length) {\n      this.setState({ varsExist: false });\n      if (code.some(({ variable }) => variable.length !== 1)) {\n        this.setState({ varsOneLetter: true });\n        return [];\n      } else {\n        this.setState({ varsOneLetter: false });\n        return code;\n      }\n    } else {\n      this.setState({ varsExist: true });\n      return code;\n    }\n  }\n\n  addDescription(e, variable) {\n    const { addVarDescription } = this.props;\n    addVarDescription(e.target.value, variable);\n  }\n\n  render() {\n    const { addTaskData, taskData } = this.props;\n    return (\n      <div className={styles.root}>\n        <button onClick={() => addTaskData(this.getCode())}>\n          Ustal zmienne\n        </button>\n        {this.state.varsExist && (\n          <h4 className={styles.warning}>Nie podałeś zmiennych</h4>\n        )}\n        {this.state.varsOneLetter && (\n          <h4 className={styles.warning}>\n            Nazwy zmiennych powinny zawierać jedną litere\n          </h4>\n        )}\n\n        <ul>\n          {Array.from(taskData).length > 0 && (\n            <li>\n              <table>\n                <tr>\n                  <td className={styles.variable}>Nazwa</td>\n                  <td>Opis</td>\n                </tr>\n              </table>\n            </li>\n          )}\n          {Array.from(taskData).map(({ variable, description }) => (\n            <li key={variable}>\n              <span>{variable}</span>\n              <span>\n                <TextareaAutosize\n                  value={description}\n                  placeholder=\"Opis\"\n                  onChange={(e) => this.addDescription(e, variable)}\n                  name=\"title\"\n                />\n              </span>\n\n              <table>\n                <tr>\n                  <td className={styles.variable}>{variable}</td>\n                  <td>\n                    <TextareaAutosize\n                      value={description}\n                      placeholder=\"Opis\"\n                      onChange={(e) => this.addDescription(e, variable)}\n                      name=\"title\"\n                    />\n                  </td>\n                </tr>\n              </table>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  taskContent: state.newTask.data.content,\n  taskData: state.newTask.data.variables,\n});\n\nexport default connect(mapStateToProps, { addTaskData, addVarDescription })(\n  VariabelsList\n);\n"]},"metadata":{},"sourceType":"module"}