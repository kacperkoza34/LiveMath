{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMath\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }), \" Welcome \", user && user.name));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","connect","getCurrentProfile","Spinner","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEF,EAAAA,iBAAF;AACCG,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GADP;AAECC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAFV,CAAD,KAGM;AACtBT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB;AAClB,GAFQ,EAEP,EAFO,CAAT;AAGA,SAAOM,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBACP,uDACE;AAAI,IAAA,KAAK,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAG,IAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB;AAAG,IAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,eAAsDD,IAAI,IAAIA,IAAI,CAACG,IAAnE,CAJF,CADA;AAOD,CAdD;;AAgBAL,SAAS,CAACM,SAAV,GAAsB;AACpBR,EAAAA,iBAAiB,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADd;AAEpBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFH;AAGpBL,EAAAA,OAAO,EAAEP,SAAS,CAACa,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADoB;AAEhCE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFiB,CAAL,CAA7B;;AAOA,eAAeN,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Dashboard = ({ getCurrentProfile,\r\n                    auth: { user },\r\n                    profile: { profile, loading }\r\n                  }) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  },[]);\r\n  return loading && profile === null ? <Spinner/> :\r\n  <>\r\n    <h1 class=\"large text-primary\">\r\n      Dashboard\r\n    </h1>\r\n    <p class=\"lead\"><i class=\"fas fa-user\"></i> Welcome { user && user.name }</p>\r\n  </>\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}