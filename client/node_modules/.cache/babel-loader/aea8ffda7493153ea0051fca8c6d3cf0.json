{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\TasksList\\\\TasksList.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport TaskTypeBox from \"../../features/TaskTypeBox/TaskTypeBox\";\nimport { connect } from \"react-redux\";\nimport { getTasks, clearTasks } from \"../../../redux/actions/tasks\";\n\nconst TasksList = ({\n  classId,\n  sectionId,\n  getTasks,\n  clearTasks,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    if (classId && sectionId) {\n      getTasks({\n        classId,\n        sectionId\n      });\n    }\n  }, [sectionId, classId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, classId && sectionId ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, data.length > 0 ? data.map(({\n    name,\n    taskType,\n    _id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    className: styles[taskType],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => clearTasks(),\n    to: `/display/${taskType}/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, name))) : \"Nie ma zadań z tego działu\") : \"Wybierz dział\"));\n};\n\nTasksList.propTypes = {\n  classId: PropTypes.string,\n  sectionId: PropTypes.string,\n  getTasks: PropTypes.func,\n  tasks: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getTasks,\n  clearTasks\n})(TasksList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/TasksList/TasksList.js"],"names":["React","useEffect","PropTypes","styles","Link","Redirect","BeatLoader","TaskTypeBox","connect","getTasks","clearTasks","TasksList","classId","sectionId","tasks","data","isFetching","errors","root","length","map","name","taskType","_id","propTypes","string","func","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,8BAArC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,OADiB;AAEjBC,EAAAA,SAFiB;AAGjBJ,EAAAA,QAHiB;AAIjBC,EAAAA,UAJiB;AAKjBI,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB;AALU,CAAD,KAMZ;AACJhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,IAAIC,SAAf,EAA0B;AACxBJ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,EAAYD,OAAZ,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACe,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,gBACT,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAGT,0CACGJ,OAAO,IAAIC,SAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACI,MAAL,GAAc,CAAd,GACGJ,IAAI,CAACK,GAAL,CAAS,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAD,kBACP;AAAI,IAAA,SAAS,EAAEpB,MAAM,CAACmB,QAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE,MAAMZ,UAAU,EAD3B;AAEE,IAAA,EAAE,EAAG,YAAWY,QAAS,IAAGC,GAAI,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,IAJH,CADF,CADF,CADH,GAWG,4BAZN,CADD,GAgBC,eAjBJ,CAJJ,CADF;AA4BD,CAzCD;;AA2CAV,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,OAAO,EAAEV,SAAS,CAACuB,MADC;AAEpBZ,EAAAA,SAAS,EAAEX,SAAS,CAACuB,MAFD;AAGpBhB,EAAAA,QAAQ,EAAEP,SAAS,CAACwB,IAHA;AAIpBZ,EAAAA,KAAK,EAAEZ,SAAS,CAACyB;AAJG,CAAtB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,KAAK,EAAEe,KAAK,CAACf;AADqB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAmDC,SAAnD,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport TaskTypeBox from \"../../features/TaskTypeBox/TaskTypeBox\";\nimport { connect } from \"react-redux\";\nimport { getTasks, clearTasks } from \"../../../redux/actions/tasks\";\n\nconst TasksList = ({\n  classId,\n  sectionId,\n  getTasks,\n  clearTasks,\n  tasks: { data, isFetching, errors },\n}) => {\n  useEffect(() => {\n    if (classId && sectionId) {\n      getTasks({ classId, sectionId });\n    }\n  }, [sectionId, classId]);\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {classId && sectionId ? (\n            <ul>\n              {data.length > 0\n                ? data.map(({ name, taskType, _id }) => (\n                    <li className={styles[taskType]}>\n                      <Link\n                        onClick={() => clearTasks()}\n                        to={`/display/${taskType}/${_id}`}\n                      >\n                        {name}\n                      </Link>\n                    </li>\n                  ))\n                : \"Nie ma zadań z tego działu\"}\n            </ul>\n          ) : (\n            \"Wybierz dział\"\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nTasksList.propTypes = {\n  classId: PropTypes.string,\n  sectionId: PropTypes.string,\n  getTasks: PropTypes.func,\n  tasks: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps, { getTasks, clearTasks })(TasksList);\n"]},"metadata":{},"sourceType":"module"}