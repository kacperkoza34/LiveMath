{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\classes\\\\TasksList\\\\TasksList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport Moment from \"react-moment\";\n\nconst TasksList = ({\n  tasks\n}) => {\n  const compare = (a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  };\n\n  const sortedTasks = [...tasks].sort(compare);\n\n  const displayOpenTask = ({\n    task,\n    deadLine,\n    promptsAllowed,\n    descriptionRequired\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.openTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, task.name), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Podpowiedzi:\", promptsAllowed ? \" dostępne\" : \" niedostępne\"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Opis: \", descriptionRequired ? \"wymagany\" : \"niewymagany\"))));\n\n  const displayCloseTask = ({\n    task,\n    deadLine\n  }) => {};\n\n  const displayBooleanTask = item => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, sortedTasks.map(item => {\n    if (item.taskType == \"taskClose\") return displayCloseTask(item);\n    if (item.taskType == \"taskOpen\") return displayOpenTask(item);\n    if (item.taskType == \"taskBoolean\") return displayBooleanTask(item);\n  }));\n};\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired\n};\nexport default TasksList;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/classes/TasksList/TasksList.js"],"names":["React","PropTypes","styles","Moment","TasksList","tasks","compare","a","b","Date","parse","date","sortedTasks","sort","displayOpenTask","task","deadLine","promptsAllowed","descriptionRequired","openTask","name","displayCloseTask","displayBooleanTask","item","root","map","taskType","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,WAAOC,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,IAAb,IAAqBF,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,IAAb,CAA5B;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG,CAAC,GAAGP,KAAJ,EAAWQ,IAAX,CAAgBP,OAAhB,CAApB;;AAEA,QAAMQ,eAAe,GAAG,CAAC;AACvBC,IAAAA,IADuB;AAEvBC,IAAAA,QAFuB;AAGvBC,IAAAA,cAHuB;AAIvBC,IAAAA;AAJuB,GAAD,kBAMtB;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACiB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEjB,MAAM,CAACkB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,IAAI,CAACK,IAAlC,CADF,EAC+C,GAD/C,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UADH,oBACe,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCJ,QAAnC,CADf,CAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBC,cAAc,GAAG,WAAH,GAAiB,cAAhD,CADF,EACuE,GADvE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,mBAAmB,GAAG,UAAH,GAAgB,aAA9C,CAFF,CAPF,CADF,CANF;;AAsBA,QAAMG,gBAAgB,GAAG,CAAC;AAAEN,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAwB,CAAE,CAAnD;;AAEA,QAAMM,kBAAkB,GAAIC,IAAD,IAAU,CAAE,CAAvC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,WAAW,CAACa,GAAZ,CAAiBF,IAAD,IAAU;AACzB,QAAIA,IAAI,CAACG,QAAL,IAAiB,WAArB,EAAkC,OAAOL,gBAAgB,CAACE,IAAD,CAAvB;AAClC,QAAIA,IAAI,CAACG,QAAL,IAAiB,UAArB,EAAiC,OAAOZ,eAAe,CAACS,IAAD,CAAtB;AACjC,QAAIA,IAAI,CAACG,QAAL,IAAiB,aAArB,EAAoC,OAAOJ,kBAAkB,CAACC,IAAD,CAAzB;AACrC,GAJA,CADH,CADF;AASD,CAzCD;;AA2CAnB,SAAS,CAACuB,SAAV,GAAsB;AACpBtB,EAAAA,KAAK,EAAEJ,SAAS,CAAC2B,KAAV,CAAgBC;AADH,CAAtB;AAIA,eAAezB,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport Moment from \"react-moment\";\n\nconst TasksList = ({ tasks }) => {\n  const compare = (a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  };\n  const sortedTasks = [...tasks].sort(compare);\n\n  const displayOpenTask = ({\n    task,\n    deadLine,\n    promptsAllowed,\n    descriptionRequired,\n  }) => (\n    <div className={styles.openTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>{task.name}</td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>Podpowiedzi:{promptsAllowed ? \" dostępne\" : \" niedostępne\"}</td>{\" \"}\n          <td>Opis: {descriptionRequired ? \"wymagany\" : \"niewymagany\"}</td>\n        </tr>\n      </table>\n    </div>\n  );\n\n  const displayCloseTask = ({ task, deadLine }) => {};\n\n  const displayBooleanTask = (item) => {};\n\n  return (\n    <div className={styles.root}>\n      {sortedTasks.map((item) => {\n        if (item.taskType == \"taskClose\") return displayCloseTask(item);\n        if (item.taskType == \"taskOpen\") return displayOpenTask(item);\n        if (item.taskType == \"taskBoolean\") return displayBooleanTask(item);\n      })}\n    </div>\n  );\n};\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default TasksList;\n"]},"metadata":{},"sourceType":"module"}