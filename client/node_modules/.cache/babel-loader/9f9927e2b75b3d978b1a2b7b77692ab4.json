{"ast":null,"code":"import { apiRequest } from \"../actions/apiRequest\";\nimport { USE_PROMPT, UPDATE_PROMPT, SEND_OPEN_TASK_RESOLUTION, SEND_CLOSE_TASK_RESOLUTION, TASKS_RESOLVED, REVIEW_OPEN_TASK, REVIEW_OPEN_TASK_SUCCESS, REVIEW_CLOSE_TASK, REVIEW_CLOSE_TASK_SUCCESS, updatePrompt, taskResolved, reviewOpenTaskSuccess, reviewCloseTaskSuccess } from \"../actions/resolveTask\";\nimport { taskError, TASKS_ERROR } from \"../actions/tasks\";\nimport { smallLoadingStart, smallLoadingStop } from \"../actions/smallLoading\";\n\nconst resolveTask = ({\n  dispatch\n}) => next => action => {\n  next(action);\n\n  if (action.type === USE_PROMPT) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest(\"PUT\", `/api/tasks/${action.payload}`, updatePrompt, taskError, null, null));\n  }\n\n  if (action.type === SEND_OPEN_TASK_RESOLUTION) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest(\"PUT\", `/api/student/profile/resolve/open`, taskResolved, taskError, action.payload, null));\n  }\n\n  if (action.type === SEND_CLOSE_TASK_RESOLUTION) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest(\"PUT\", `/api/student/profile/resolve/close`, taskResolved, taskError, action.payload, null));\n  }\n\n  if (action.type === REVIEW_OPEN_TASK) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest(\"PUT\", `/api/student/profile/resolve/open/update`, reviewOpenTaskSuccess, taskError, action.payload, null));\n  }\n\n  if (action.type === REVIEW_CLOSE_TASK) {\n    dispatch(smallLoadingStart());\n    dispatch(apiRequest(\"PUT\", `/api/student/profile/resolve/close/update`, reviewCloseTaskSuccess, taskError, action.payload, null));\n  }\n\n  if (action.type === UPDATE_PROMPT || action.type === TASKS_ERROR || action.type === TASKS_RESOLVED || action.type === REVIEW_OPEN_TASK_SUCCESS || action.type === REVIEW_CLOSE_TASK_SUCCESS) {\n    dispatch(smallLoadingStop());\n  }\n};\n\nexport default resolveTask;","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/redux/middleware/resolveTask.js"],"names":["apiRequest","USE_PROMPT","UPDATE_PROMPT","SEND_OPEN_TASK_RESOLUTION","SEND_CLOSE_TASK_RESOLUTION","TASKS_RESOLVED","REVIEW_OPEN_TASK","REVIEW_OPEN_TASK_SUCCESS","REVIEW_CLOSE_TASK","REVIEW_CLOSE_TASK_SUCCESS","updatePrompt","taskResolved","reviewOpenTaskSuccess","reviewCloseTaskSuccess","taskError","TASKS_ERROR","smallLoadingStart","smallLoadingStop","resolveTask","dispatch","next","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,yBAHF,EAIEC,0BAJF,EAKEC,cALF,EAMEC,gBANF,EAOEC,wBAPF,EAQEC,iBARF,EASEC,yBATF,EAUEC,YAVF,EAWEC,YAXF,EAYEC,qBAZF,EAaEC,sBAbF,QAcO,wBAdP;AAeA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,yBAApD;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBC,IAAD,IAAWC,MAAD,IAAY;AAC1DD,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBrB,UAApB,EAAgC;AAC9BkB,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CACNnB,UAAU,CACR,KADQ,EAEP,cAAaqB,MAAM,CAACE,OAAQ,EAFrB,EAGRb,YAHQ,EAIRI,SAJQ,EAKR,IALQ,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MAAIO,MAAM,CAACC,IAAP,KAAgBnB,yBAApB,EAA+C;AAC7CgB,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CACNnB,UAAU,CACR,KADQ,EAEP,mCAFO,EAGRW,YAHQ,EAIRG,SAJQ,EAKRO,MAAM,CAACE,OALC,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgBlB,0BAApB,EAAgD;AAC9Ce,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CACNnB,UAAU,CACR,KADQ,EAEP,oCAFO,EAGRW,YAHQ,EAIRG,SAJQ,EAKRO,MAAM,CAACE,OALC,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgBhB,gBAApB,EAAsC;AACpCa,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CACNnB,UAAU,CACR,KADQ,EAEP,0CAFO,EAGRY,qBAHQ,EAIRE,SAJQ,EAKRO,MAAM,CAACE,OALC,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgBd,iBAApB,EAAuC;AACrCW,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAG,IAAAA,QAAQ,CACNnB,UAAU,CACR,KADQ,EAEP,2CAFO,EAGRa,sBAHQ,EAIRC,SAJQ,EAKRO,MAAM,CAACE,OALC,EAMR,IANQ,CADJ,CAAR;AAUD;;AAED,MACEF,MAAM,CAACC,IAAP,KAAgBpB,aAAhB,IACAmB,MAAM,CAACC,IAAP,KAAgBP,WADhB,IAEAM,MAAM,CAACC,IAAP,KAAgBjB,cAFhB,IAGAgB,MAAM,CAACC,IAAP,KAAgBf,wBAHhB,IAIAc,MAAM,CAACC,IAAP,KAAgBb,yBALlB,EAME;AACAU,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACD;AACF,CAlFD;;AAoFA,eAAeC,WAAf","sourcesContent":["import { apiRequest } from \"../actions/apiRequest\";\nimport {\n  USE_PROMPT,\n  UPDATE_PROMPT,\n  SEND_OPEN_TASK_RESOLUTION,\n  SEND_CLOSE_TASK_RESOLUTION,\n  TASKS_RESOLVED,\n  REVIEW_OPEN_TASK,\n  REVIEW_OPEN_TASK_SUCCESS,\n  REVIEW_CLOSE_TASK,\n  REVIEW_CLOSE_TASK_SUCCESS,\n  updatePrompt,\n  taskResolved,\n  reviewOpenTaskSuccess,\n  reviewCloseTaskSuccess,\n} from \"../actions/resolveTask\";\nimport { taskError, TASKS_ERROR } from \"../actions/tasks\";\n\nimport { smallLoadingStart, smallLoadingStop } from \"../actions/smallLoading\";\n\nconst resolveTask = ({ dispatch }) => (next) => (action) => {\n  next(action);\n\n  if (action.type === USE_PROMPT) {\n    dispatch(smallLoadingStart());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/tasks/${action.payload}`,\n        updatePrompt,\n        taskError,\n        null,\n        null\n      )\n    );\n  }\n\n  if (action.type === SEND_OPEN_TASK_RESOLUTION) {\n    dispatch(smallLoadingStart());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/student/profile/resolve/open`,\n        taskResolved,\n        taskError,\n        action.payload,\n        null\n      )\n    );\n  }\n\n  if (action.type === SEND_CLOSE_TASK_RESOLUTION) {\n    dispatch(smallLoadingStart());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/student/profile/resolve/close`,\n        taskResolved,\n        taskError,\n        action.payload,\n        null\n      )\n    );\n  }\n\n  if (action.type === REVIEW_OPEN_TASK) {\n    dispatch(smallLoadingStart());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/student/profile/resolve/open/update`,\n        reviewOpenTaskSuccess,\n        taskError,\n        action.payload,\n        null\n      )\n    );\n  }\n\n  if (action.type === REVIEW_CLOSE_TASK) {\n    dispatch(smallLoadingStart());\n    dispatch(\n      apiRequest(\n        \"PUT\",\n        `/api/student/profile/resolve/close/update`,\n        reviewCloseTaskSuccess,\n        taskError,\n        action.payload,\n        null\n      )\n    );\n  }\n\n  if (\n    action.type === UPDATE_PROMPT ||\n    action.type === TASKS_ERROR ||\n    action.type === TASKS_RESOLVED ||\n    action.type === REVIEW_OPEN_TASK_SUCCESS ||\n    action.type === REVIEW_CLOSE_TASK_SUCCESS\n  ) {\n    dispatch(smallLoadingStop());\n  }\n};\n\nexport default resolveTask;\n"]},"metadata":{},"sourceType":"module"}