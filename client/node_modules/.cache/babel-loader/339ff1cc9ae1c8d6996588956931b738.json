{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\Features\\\\SendOpenTask\\\\SendOpenTask.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { sendOpenTask } from \"../../../../../../redux/actions/newTask\";\n\nconst SendOpenTask = ({\n  newTask,\n  sendOpenTask\n}) => {\n  const {\n    content,\n    name,\n    variables,\n    model,\n    groups,\n    section,\n    class: classNew\n  } = newTask;\n  const [errors, setErrors] = useState(\"\");\n\n  const sendTask = () => {\n    const errors = [];\n    if (content.trim().length) erros.push(\"Nie podano treści\");\n    if (name.trim().length) erros.push(\"Nie podano nazwy zadania\");\n    if (variables.length) ;\n    if (model.trim().length) ;\n    if (groups.length) ;\n    if (section.length) ;\n    if (classNew.length) ;\n\n    if (!erros.length) {\n      setError(\"\");\n      sendOpenTask(newTask);\n    } else setErrors(errors);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, errors.length > 0 && errors, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask.data\n});\n\nexport default connect(mapStateToProps, {\n  sendOpenTask\n})(SendOpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/Features/SendOpenTask/SendOpenTask.js"],"names":["React","useState","PropTypes","connect","sendOpenTask","SendOpenTask","newTask","content","name","variables","model","groups","section","class","classNew","errors","setErrors","sendTask","trim","length","erros","push","setError","mapStateToProps","state","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yCAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWF,EAAAA;AAAX,CAAD,KAA+B;AAClD,QAAM;AACJG,IAAAA,OADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,KAAK,EAAEC;AAPH,MAQFR,OARJ;AASA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMgB,QAAQ,GAAG,MAAM;AACrB,UAAMF,MAAM,GAAG,EAAf;AACA,QAAIR,OAAO,CAACW,IAAR,GAAeC,MAAnB,EAA2BC,KAAK,CAACC,IAAN,CAAW,mBAAX;AAC3B,QAAIb,IAAI,CAACU,IAAL,GAAYC,MAAhB,EAAwBC,KAAK,CAACC,IAAN,CAAW,0BAAX;AACxB,QAAIZ,SAAS,CAACU,MAAd,EAAqB;AACrB,QAAIT,KAAK,CAACQ,IAAN,GAAaC,MAAjB,EAAwB;AACxB,QAAIR,MAAM,CAACQ,MAAX,EAAkB;AAClB,QAAIP,OAAO,CAACO,MAAZ,EAAmB;AACnB,QAAIL,QAAQ,CAACK,MAAb,EAAoB;;AACpB,QAAI,CAACC,KAAK,CAACD,MAAX,EAAmB;AACjBG,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAlB,MAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,KAHD,MAGOU,SAAS,CAACD,MAAD,CAAT;AACR,GAbD;;AAcA,sBACE,0CACGA,MAAM,CAACI,MAAP,GAAgB,CAAhB,IAAqBJ,MADxB,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF;AAMD,CA/BD;;AAiCA,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,OAAO,EAAEkB,KAAK,CAAClB,OAAN,CAAcmB;AADW,CAAZ,CAAxB;;AAIA,eAAetB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,YAA3C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { sendOpenTask } from \"../../../../../../redux/actions/newTask\";\n\nconst SendOpenTask = ({ newTask, sendOpenTask }) => {\n  const {\n    content,\n    name,\n    variables,\n    model,\n    groups,\n    section,\n    class: classNew,\n  } = newTask;\n  const [errors, setErrors] = useState(\"\");\n  const sendTask = () => {\n    const errors = [];\n    if (content.trim().length) erros.push(\"Nie podano treści\");\n    if (name.trim().length) erros.push(\"Nie podano nazwy zadania\");\n    if (variables.length);\n    if (model.trim().length);\n    if (groups.length);\n    if (section.length);\n    if (classNew.length);\n    if (!erros.length) {\n      setError(\"\");\n      sendOpenTask(newTask);\n    } else setErrors(errors);\n  };\n  return (\n    <>\n      {errors.length > 0 && errors}\n      <button onClick={() => sendTask()}>Zapisz zadanie</button>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  newTask: state.newTask.data,\n});\n\nexport default connect(mapStateToProps, { sendOpenTask })(SendOpenTask);\n"]},"metadata":{},"sourceType":"module"}