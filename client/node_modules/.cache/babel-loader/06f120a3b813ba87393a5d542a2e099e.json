{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getOpenTask } from '../../../redux/actions/tasks';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getOpenTask(match.params.id);\n  }, []);\n  const randomGroupIndex = isFetching ? '' : getRandomIntInclusive(0, data.data.groups.length);\n\n  const displayContent = content => {\n    const {\n      data: {\n        variables,\n        groups\n      }\n    } = data;\n\n    for (let i in variables) {\n      const re = new RegExp(`{${variables[i].variable}}`, \"g\");\n      console.log(groups);\n      content = content.replace(re, groups[randomGroupIndex][i]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, content);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, displayContent(data.data.content))));\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask\n})(OpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask.js"],"names":["React","useEffect","PropTypes","connect","getOpenTask","BeatLoader","getRandomIntInclusive","min","max","Math","ceil","floor","random","OpenTask","match","tasks","data","isFetching","errors","params","id","randomGroupIndex","groups","length","displayContent","content","variables","i","re","RegExp","variable","console","log","replace","name","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1CD,EAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,SAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,CAJD;;AAMA,MAAMM,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQV,EAAAA,WAAR;AAAqBW,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB;AAA5B,CAAD,KAA8D;AAC7EjB,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,WAAW,CAACU,KAAK,CAACK,MAAN,CAAaC,EAAd,CAAX;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,QAAMC,gBAAgB,GAAGJ,UAAU,GAAE,EAAF,GAAOX,qBAAqB,CAAC,CAAD,EAAGU,IAAI,CAACA,IAAL,CAAUM,MAAV,CAAiBC,MAApB,CAA/D;;AAEA,QAAMC,cAAc,GAAIC,OAAD,IAAY;AACjC,UAAM;AAAET,MAAAA,IAAI,EAAE;AAAEU,QAAAA,SAAF;AAAaJ,QAAAA;AAAb;AAAR,QAAkCN,IAAxC;;AAEA,SAAI,IAAIW,CAAR,IAAaD,SAAb,EAAuB;AACrB,YAAME,EAAE,GAAG,IAAIC,MAAJ,CAAY,IAAGH,SAAS,CAACC,CAAD,CAAT,CAAaG,QAAS,GAArC,EAAyC,GAAzC,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACAG,MAAAA,OAAO,GAAGA,OAAO,CAACQ,OAAR,CAAgBL,EAAhB,EAAoBN,MAAM,CAACD,gBAAD,CAAN,CAAyBM,CAAzB,CAApB,CAAV;AACD;;AACD,wBAAO,0CAAGF,OAAH,CAAP;AACD,GATD;;AAWA,sBACE,0CACCR,UAAU,gBAAE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBACT,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACkB,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,cAAc,CAACR,IAAI,CAACA,IAAL,CAAUS,OAAX,CAAlB,CAFF,CAFF,CADF;AAUD,CA3BD;;AA6BAZ,QAAQ,CAACsB,SAAT,GAAqB,EAArB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BtB,EAAAA,KAAK,EAAEsB,KAAK,CAACtB;AADkB,CAAJ,CAA7B;;AAIA,eAAeZ,OAAO,CAACiC,eAAD,EAAiB;AAAChC,EAAAA;AAAD,CAAjB,CAAP,CAAuCS,QAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getOpenTask } from '../../../redux/actions/tasks';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst getRandomIntInclusive = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst OpenTask = ({match, getOpenTask, tasks: { data, isFetching, errors }}) =>{\r\n  useEffect(()=>{\r\n    getOpenTask(match.params.id);\r\n  },[]);\r\n  const randomGroupIndex = isFetching? '' : getRandomIntInclusive(0,data.data.groups.length);\r\n\r\n  const displayContent = (content) =>{\r\n    const { data: { variables, groups } } = data;\r\n\r\n    for(let i in variables){\r\n      const re = new RegExp(`{${variables[i].variable}}`, \"g\");\r\n      console.log(groups);\r\n      content = content.replace(re, groups[randomGroupIndex][i]);\r\n    }\r\n    return <>{content}</>;\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {isFetching? <BeatLoader size={20}/> :\r\n      <>\r\n        <h4>{data.name}</h4>\r\n        <p>{displayContent(data.data.content)}</p>\r\n      </>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nOpenTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks\r\n})\r\n\r\nexport default connect(mapStateToProps,{getOpenTask})(OpenTask);\r\n"]},"metadata":{},"sourceType":"module"}