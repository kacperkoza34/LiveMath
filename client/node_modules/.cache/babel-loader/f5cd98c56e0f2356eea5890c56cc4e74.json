{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\OpenTaskFromApi.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport DisplayPromptsFromApi from \"./DisplayPrompts/DisplayPromptsFromApi\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport { useOnePrompt, updateDescription, updateAnswer } from \"../../../../redux/actions/resolveTask\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  tasks: {\n    data,\n    isFetching,\n    errors,\n    taskConfig\n  }\n}) => {\n  const {\n    deadLine,\n    promptsAllowed,\n    usedPrompts,\n    descriptionRequired,\n    _id,\n    resolved,\n    group,\n    description,\n    answer\n  } = taskConfig;\n  useEffect(() => {\n    getOpenTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [checkAnswer, check] = useState(false);\n\n  const countPoints = points => {\n    if (!usedPrompts) return points;\n    if (usedPrompts === 1) return (points / 2).toPrecision(2);\n    if (usedPrompts === 2) return (points / 4).toPrecision(2);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, correctAnswer == null && setCorrectAnswer(data[group].answer), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.points,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Punkty: \", countPoints(data.points))), /*#__PURE__*/React.createElement(DisplayContent, {\n    content: data.data.content,\n    variables: data.data.variables,\n    group: data.data.groups[group],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayPromptsFromApi, {\n    resolved: resolved,\n    promptsAllowed: promptsAllowed,\n    usedPrompts: usedPrompts,\n    action: useOnePrompt,\n    accountType: accountType,\n    taskId: _id,\n    model: data.data.model,\n    variables: [...data.data.variables, ...data.data.additionalVariables],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Miejsce na link z rozwi\\u0105zaniem\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    maxCols: \"15\",\n    minCols: \"5\",\n    value: description,\n    onChange: e => updateDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Odpowied\\u017A:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: answer,\n    onChange: e => {\n      updateAnswer(e.target.value);\n      check(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Twoja odpowied\\u017A:\"), /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + answer + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), checkAnswer ? correctAnswer == answer ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Poprawna odpowied\\u017A\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Prze\\u015Blij rozwi\\u0105zanie\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Pomy\\u015Bl o tym jeszcze raz\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => check(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Dodaj odpowiedz!\"), !Object.keys(taskConfig).length > 0 && accountType == \"teacher\" && /*#__PURE__*/React.createElement(AddTaskToClass, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })));\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer\n})(OpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/OpenTaskFromApi.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","DisplayContent","DisplayPromptsFromApi","MathJax","TextareaAutosize","AddTaskToClass","connect","getOpenTask","setTaskConfig","useOnePrompt","updateDescription","updateAnswer","OpenTask","match","accountType","tasks","data","isFetching","errors","taskConfig","deadLine","promptsAllowed","usedPrompts","descriptionRequired","_id","resolved","group","description","answer","params","id","correctAnswer","setCorrectAnswer","checkAnswer","check","countPoints","points","toPrecision","root","name","content","variables","groups","model","additionalVariables","e","target","value","Object","keys","length","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport DisplayPromptsFromApi from \"./DisplayPrompts/DisplayPromptsFromApi\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport {\n  useOnePrompt,\n  updateDescription,\n  updateAnswer,\n} from \"../../../../redux/actions/resolveTask\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  tasks: { data, isFetching, errors, taskConfig },\n}) => {\n  const {\n    deadLine,\n    promptsAllowed,\n    usedPrompts,\n    descriptionRequired,\n    _id,\n    resolved,\n    group,\n    description,\n    answer,\n  } = taskConfig;\n  useEffect(() => {\n    getOpenTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [checkAnswer, check] = useState(false);\n\n  const countPoints = (points) => {\n    if (!usedPrompts) return points;\n    if (usedPrompts === 1) return (points / 2).toPrecision(2);\n    if (usedPrompts === 2) return (points / 4).toPrecision(2);\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {correctAnswer == null && setCorrectAnswer(data[group].answer)}\n          <h4>{data.name}</h4>\n          <p className={styles.points}>\n            <span>Punkty: {countPoints(data.points)}</span>\n          </p>\n          <DisplayContent\n            content={data.data.content}\n            variables={data.data.variables}\n            group={data.data.groups[group]}\n          />\n          <DisplayPromptsFromApi\n            resolved={resolved}\n            promptsAllowed={promptsAllowed}\n            usedPrompts={usedPrompts}\n            action={useOnePrompt}\n            accountType={accountType}\n            taskId={_id}\n            model={data.data.model}\n            variables={[\n              ...data.data.variables,\n              ...data.data.additionalVariables,\n            ]}\n          />\n          <h4>Miejsce na link z rozwiązaniem</h4>\n          <TextareaAutosize\n            maxCols=\"15\"\n            minCols=\"5\"\n            value={description}\n            onChange={(e) => updateDescription(e.target.value)}\n          ></TextareaAutosize>\n          <div className={styles.answer}>\n            <h4>Odpowiedź:</h4>\n            <input\n              value={answer}\n              onChange={(e) => {\n                updateAnswer(e.target.value);\n                check(false);\n              }}\n            ></input>\n          </div>\n          <div className={styles.answer}>\n            <h4>Twoja odpowiedź:</h4>\n            <MathJax content={\"`\" + answer + \"`\"} />\n          </div>\n          {checkAnswer ? (\n            correctAnswer == answer ? (\n              <>\n                <div>Poprawna odpowiedź</div>\n                <button>Prześlij rozwiązanie</button>\n              </>\n            ) : (\n              <div>Pomyśl o tym jeszcze raz</div>\n            )\n          ) : (\n            <button onClick={() => check(true)}>Dodaj odpowiedz!</button>\n          )}\n          {!Object.keys(taskConfig).length > 0 && accountType == \"teacher\" && (\n            <AddTaskToClass />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n})(OpenTask);\n"]},"metadata":{},"sourceType":"module"}