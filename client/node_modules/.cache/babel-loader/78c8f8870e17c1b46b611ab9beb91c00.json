{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_CLASSES, CLASSES_ERROR, ADD_CLASS, OPEN_CLASS } from './types'; // Get teacher's classes\n\nexport const getClasses = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/class/my');\n    dispatch({\n      type: GET_CLASSES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: CLASSES_ERROR,\n      payload: err.response\n    });\n  }\n};\nexport const addClass = (title, maxStudentsAmount) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    title,\n    maxStudentsAmount\n  });\n\n  try {\n    const res = await axios.post('/api/class/create', body, config);\n    dispatch({\n      type: ADD_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(({\n        msg\n      }) => {\n        dispatch(setAlert(msg, 'danger'));\n      });\n    }\n\n    ;\n    dispatch({\n      type: CLASSES_ERROR,\n      payload: err.response\n    });\n  }\n};\nexport const openClass = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/class/open/${id}`);\n    dispatch({\n      type: OPEN_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(({\n        msg\n      }) => {\n        dispatch(setAlert(msg, 'danger'));\n      });\n    }\n\n    ;\n    dispatch({\n      type: CLASSES_ERROR,\n      payload: err.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemo/client/src/actions/classes.js"],"names":["axios","setAlert","GET_CLASSES","CLASSES_ERROR","ADD_CLASS","OPEN_CLASS","getClasses","dispatch","res","get","type","payload","data","err","console","log","response","addClass","title","maxStudentsAmount","config","headers","body","JSON","stringify","post","errors","forEach","msg","openClass","id","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,SACEC,WADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,UAJF,QAKO,SALP,C,CAOA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,eAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,aADC;AAEPQ,MAAAA,OAAO,EAAEE,GAAG,CAACG;AAFN,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAOC,iBAAP,KAA6B,MAAMZ,QAAN,IAAkB;AACrE,QAAMa,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAiB;AADV;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACN,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAf,CAAb;;AACA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMR,KAAK,CAACyB,IAAN,CAAW,mBAAX,EAA+BH,IAA/B,EAAoCF,MAApC,CAAlB;AACAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,SADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBc,MAAjC;;AACA,QAAGA,MAAH,EAAU;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAe,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAW;AACxBrB,QAAAA,QAAQ,CAACN,QAAQ,CAAC2B,GAAD,EAAM,QAAN,CAAT,CAAR;AACD,OAFD;AAGD;;AAAA;AACDrB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,aADC;AAEPQ,MAAAA,OAAO,EAAEE,GAAG,CAACG;AAFN,KAAD,CAAR;AAID;AACF,CAzBM;AA2BP,OAAO,MAAMa,SAAS,GAAIC,EAAD,IAAQ,MAAMvB,QAAN,IAAkB;AACjD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC+B,GAAN,CAAW,mBAAkBD,EAAG,EAAhC,CAAlB;AACAvB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,UADC;AAEPM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBc,MAAjC;;AACA,QAAGA,MAAH,EAAU;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAe,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAW;AACxBrB,QAAAA,QAAQ,CAACN,QAAQ,CAAC2B,GAAD,EAAM,QAAN,CAAT,CAAR;AACD,OAFD;AAGD;;AAAA;AACDrB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,aADC;AAEPQ,MAAAA,OAAO,EAAEE,GAAG,CAACG;AAFN,KAAD,CAAR;AAID;AACF,CAnBM","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_CLASSES,\r\n  CLASSES_ERROR,\r\n  ADD_CLASS,\r\n  OPEN_CLASS\r\n} from './types';\r\n\r\n// Get teacher's classes\r\nexport const getClasses = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/class/my');\r\n    dispatch({\r\n      type: GET_CLASSES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: CLASSES_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n\r\nexport const addClass = (title,maxStudentsAmount) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({title,maxStudentsAmount});\r\n  try {\r\n    const res = await axios.post('/api/class/create',body,config);\r\n    dispatch({\r\n      type: ADD_CLASS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if(errors){\r\n      errors.forEach(({msg}) => {\r\n        dispatch(setAlert(msg, 'danger'));\r\n      });\r\n    };\r\n    dispatch({\r\n      type: CLASSES_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n\r\nexport const openClass = (id) => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/class/open/${id}`);\r\n    dispatch({\r\n      type: OPEN_CLASS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if(errors){\r\n      errors.forEach(({msg}) => {\r\n        dispatch(setAlert(msg, 'danger'));\r\n      });\r\n    };\r\n    dispatch({\r\n      type: CLASSES_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}