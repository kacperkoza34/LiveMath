{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\AddGroups.js\";\nimport React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addGroup } from '../../../../redux/actions/newTask';\n\nconst AddGroups = ({\n  variables,\n  addGroup\n}) => {\n  const [group, setGroup] = useState([]);\n  const [noVars, setNoVarsError] = useState(false);\n  const [noValues, setNoValuesError] = useState(false);\n  const mockVars = {};\n  variables.forEach(({\n    variable\n  }, index) => {\n    mockVars[variable] = null;\n  });\n\n  const addNewGroup = () => {\n    if (variables.length) {\n      setNoVarsError(false);\n      let allValuesAdded = false;\n      group.forEach((item, i) => {\n        allValuesAdded = variables.some(({\n          variable\n        }) => item[variable] == null);\n        if (item.answer == null) allValuesAdded = true;\n      });\n\n      if (!allValuesAdded) {\n        setNoValuesError(false);\n        setGroup([...group, {\n          id: uuidv4(),\n          answer: null,\n          ...mockVars\n        }]);\n      } else setNoValuesError(true);\n    } else setNoVarsError(true);\n  };\n\n  const addValues = (e, id, variable) => {\n    setNoValuesError(false);\n    setGroup([...group.map(subitem => {\n      if (id == subitem.id) return { ...subitem,\n        [variable]: e.target.value\n      };else return { ...subitem\n      };\n    })]);\n  };\n\n  const deleteItem = id => {\n    setGroup([...group.filter(removeItem => removeItem.id !== id)]);\n  };\n\n  const addGroupsToState = () => {\n    let allValuesAdded = false;\n    group.forEach((item, i) => {\n      allValuesAdded = variables.some(({\n        variable\n      }) => item[variable] == null);\n      if (item.answer == null) allValuesAdded = true;\n    });\n    if (!allValuesAdded) addGroup(group);else console.log('coś poszło nie tak z grupami');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Dodaj grupy\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addNewGroup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Dodaj grup\\u0119\"), noVars && /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"Nie podano zmiennych\"), noValues && /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Uzupe\\u0142nij wszystkie warto\\u015Bci w grupach\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, group.length > 0 && group.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, `Grupa ${index + 1}`), variables.map(({\n    variable\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, variable, ' = ', /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => addValues(e, item.id, variable),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Odpowiedz\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => addValues(e, item.id, 'answer'),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => deleteItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Delete\")))), group.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addGroupsToState(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }, \"Potwierd\\u017A grupy\"));\n};\n\nconst mapStateToProps = state => ({\n  variables: state.newTask.variables\n});\n\nexport default connect(mapStateToProps, {\n  addGroup\n})(AddGroups);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/AddGroups.js"],"names":["React","useState","TextareaAutosize","v4","uuidv4","connect","addGroup","AddGroups","variables","group","setGroup","noVars","setNoVarsError","noValues","setNoValuesError","mockVars","forEach","variable","index","addNewGroup","length","allValuesAdded","item","i","some","answer","id","addValues","e","map","subitem","target","value","deleteItem","filter","removeItem","addGroupsToState","console","log","mapStateToProps","state","newTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../../../redux/actions/newTask';\r\n\r\nconst AddGroups = ({variables, addGroup}) => {\r\n  const [group, setGroup] = useState([]);\r\n  const [noVars, setNoVarsError] = useState(false);\r\n  const [noValues, setNoValuesError] = useState(false);\r\n\r\n  const mockVars = {};\r\n\r\n  variables.forEach(({variable},index) => {\r\n    mockVars[variable] = null;\r\n  });\r\n\r\n\r\n  const addNewGroup = () => {\r\n    if(variables.length){\r\n      setNoVarsError(false);\r\n      let allValuesAdded = false;\r\n      group.forEach((item, i) => {\r\n        allValuesAdded = variables.some(({variable}) => item[variable] == null);\r\n        if(item.answer == null) allValuesAdded = true;\r\n      });\r\n\r\n      if(!allValuesAdded){\r\n        setNoValuesError(false);\r\n        setGroup(\r\n          [...group,\r\n            { id: uuidv4(),\r\n              answer: null,\r\n              ...mockVars\r\n            }\r\n          ]\r\n        );\r\n      }\r\n      else setNoValuesError(true);\r\n    }\r\n    else setNoVarsError(true);\r\n  };\r\n\r\n  const addValues = (e, id, variable) =>{\r\n    setNoValuesError(false);\r\n    setGroup([...group.map( subitem => {\r\n      if(id == subitem.id) return {...subitem, [variable]: e.target.value }\r\n      else return {...subitem}\r\n    })]);\r\n  }\r\n\r\n  const deleteItem = (id) =>{\r\n    setGroup([...group.filter(removeItem => removeItem.id !== id )]);\r\n  }\r\n  const addGroupsToState = () =>{\r\n    let allValuesAdded = false;\r\n    group.forEach((item, i) => {\r\n      allValuesAdded = variables.some(({variable}) => item[variable] == null);\r\n      if(item.answer == null) allValuesAdded = true;\r\n    });\r\n    if(!allValuesAdded) addGroup(group);\r\n    else console.log('coś poszło nie tak z grupami');\r\n  }\r\n  return(\r\n    <div>\r\n      <h3>Dodaj grupy</h3>\r\n      <button onClick={e => addNewGroup()}>Dodaj grupę</button>\r\n      { noVars && <h4>Nie podano zmiennych</h4>}\r\n      { noValues && <h4>Uzupełnij wszystkie wartości w grupach</h4>}\r\n      <ul>\r\n        { group.length > 0 && group.map( (item, index) => (\r\n          <li>\r\n            <div>{`Grupa ${index+1}`}</div>\r\n            {variables.map(({variable}) =>\r\n              (<div>{variable}{' = '}\r\n                 <input onChange={e => addValues(e,item.id, variable)} required></input>\r\n               </div>\r\n              )\r\n            )}\r\n            <div>Odpowiedz</div><input onChange={e => addValues(e,item.id, 'answer')} required></input>\r\n            <span onClick={() => deleteItem(item.id)}>Delete</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {group.length > 0 && <button onClick={()=>addGroupsToState()}>Potwierdź grupy</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  variables: state.newTask.variables\r\n})\r\n\r\nexport default connect(mapStateToProps,{addGroup})(AddGroups);\r\n"]},"metadata":{},"sourceType":"module"}