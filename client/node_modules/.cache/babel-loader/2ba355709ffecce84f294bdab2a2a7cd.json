{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMath/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST\r\n} from './types';\r\n\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n      const res = await axios.get('/api/posts');\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: res.data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\n\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n      const res = await axios.put(`/api/posts/like/${id}`);\r\n      dispatch({\r\n        type: UPDATE_LIKES,\r\n        payload: { id, likes: res.data}\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n      const res = await axios.put(`/api/posts/unlike/${id}`);\r\n      dispatch({\r\n        type: UPDATE_LIKES,\r\n        payload: { id, likes: res.data}\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n      const res = await axios.delete(`/api/posts/${id}`);\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      });\r\n      dispatch(setAlert('Post removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`/api/posts`, formData, config);\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: id\r\n      });\r\n      dispatch(setAlert('Post removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response }\r\n      });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}