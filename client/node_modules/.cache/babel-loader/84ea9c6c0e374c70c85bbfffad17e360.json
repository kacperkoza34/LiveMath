{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\OpenTask.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from './DisplayContent';\nimport { connect } from 'react-redux';\nimport { getOpenTask } from '../../../../redux/actions/tasks';\n\nconst getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getOpenTask(match.params.id);\n  }, []);\n  const [answer, setAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [randomIndex, setRandomIndex] = useState(null);\n\n  const setGroup = () => {\n    const index = getRandomIntInclusive(0, data.data.groups.length - 1);\n    setRandomIndex(index);\n    console.log(data.data.groups);\n    console.log(randomIndex); //setCorrectAnswer(data.data.groups[randomIndex].answer);\n  };\n\n  console.log(answer);\n  console.log(correctAnswer);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(DisplayContent, {\n    content: data.data.content,\n    variables: data.data.variables,\n    group: data.data.groups[randomIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), randomIndex === null ? setGroup() : '', /*#__PURE__*/React.createElement(\"input\", {\n    value: answer,\n    onChange: e => setAnswer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), correctAnswer == answer ? 'Brawo!' : ''));\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask\n})(OpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/OpenTask.js"],"names":["React","useEffect","useState","PropTypes","BeatLoader","DisplayContent","connect","getOpenTask","getRandomIntInclusive","min","max","Math","ceil","floor","random","OpenTask","match","tasks","data","isFetching","errors","params","id","answer","setAnswer","correctAnswer","setCorrectAnswer","randomIndex","setRandomIndex","setGroup","index","groups","length","console","log","name","content","variables","e","target","value","propTypes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport DisplayContent from './DisplayContent';\r\nimport { connect } from 'react-redux';\r\nimport { getOpenTask } from '../../../../redux/actions/tasks';\r\n\r\nconst getRandomIntInclusive = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst OpenTask = ({\r\n  match,\r\n  getOpenTask,\r\n  tasks: { data, isFetching, errors }\r\n}) =>{\r\n\r\n  useEffect(()=>{\r\n    getOpenTask(match.params.id);\r\n  },[]);\r\n\r\n  const [answer, setAnswer] = useState('');\r\n  const [correctAnswer, setCorrectAnswer] = useState(null);\r\n  const [randomIndex, setRandomIndex] = useState(null);\r\n\r\n  const setGroup = () =>{\r\n    const index = getRandomIntInclusive(0,data.data.groups.length-1);\r\n    setRandomIndex(index);\r\n    console.log(data.data.groups);\r\n    console.log(randomIndex);\r\n\r\n    //setCorrectAnswer(data.data.groups[randomIndex].answer);\r\n  }\r\n  console.log(answer);\r\n  console.log(correctAnswer);\r\n\r\n  return(\r\n    <>\r\n    {isFetching? <BeatLoader size={20}/> :\r\n      <>\r\n        <h4>{data.name}</h4>\r\n        <DisplayContent\r\n          content={data.data.content}\r\n          variables={data.data.variables}\r\n          group={data.data.groups[randomIndex]}\r\n        />\r\n        {randomIndex === null? setGroup() : '' }\r\n        <input value={answer} onChange={(e)=> setAnswer(e.target.value)}></input>\r\n        { correctAnswer == answer ? 'Brawo!' : '' }\r\n      </>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nOpenTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks\r\n})\r\n\r\nexport default connect(mapStateToProps,{getOpenTask})(OpenTask);\r\n"]},"metadata":{},"sourceType":"module"}