{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask\\\\OpenTaskFromApi.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport DisplayPromptsFromApi from \"./DisplayPrompts/DisplayPromptsFromApi\";\nimport SendSolution from \"./SendSolution/SendSolutionApi\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport { useOnePrompt, updateDescription, updateAnswer, sendOpenTaskResolution } from \"../../../../redux/actions/resolveTask\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  tasks: {\n    data,\n    isFetching,\n    errors,\n    taskConfig\n  }\n}) => {\n  const {\n    deadLine,\n    promptsAllowed,\n    usedPrompts,\n    descriptionRequired,\n    _id,\n    resolved,\n    group,\n    description,\n    answer,\n    toUpdate\n  } = taskConfig;\n  useEffect(() => {\n    getOpenTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [checkAnswer, check] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const countPoints = points => {\n    if (!usedPrompts) return points;\n    if (usedPrompts === 1) return (points / 2).toPrecision(2);\n    if (usedPrompts === 2) return (points / 4).toPrecision(2);\n  };\n\n  const sendSolution = (toUpdate = false) => {\n    if (descriptionRequired && !description.length) setError(\"Wymagany opis!\");else {\n      if (toUpdate) sendOpenTaskResolution({ ...taskConfig,\n        toUpdate: true\n      });else sendOpenTaskResolution({ ...taskConfig\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, correctAnswer == null && setCorrectAnswer(data.data.groups[group].answer), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.points,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Punkty: \", countPoints(data.points))), /*#__PURE__*/React.createElement(DisplayContent, {\n    content: data.data.content,\n    variables: data.data.variables,\n    group: data.data.groups[group],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayPromptsFromApi, {\n    resolved: resolved,\n    promptsAllowed: promptsAllowed,\n    usedPrompts: usedPrompts,\n    action: useOnePrompt,\n    accountType: accountType,\n    taskId: _id,\n    model: data.data.model,\n    variables: [...data.data.variables, ...data.data.additionalVariables],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Miejsce na link z rozwi\\u0105zaniem\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    maxCols: \"15\",\n    minCols: \"5\",\n    value: description,\n    onChange: e => {\n      setError(\"\");\n      updateDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Odpowied\\u017A:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: answer,\n    onChange: e => {\n      updateAnswer(e.target.value);\n      check(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Twoja odpowied\\u017A:\"), /*#__PURE__*/React.createElement(MathJax, {\n    content: \"`\" + answer + \"`\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SendSolutionApi, {\n    check: check,\n    checkAnswer: checkAnswer,\n    answer: answer,\n    correctAnswer: correctAnswer,\n    error: error,\n    resolved: resolved,\n    sendSolution: sendSolution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })));\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution\n})(OpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask/OpenTaskFromApi.js"],"names":["React","useEffect","useState","PropTypes","styles","BeatLoader","DisplayContent","DisplayPromptsFromApi","SendSolution","MathJax","TextareaAutosize","AddTaskToClass","connect","getOpenTask","setTaskConfig","useOnePrompt","updateDescription","updateAnswer","sendOpenTaskResolution","OpenTask","match","accountType","tasks","data","isFetching","errors","taskConfig","deadLine","promptsAllowed","usedPrompts","descriptionRequired","_id","resolved","group","description","answer","toUpdate","params","id","correctAnswer","setCorrectAnswer","checkAnswer","check","error","setError","countPoints","points","toPrecision","sendSolution","length","root","groups","name","content","variables","model","additionalVariables","e","target","value","propTypes","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./OpenTask.module.scss\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport DisplayContent from \"./DisplayContent/DisplayContent\";\nimport DisplayPromptsFromApi from \"./DisplayPrompts/DisplayPromptsFromApi\";\nimport SendSolution from \"./SendSolution/SendSolutionApi\";\nimport MathJax from \"../../MathJax\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport AddTaskToClass from \"../../AddTaskToClass/AddTaskToClass/AddTaskToClass\";\nimport { connect } from \"react-redux\";\nimport { getOpenTask, setTaskConfig } from \"../../../../redux/actions/tasks\";\nimport {\n  useOnePrompt,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n} from \"../../../../redux/actions/resolveTask\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  accountType,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n  tasks: { data, isFetching, errors, taskConfig },\n}) => {\n  const {\n    deadLine,\n    promptsAllowed,\n    usedPrompts,\n    descriptionRequired,\n    _id,\n    resolved,\n    group,\n    description,\n    answer,\n    toUpdate,\n  } = taskConfig;\n  useEffect(() => {\n    getOpenTask(match.params.id);\n    return () => setTaskConfig({});\n  }, []);\n\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [checkAnswer, check] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const countPoints = (points) => {\n    if (!usedPrompts) return points;\n    if (usedPrompts === 1) return (points / 2).toPrecision(2);\n    if (usedPrompts === 2) return (points / 4).toPrecision(2);\n  };\n\n  const sendSolution = (toUpdate = false) => {\n    if (descriptionRequired && !description.length) setError(\"Wymagany opis!\");\n    else {\n      if (toUpdate) sendOpenTaskResolution({ ...taskConfig, toUpdate: true });\n      else sendOpenTaskResolution({ ...taskConfig });\n    }\n  };\n\n  return (\n    <div className={styles.root}>\n      {isFetching ? (\n        <BeatLoader size={20} />\n      ) : (\n        <>\n          {correctAnswer == null &&\n            setCorrectAnswer(data.data.groups[group].answer)}\n          <h4>{data.name}</h4>\n          <p className={styles.points}>\n            <span>Punkty: {countPoints(data.points)}</span>\n          </p>\n          <DisplayContent\n            content={data.data.content}\n            variables={data.data.variables}\n            group={data.data.groups[group]}\n          />\n          <DisplayPromptsFromApi\n            resolved={resolved}\n            promptsAllowed={promptsAllowed}\n            usedPrompts={usedPrompts}\n            action={useOnePrompt}\n            accountType={accountType}\n            taskId={_id}\n            model={data.data.model}\n            variables={[\n              ...data.data.variables,\n              ...data.data.additionalVariables,\n            ]}\n          />\n          <h4>Miejsce na link z rozwiązaniem</h4>\n          <TextareaAutosize\n            maxCols=\"15\"\n            minCols=\"5\"\n            value={description}\n            onChange={(e) => {\n              setError(\"\");\n              updateDescription(e.target.value);\n            }}\n          ></TextareaAutosize>\n          <div className={styles.answer}>\n            <h4>Odpowiedź:</h4>\n            <input\n              value={answer}\n              onChange={(e) => {\n                updateAnswer(e.target.value);\n                check(false);\n              }}\n            ></input>\n          </div>\n          <div className={styles.answer}>\n            <h4>Twoja odpowiedź:</h4>\n            <MathJax content={\"`\" + answer + \"`\"} />\n          </div>\n          <SendSolutionApi\n            check={check}\n            checkAnswer={checkAnswer}\n            answer={answer}\n            correctAnswer={correctAnswer}\n            error={error}\n            resolved={resolved}\n            sendSolution={sendSolution}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  accountType: state.user.data.accountType,\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask,\n  setTaskConfig,\n  updateDescription,\n  updateAnswer,\n  sendOpenTaskResolution,\n})(OpenTask);\n"]},"metadata":{},"sourceType":"module"}