{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\SendTask.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst SendTask = ({}) => {\n  const [error, setError] = useState([]);\n\n  const sendTask = () => {\n    setError([]);\n    if (!newTask.content.trim().length) setError([...error, {\n      msg: 'Nie podano treśći zadania'\n    }]);\n    if (!newTask.variables.length) setError([...error, {\n      msg: 'Nie podano zmiennych'\n    }]);\n    if (!newTask.model.trim().length) setError([...error, {\n      msg: 'Nie podano wzoru'\n    }]);\n    if (!newTask.groups.length) setError([...error, {\n      msg: 'Nie podano grup'\n    }]);\n    let allValuesAdded = false;\n    group.forEach((item, i) => {\n      allValuesAdded = variables.some(({\n        variable\n      }) => item[variable] == null);\n      if (item.answer == null) allValuesAdded = true;\n    });\n    if (allValuesAdded) setError([...error, {\n      msg: 'Nie uzupełniono wszystkich wartości w grupach'\n    }]);\n    if (!error.lenght) console.log('wysyłam');\n  };\n\n  return;\n\n  /*#__PURE__*/\n  React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, error.length > 0 && error.map(({\n    msg\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 52\n    }\n  }, msg))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask\n});\n\nexport default connect(mapStateToProps)(SendTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/SendTask.js"],"names":["React","useState","PropTypes","connect","SendTask","error","setError","sendTask","newTask","content","trim","length","msg","variables","model","groups","allValuesAdded","group","forEach","item","i","some","variable","answer","lenght","console","log","map","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC,EAAD,KAAO;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,QAAQ,GAAG,MAAK;AACpBD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,QAAG,CAACE,OAAO,CAACC,OAAR,CAAgBC,IAAhB,GAAuBC,MAA3B,EAAmCL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACO,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AACnC,QAAG,CAACJ,OAAO,CAACK,SAAR,CAAkBF,MAAtB,EAA8BL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACO,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AAC9B,QAAG,CAACJ,OAAO,CAACM,KAAR,CAAcJ,IAAd,GAAqBC,MAAzB,EAAiCL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACO,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AACjC,QAAG,CAACJ,OAAO,CAACO,MAAR,CAAeJ,MAAnB,EAA2BL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACO,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AAE3B,QAAII,cAAc,GAAG,KAArB;AACAC,IAAAA,KAAK,CAACC,OAAN,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzBJ,MAAAA,cAAc,GAAGH,SAAS,CAACQ,IAAV,CAAe,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAgBH,IAAI,CAACG,QAAD,CAAJ,IAAkB,IAAjD,CAAjB;AACA,UAAGH,IAAI,CAACI,MAAL,IAAe,IAAlB,EAAwBP,cAAc,GAAG,IAAjB;AACzB,KAHD;AAIA,QAAGA,cAAH,EAAmBV,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACO,MAAAA,GAAG,EAAE;AAAN,KAAV,CAAD,CAAR;AAEnB,QAAG,CAACP,KAAK,CAACmB,MAAV,EAAkBC,OAAO,CAACC,GAAR,CAAY,SAAZ;AACnB,GAfD;;AAgBA;;AACE;AAAA,yDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBN,KAAK,CAACsB,GAAN,CAAW,CAAC;AAACf,IAAAA;AAAD,GAAD,kBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,GAAL,CAAtB,CADvB,CADF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAIL,QAAQ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAMH,CA3BD;;AA6BA,MAAMqB,eAAe,GAAIC,KAAD,KAAY;AAClCrB,EAAAA,OAAO,EAAEqB,KAAK,CAACrB;AADmB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,QAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SendTask = ({}) =>{\r\n\r\n  const [error, setError] = useState([]);\r\n\r\n  const sendTask = () =>{\r\n    setError([]);\r\n    if(!newTask.content.trim().length) setError([...error,{msg: 'Nie podano treśći zadania'}]);\r\n    if(!newTask.variables.length) setError([...error,{msg: 'Nie podano zmiennych'}]);\r\n    if(!newTask.model.trim().length) setError([...error,{msg: 'Nie podano wzoru'}]);\r\n    if(!newTask.groups.length) setError([...error,{msg: 'Nie podano grup'}]);\r\n\r\n    let allValuesAdded = false;\r\n    group.forEach((item, i) => {\r\n      allValuesAdded = variables.some(({variable}) => item[variable] == null);\r\n      if(item.answer == null) allValuesAdded = true;\r\n    });\r\n    if(allValuesAdded) setError([...error,{msg: 'Nie uzupełniono wszystkich wartości w grupach'}]);\r\n\r\n    if(!error.lenght) console.log('wysyłam');\r\n  }\r\n  return\r\n    <>\r\n      <ul>\r\n        {error.length > 0 && error.map( ({msg}) => <li>{msg}</li> ) }\r\n      </ul>\r\n      <button onClick={()=>sendTask()}>Zapisz zadanie</button>\r\n    </>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  newTask: state.newTask\r\n});\r\n\r\nexport default connect(mapStateToProps)(SendTask);\r\n"]},"metadata":{},"sourceType":"module"}