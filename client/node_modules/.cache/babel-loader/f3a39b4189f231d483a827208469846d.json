{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\AddTask\\\\OpenTask\\\\Features\\\\SendOpenTask\\\\SendOpenTask.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SendOpenTask\";\nimport { connect } from \"react-redux\";\nimport { sendOpenTask } from \"../../../../../../redux/actions/newTask\";\n\nconst SendOpenTask = ({\n  newTask,\n  sendOpenTask\n}) => {\n  const {\n    content,\n    name,\n    variables,\n    model,\n    groups,\n    section,\n    class: classNew\n  } = newTask;\n  const [errors, setErrors] = useState(\"\");\n\n  const sendTask = () => {\n    const errors = [];\n    if (content.trim().length) erros.push(\"Nie podano treści\");\n    if (name.trim().length) erros.push(\"Nie podano nazwy zadania\");\n    if (variables.length) erros.push(\"Nie podano zmiennych\");\n    if (model.trim().length) erros.push(\"Nie podano wzoru\");\n    if (groups.length) erros.push(\"Nie podano grup\");\n    if (section.length && classNew.length) erros.push(\"Nie wybrano działu\");\n\n    if (!erros.length) {\n      setErrors([]);\n      sendOpenTask(newTask);\n    } else setErrors(errors);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, errors.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, errors.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Zapisz zadanie\"));\n};\n\nconst mapStateToProps = state => ({\n  newTask: state.newTask.data\n});\n\nexport default connect(mapStateToProps, {\n  sendOpenTask\n})(SendOpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/AddTask/OpenTask/Features/SendOpenTask/SendOpenTask.js"],"names":["React","useState","PropTypes","styles","connect","sendOpenTask","SendOpenTask","newTask","content","name","variables","model","groups","section","class","classNew","errors","setErrors","sendTask","trim","length","erros","push","map","item","mapStateToProps","state","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yCAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWF,EAAAA;AAAX,CAAD,KAA+B;AAClD,QAAM;AACJG,IAAAA,OADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,KAAK,EAAEC;AAPH,MAQFR,OARJ;AASA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMiB,QAAQ,GAAG,MAAM;AACrB,UAAMF,MAAM,GAAG,EAAf;AACA,QAAIR,OAAO,CAACW,IAAR,GAAeC,MAAnB,EAA2BC,KAAK,CAACC,IAAN,CAAW,mBAAX;AAC3B,QAAIb,IAAI,CAACU,IAAL,GAAYC,MAAhB,EAAwBC,KAAK,CAACC,IAAN,CAAW,0BAAX;AACxB,QAAIZ,SAAS,CAACU,MAAd,EAAsBC,KAAK,CAACC,IAAN,CAAW,sBAAX;AACtB,QAAIX,KAAK,CAACQ,IAAN,GAAaC,MAAjB,EAAyBC,KAAK,CAACC,IAAN,CAAW,kBAAX;AACzB,QAAIV,MAAM,CAACQ,MAAX,EAAmBC,KAAK,CAACC,IAAN,CAAW,iBAAX;AACnB,QAAIT,OAAO,CAACO,MAAR,IAAkBL,QAAQ,CAACK,MAA/B,EAAuCC,KAAK,CAACC,IAAN,CAAW,oBAAX;;AACvC,QAAI,CAACD,KAAK,CAACD,MAAX,EAAmB;AACjBH,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAZ,MAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,KAHD,MAGOU,SAAS,CAACD,MAAD,CAAT;AACR,GAZD;;AAaA,sBACE,0CACGA,MAAM,CAACI,MAAP,GAAgB,CAAhB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACO,GAAP,CAAYC,IAAD,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADD,CADH,CAFJ,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAMN,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,CADF;AAYD,CApCD;;AAsCA,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,OAAO,EAAEmB,KAAK,CAACnB,OAAN,CAAcoB;AADW,CAAZ,CAAxB;;AAIA,eAAevB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,YAA3C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SendOpenTask\";\nimport { connect } from \"react-redux\";\nimport { sendOpenTask } from \"../../../../../../redux/actions/newTask\";\n\nconst SendOpenTask = ({ newTask, sendOpenTask }) => {\n  const {\n    content,\n    name,\n    variables,\n    model,\n    groups,\n    section,\n    class: classNew,\n  } = newTask;\n  const [errors, setErrors] = useState(\"\");\n  const sendTask = () => {\n    const errors = [];\n    if (content.trim().length) erros.push(\"Nie podano treści\");\n    if (name.trim().length) erros.push(\"Nie podano nazwy zadania\");\n    if (variables.length) erros.push(\"Nie podano zmiennych\");\n    if (model.trim().length) erros.push(\"Nie podano wzoru\");\n    if (groups.length) erros.push(\"Nie podano grup\");\n    if (section.length && classNew.length) erros.push(\"Nie wybrano działu\");\n    if (!erros.length) {\n      setErrors([]);\n      sendOpenTask(newTask);\n    } else setErrors(errors);\n  };\n  return (\n    <>\n      {errors.length > 0 && (\n        <ul>\n          {errors.map((item) => (\n            <li>{item}</li>\n          ))}\n        </ul>\n      )}\n      <button onClick={() => sendTask()}>Zapisz zadanie</button>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  newTask: state.newTask.data,\n});\n\nexport default connect(mapStateToProps, { sendOpenTask })(SendOpenTask);\n"]},"metadata":{},"sourceType":"module"}