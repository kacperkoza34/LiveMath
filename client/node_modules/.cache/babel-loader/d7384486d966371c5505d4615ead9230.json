{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport DashboardTeacher from \"./DashboardTeacher\";\nimport DashboardStudent from \"./DashboardStudent\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Dashboard = ({\n  user: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  const content = isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, data.accountType == \"student\" ? /*#__PURE__*/React.createElement(DashboardStudent, {\n    user: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(DashboardTeacher, {\n    user: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }));\n  return errors ? errors.data.msg : content;\n};\n\nDashboard.propTypes = {\n  getTeacherProfile: PropTypes.func.isRequired,\n  getStudentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","connect","Link","DashboardTeacher","DashboardStudent","BeatLoader","Dashboard","user","data","isFetching","errors","content","accountType","msg","propTypes","getTeacherProfile","func","isRequired","getStudentProfile","auth","object","profile","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB;AAAR,CAAD,KAA4C;AAC5D,QAAMC,OAAO,GAAGF,UAAU,gBACxB,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB,gBAGxB,0CACGD,IAAI,CAACI,WAAL,IAAoB,SAApB,gBACC,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAHF;AAWA,SAAOE,MAAM,GAAGA,MAAM,CAACF,IAAP,CAAYK,GAAf,GAAqBF,OAAlC;AACD,CAbD;;AAeAL,SAAS,CAACQ,SAAV,GAAsB;AACpBC,EAAAA,iBAAiB,EAAEf,SAAS,CAACgB,IAAV,CAAeC,UADd;AAEpBC,EAAAA,iBAAiB,EAAElB,SAAS,CAACgB,IAAV,CAAeC,UAFd;AAGpBE,EAAAA,IAAI,EAAEnB,SAAS,CAACoB,MAAV,CAAiBH,UAHH;AAIpBI,EAAAA,OAAO,EAAErB,SAAS,CAACoB,MAAV,CAAiBH;AAJN,CAAtB;;AAOA,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADsB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACqB,eAAD,CAAP,CAAyBhB,SAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport DashboardTeacher from \"./DashboardTeacher\";\nimport DashboardStudent from \"./DashboardStudent\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Dashboard = ({ user: { data, isFetching, errors } }) => {\n  const content = isFetching ? (\n    <BeatLoader size={50} />\n  ) : (\n    <>\n      {data.accountType == \"student\" ? (\n        <DashboardStudent user={data} />\n      ) : (\n        <DashboardTeacher user={data} />\n      )}\n    </>\n  );\n  return errors ? errors.data.msg : content;\n};\n\nDashboard.propTypes = {\n  getTeacherProfile: PropTypes.func.isRequired,\n  getStudentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}