{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    let res;\n\n    if (localStorage.token) {\n      res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register user\n\nexport const register = ({\n  name,\n  email,\n  password,\n  params\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    let res;\n\n    if (params.class) {\n      res = await axios.post(`/api/users/student/${params.teacher}/${params.class}`, body, config);\n    } else {\n      res = await axios.post(`/api/users/teacher/${params.teacher}`, body, config);\n    }\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login user\n\nexport const login = ({\n  email,\n  password,\n  accountType\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password,\n    accountType\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  window.location.reload();\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemo/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","console","log","register","name","email","password","params","config","headers","body","JSON","stringify","class","post","teacher","login","accountType","logout","window","location","reload"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load user\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if(localStorage.token){\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    let res;\r\n    if(localStorage.token){\r\n      res = await axios.get('/api/auth');\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      })\r\n    }\r\n  } catch (err){\r\n    console.log(err)\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    })\r\n  }\r\n};\r\n\r\n// Register user\r\n\r\nexport const register = ({ name, email, password, params}) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ name, email, password});\r\n  try {\r\n    let res;\r\n    if(params.class){\r\n      res = await axios.post(`/api/users/student/${params.teacher}/${params.class}`, body, config);\r\n    }\r\n    else {\r\n      res = await axios.post(`/api/users/teacher/${params.teacher}`, body, config);\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n};\r\n\r\n// Login user\r\n\r\nexport const login = ({email, password, accountType}) => async dispatch =>{\r\n  const config = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({email, password, accountType});\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    })\r\n  }\r\n};\r\n\r\n// LOGOUT\r\n\r\nexport const logout = () => dispatch => {\r\n  window.location.reload();\r\n  dispatch({type: CLEAR_PROFILE});\r\n  dispatch({type: LOGOUT});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}