{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\profile\\\\StudentProfile\\\\TasksList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearTasks, setTaskConfig } from \"../../../redux/actions/tasks\";\n\nconst TasksList = ({\n  tasks,\n  clearTasks,\n  setTaskConfig\n}) => {\n  const compare = (a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  };\n\n  const sortedTasks = [...tasks].sort(compare);\n\n  const displayStatus = (deadLine, resolved, description, toUpdate) => {\n    if (Date.parse(deadLine) < Date.now() && !resolved) return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.statusBox + \" \" + styles.failed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Niewykonane\");\n    if (Date.parse(deadLine) > Date.now() && !resolved) return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.statusBox + \" \" + styles.toDo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Do wykonania\");\n    if (resolved && toUpdate) return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.statusBox + \" \" + styles.toUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Pro\\u015Bba o weryfikacje\");\n    if (resolved) return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.statusBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: description,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Rozwi\\u0105zane\"));\n  };\n\n  const displayOpenTask = ({\n    task,\n    deadLine,\n    promptsAllowed,\n    descriptionRequired,\n    description,\n    usedPrompts,\n    resolved,\n    result,\n    _id,\n    group,\n    answer,\n    toUpdate,\n    messages\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.openTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      clearTasks();\n      setTaskConfig({\n        description,\n        deadLine,\n        resolved,\n        promptsAllowed,\n        descriptionRequired,\n        usedPrompts,\n        _id,\n        group,\n        answer,\n        toUpdate,\n        messages\n      });\n    },\n    to: `/display/openTask/${task._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, task.name)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, promptsAllowed ? `Wykorzystane podpowiedzi: ${usedPrompts}` : \"Podpowiedzi niedostÄ™pne\"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Opis: \", descriptionRequired ? \"wymagany\" : \"niewymagany\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Status: \", displayStatus(deadLine, resolved, description, toUpdate)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Wynik: \", `${result}/${task.points}`))));\n\n  const displayCloseTask = ({\n    task,\n    deadLine,\n    resolved,\n    result,\n    answers\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.closeTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      clearTasks();\n      setTaskConfig({\n        deadLine,\n        resolved,\n        result,\n        answers\n      });\n    },\n    to: `/display/closeTask/${task._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, task.name)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Status: \", displayStatus(deadLine, resolved)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Wynik: \", `${result}/${task.points}`))));\n\n  const displayBooleanTask = ({\n    task,\n    deadLine,\n    resolved,\n    result\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.booleanTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      clearTasks();\n      setTaskConfig({\n        deadLine,\n        resolved\n      });\n    },\n    to: `/display/booleanTask/${task._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, task.name)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Termin: \", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 26\n    }\n  }, deadLine))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Status: \", displayStatus(deadLine, resolved)), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Wynik: \", `${result}/${task.points}`))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, sortedTasks.map(item => {\n    if (item.taskType == \"taskClose\") return displayCloseTask(item);\n    if (item.taskType == \"taskOpen\") return displayOpenTask(item);\n    if (item.taskType == \"taskBoolean\") return displayBooleanTask(item);\n  }));\n};\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired\n};\nexport default connect(null, {\n  clearTasks,\n  setTaskConfig\n})(TasksList);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/profile/StudentProfile/TasksList.js"],"names":["React","PropTypes","styles","Moment","Link","connect","clearTasks","setTaskConfig","TasksList","tasks","compare","a","b","Date","parse","date","sortedTasks","sort","displayStatus","deadLine","resolved","description","toUpdate","now","statusBox","failed","toDo","displayOpenTask","task","promptsAllowed","descriptionRequired","usedPrompts","result","_id","group","answer","messages","openTask","name","points","displayCloseTask","answers","closeTask","displayBooleanTask","booleanTask","root","map","item","taskType","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TasksList.module.scss\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearTasks, setTaskConfig } from \"../../../redux/actions/tasks\";\n\nconst TasksList = ({ tasks, clearTasks, setTaskConfig }) => {\n  const compare = (a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  };\n  const sortedTasks = [...tasks].sort(compare);\n\n  const displayStatus = (deadLine, resolved, description, toUpdate) => {\n    if (Date.parse(deadLine) < Date.now() && !resolved)\n      return (\n        <div className={styles.statusBox + \" \" + styles.failed}>\n          Niewykonane\n        </div>\n      );\n    if (Date.parse(deadLine) > Date.now() && !resolved)\n      return (\n        <div className={styles.statusBox + \" \" + styles.toDo}>Do wykonania</div>\n      );\n    if (resolved && toUpdate)\n      return (\n        <div className={styles.statusBox + \" \" + styles.toUpdate}>\n          ProÅ›ba o weryfikacje\n        </div>\n      );\n    if (resolved)\n      return (\n        <div className={styles.statusBox}>\n          <a href={description} target=\"_blank\">\n            RozwiÄ…zane\n          </a>\n        </div>\n      );\n  };\n\n  const displayOpenTask = ({\n    task,\n    deadLine,\n    promptsAllowed,\n    descriptionRequired,\n    description,\n    usedPrompts,\n    resolved,\n    result,\n    _id,\n    group,\n    answer,\n    toUpdate,\n    messages,\n  }) => (\n    <div className={styles.openTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>\n            <Link\n              onClick={() => {\n                clearTasks();\n                setTaskConfig({\n                  description,\n                  deadLine,\n                  resolved,\n                  promptsAllowed,\n                  descriptionRequired,\n                  usedPrompts,\n                  _id,\n                  group,\n                  answer,\n                  toUpdate,\n                  messages,\n                });\n              }}\n              to={`/display/openTask/${task._id}`}\n            >\n              {task.name}\n            </Link>\n          </td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            {promptsAllowed\n              ? `Wykorzystane podpowiedzi: ${usedPrompts}`\n              : \"Podpowiedzi niedostÄ™pne\"}\n          </td>{\" \"}\n          <td>Opis: {descriptionRequired ? \"wymagany\" : \"niewymagany\"}</td>\n        </tr>\n        <tr>\n          <td>\n            Status: {displayStatus(deadLine, resolved, description, toUpdate)}\n          </td>{\" \"}\n          <td>Wynik: {`${result}/${task.points}`}</td>\n        </tr>\n      </table>\n    </div>\n  );\n\n  const displayCloseTask = ({ task, deadLine, resolved, result, answers }) => (\n    <div className={styles.closeTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>\n            {\" \"}\n            <Link\n              onClick={() => {\n                clearTasks();\n                setTaskConfig({ deadLine, resolved, result, answers });\n              }}\n              to={`/display/closeTask/${task._id}`}\n            >\n              {task.name}\n            </Link>\n          </td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>Status: {displayStatus(deadLine, resolved)}</td>{\" \"}\n          <td>Wynik: {`${result}/${task.points}`}</td>\n        </tr>\n      </table>\n    </div>\n  );\n\n  const displayBooleanTask = ({ task, deadLine, resolved, result }) => (\n    <div className={styles.booleanTask}>\n      <table>\n        <tr>\n          <td className={styles.name}>\n            {\" \"}\n            <Link\n              onClick={() => {\n                clearTasks();\n                setTaskConfig({ deadLine, resolved });\n              }}\n              to={`/display/booleanTask/${task._id}`}\n            >\n              {task.name}\n            </Link>\n          </td>{\" \"}\n          <td>\n            {\"Termin: \"} <Moment format=\"YYYY/MM/DD HH:mm\">{deadLine}</Moment>\n          </td>\n        </tr>\n        <tr>\n          <td>Status: {displayStatus(deadLine, resolved)}</td>{\" \"}\n          <td>Wynik: {`${result}/${task.points}`}</td>\n        </tr>\n      </table>\n    </div>\n  );\n\n  return (\n    <div className={styles.root}>\n      {sortedTasks.map((item) => {\n        if (item.taskType == \"taskClose\") return displayCloseTask(item);\n        if (item.taskType == \"taskOpen\") return displayOpenTask(item);\n        if (item.taskType == \"taskBoolean\") return displayBooleanTask(item);\n      })}\n    </div>\n  );\n};\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default connect(null, { clearTasks, setTaskConfig })(TasksList);\n"]},"metadata":{},"sourceType":"module"}