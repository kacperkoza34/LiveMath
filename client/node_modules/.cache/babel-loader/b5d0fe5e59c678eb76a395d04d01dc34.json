{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pekus\\\\Desktop\\\\desktop\\\\liveMathDemoRedux\\\\client\\\\src\\\\components\\\\tasks\\\\DisplayTask\\\\OpenTask.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getOpenTask } from '../../../redux/actions/tasks';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst OpenTask = ({\n  match,\n  getOpenTask,\n  tasks: {\n    data,\n    isFetching,\n    errors\n  }\n}) => {\n  useEffect(() => {\n    getOpenTask(match.params.id);\n  }, []);\n\n  const displayContent = () => {\n    let {\n      taskData,\n      modelValue,\n      taskContent\n    } = this.props;\n\n    for (let i in taskData) {\n      const str1 = taskData[i].variable;\n      const re = new RegExp(`{${str1}}`, \"g\");\n      taskContent = taskContent.replace(re, taskData[i].values[getRandomIntInclusive(0, taskData[i].values.length - 1)]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, taskContent);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching ? /*#__PURE__*/React.createElement(BeatLoader, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, data.data.content)));\n};\n\nOpenTask.propTypes = {};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps, {\n  getOpenTask\n})(OpenTask);","map":{"version":3,"sources":["C:/Users/pekus/Desktop/desktop/liveMathDemoRedux/client/src/components/tasks/DisplayTask/OpenTask.js"],"names":["React","useEffect","PropTypes","connect","getOpenTask","BeatLoader","OpenTask","match","tasks","data","isFetching","errors","params","id","displayContent","taskData","modelValue","taskContent","props","i","str1","variable","re","RegExp","replace","values","getRandomIntInclusive","length","name","content","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQH,EAAAA,WAAR;AAAqBI,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB;AAA5B,CAAD,KAA8D;AAC7EV,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,WAAW,CAACG,KAAK,CAACK,MAAN,CAAaC,EAAd,CAAX;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAI;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,UAAZ;AAAwBC,MAAAA;AAAxB,QAAwC,KAAKC,KAAjD;;AACA,SAAI,IAAIC,CAAR,IAAaJ,QAAb,EAAsB;AACpB,YAAMK,IAAI,GAAGL,QAAQ,CAACI,CAAD,CAAR,CAAYE,QAAzB;AACA,YAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAY,IAAGH,IAAK,GAApB,EAAwB,GAAxB,CAAX;AACAH,MAAAA,WAAW,GAAGA,WAAW,CAACO,OAAZ,CAAoBF,EAApB,EAAwBP,QAAQ,CAACI,CAAD,CAAR,CAAYM,MAAZ,CACpCC,qBAAqB,CAAC,CAAD,EAAGX,QAAQ,CAACI,CAAD,CAAR,CAAYM,MAAZ,CAAmBE,MAAnB,GAA0B,CAA7B,CADe,CAAxB,CAAd;AAGD;;AACD,wBAAO,0CAAGV,WAAH,CAAP;AACD,GAVD;;AAYA,sBACE,0CACCP,UAAU,gBAAE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBACT,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACmB,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,IAAI,CAACA,IAAL,CAAUoB,OAAd,CAFF,CAFF,CADF;AAUD,CA3BD;;AA6BAvB,QAAQ,CAACwB,SAAT,GAAqB,EAArB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC/BxB,EAAAA,KAAK,EAAEwB,KAAK,CAACxB;AADkB,CAAJ,CAA7B;;AAIA,eAAeL,OAAO,CAAC4B,eAAD,EAAiB;AAAC3B,EAAAA;AAAD,CAAjB,CAAP,CAAuCE,QAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getOpenTask } from '../../../redux/actions/tasks';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst OpenTask = ({match, getOpenTask, tasks: { data, isFetching, errors }}) =>{\r\n  useEffect(()=>{\r\n    getOpenTask(match.params.id);\r\n  },[]);\r\n\r\n  const displayContent = () => {\r\n    let { taskData, modelValue, taskContent } = this.props;\r\n    for(let i in taskData){\r\n      const str1 = taskData[i].variable;\r\n      const re = new RegExp(`{${str1}}`, \"g\");\r\n      taskContent = taskContent.replace(re, taskData[i].values[\r\n        getRandomIntInclusive(0,taskData[i].values.length-1)\r\n      ]);\r\n    }\r\n    return <>{taskContent}</>;\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {isFetching? <BeatLoader size={20}/> :\r\n      <>\r\n        <h4>{data.name}</h4>\r\n        <p>{data.data.content}</p>\r\n      </>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nOpenTask.propTypes = {\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  tasks: state.tasks\r\n})\r\n\r\nexport default connect(mapStateToProps,{getOpenTask})(OpenTask);\r\n"]},"metadata":{},"sourceType":"module"}